{"version":3,"sources":["hooks/utils/auth-utils.ts","components/utils/country-utils.ts","types.ts","hooks/useSnippet.tsx","assets/styles/index.ts","components/card-components/CardItem.tsx","components/Login.tsx","components/card-components/CardItemRow.tsx","assets/images/logic.jpg","assets/images/odz.jpg","assets/images/metallica.jpg","assets/images/dio.jpg","assets/images/post.jpg","assets/images/skepta.jpg","assets/data/dummy_data_songs.ts","assets/data/dummy_data_profiles.ts","hooks/useSpotifyAuth.tsx","App.tsx","components/Icon.tsx","components/index.ts","hooks/useAutoExchange.tsx","hooks/useMounted.tsx","screens/index.ts","screens/Explore.tsx","components/card-components/CardProvider.tsx","components/Settings.tsx","components/Filters.tsx","components/Message.tsx","components/ProfileItem.tsx","components/Playlists.tsx","assets/data/dummy_data_playlists.ts","components/card-components/Cards.tsx","components/card-components/CardStackHandler.tsx","assets/images/xxx.jpg","assets/images/travis.jpg","assets/images/banger.jpg","components/card-components/CardItemSmall.tsx","components/SettingItemSwitch.tsx","components/Error.tsx","screens/Liked.tsx","screens/Messages.tsx","assets/images/img01.jpeg","screens/Profile.tsx","screens/LoginPage.tsx","assets/swiperr-splash.png","components/TabBarIcon.tsx","screens/Settings.tsx","components/SettingItemDropdown.tsx","hooks/useError.tsx","assets/images/bg2.jpg"],"names":["webRedirectUri","makeRedirectUri","scheme","path","mobileRedirectUri","redirectUri","Platform","OS","console","log","discovery","authorizationEndpoint","tokenEndpoint","locationWithFlag","getCounryCode","split","countryCode","countries","name","flagEmoji","getFlagEmoji","contryName","alpha2","codePoints","toUpperCase","map","char","charCodeAt","String","fromCodePoint","dropdownSize","DeviceType","useContext","snippetContext","React","createContext","addTrackAndPlay","url","Promise","pause","play","replay","children","useState","audio","setAudio","addErrorText","useError","Audio","Sound","createAsync","uri","shouldPlay","isLooping","isMuted","volume","sound","playAsync","message","pauseAsync","stopAsync","useEffect","unloadAsync","undefined","Provider","value","WHITE","GRAY","BLACK","DIMENSION_WIDTH","Dimensions","get","width","DIMENSION_HEIGHT","height","CARD_HEIGHT","StyleSheet","create","containerCardItem","backgroundColor","borderRadius","borderWidth","alignItems","elevation","shadowOpacity","shadowRadius","shadowColor","shadowOffset","justifyContent","marginTop","marginLeft","imageStyle","margin","loginImageStyle","containerCardItemWeb","padding","containerCardItemSmall","containerCardItemRow","flexDirection","playlistText","fontSize","color","matchesCardItem","paddingVertical","paddingHorizontal","matchesTextCardItem","exploreTopCenter","textAlign","exploreTopCenterText","marginHorizontal","fontWeight","lighterBar","exploreTopCenterTextActive","volumeSlider","display","descriptionCardItem","artist","artistText","releaseDate","reminderText","online","marginRight","offline","actionsCardItem","button","miniButton","smallImageStyle","playlistImage","smallNameStyle","trackStyle","flexWrap","flexShrink","settings","settingsText","filters","login","loginText","containerMessage","flex","avatar","marginVertical","paddingTop","containerProfileItem","paddingBottom","matchesProfileItem","alignSelf","matchesTextProfileItem","messageName","descriptionProfileItem","info","iconProfile","infoContent","playlistsTopRow","bg","resizeMode","position","top","title","containerHome","zIndex","containerPlaylists","borderTopLeftRadius","borderTopRightRadius","containerLiked","containerMessages","containerProfile","photo","topIconLeft","paddingLeft","topIconRight","paddingRight","actionsProfile","textButton","circledButton","roundedButton","tabButtonText","textTransform","iconMenu","errorContainer","borderBottomWidth","borderColor","testText","TopRow","useSpotifyContext","user","queueAndSkip","userRecommendedTracks","recommendedTracks","newReleases","SwipeCardContext","showType","setShowType","recommendedIndex","newReleasesIndex","recommendedActiveStyle","styles","newActiveStyle","style","onPress","hasActions","image","popularity","track","index","id","updateVolume","rgb","setPressedTrack","setShowPlaylists","swiper","allowVolumeControll","setRecommendedIndex","setNewReleasesIndex","isPlaying","setIsPlaying","switchPlayingState","token","setVolume","playSnippets","useSnippetContext","length","slice","isLandscape","landScapeWeb","styleContainer","flexDir","source","size","minimumValue","maximumValue","step","minimumTrackTintColor","maximumTrackTintColor","thumbTintColor","onValueChange","onSlidingComplete","ERROR","swipeLeft","FLASH_ACTIONS","swipeBack","DISLIKE_ACTIONS","SPOTIFY_GREEN","swipeRight","useFontAwesome","navigation","promptAsync","navigate","DARK_GRAY","module","exports","match","album","IMAGE_LOGIC","IMAGE_XXX","IMAGE_SKEPTA","IMAGE_BANGER","IMAGE_ODZ","IMAGE_TRAVIS","IMAGE_METALLICA","location","IMAGE_DIO","IMAGE_POST","isOnline","description","age","IMAGE_01","IMAGE_02","IMAGE_03","IMAGE_04","IMAGE_05","IMAGE_06","IMAGE_07","infoPersonal","infoMusic","lastSeen","topTracks","topArtists","topGenres","IMAGE_08","IMAGE_09","IMAGE_10","SpotifyAuthContext","WebBrowser","maybeCompleteAuthSession","getRecommendedTracks","likeSong","likedSongs","getLikedSongs","getPlaylists","playlists","addTrackToPlaylist","getNewReleases","defaultPlaylist","storeDefaultPlaylist","availableMarkets","setChosenMarket","chosenMarket","setPlaySnippets","storeData","key","jsonValue","JSON","stringify","AsyncStorage","setItem","getData","getItem","parse","then","setDefaultPlaylist","getDefaultPlaylist","val","setUser","setRecommendedTracks","userPlaylists","setUserPlaylists","setLikedSongs","setNewReleases","setTopGenres","setTopArtists","setTopTracks","setAvailableMarkets","loadedDefaultPlaylist","config","setConfig","setAllowVolumeControll","pauseSnippet","playSnippet","useAuthRequest","clientId","scopes","usePKCE","clientSecret","response","useAutoExchange","type","params","code","tokenExchangeError","r","Math","floor","random","market","axios","res","albumUris","data","albums","items","forEach","item","push","sort","albumUriString","join","releases","getLocation","randomInt","tracks","images","release_date","filter","preview_url","catch","err","error","playlist","owner","display_name","a","b","playlistId","trackId","post","markets","getCountryName","nameWithFlag","put","ids","trackUri","meEndpoint","country","getTopUserItems","allArtists","allTracks","availableGenres","otherGenres","allGenres","genres","topTracksText","topArtistsText","i","recomendationEndpoint","genre","includes","randomIndex","selectedTrack","splice","selectedArtist","seedGenres","seedArtists","seedTracks","configRecommendations","seed_artists","seed_genres","seed_tracks","limit","queueSongAndSkip","both","concat","reason","playNextSong","device","COMPUTER","SMARTPHONE","warn","headers","Authorization","accessToken","getPlaybackState","getUserData","getAvailibleMarkets","getUserRecommendedTracks","Stack","createStackNavigator","Tab","createBottomTabNavigator","ErrorProvider","SnippetProvider","SpotifyAuthProvider","NavigationContainer","Error","Navigator","screenOptions","headerStyle","cardStyle","Screen","options","headerShown","animationEnabled","component","LoginPage","tabBarOptions","showLabel","activeTintColor","PRIMARY_COLOR","inactiveTintColor","labelStyle","borderTopWidth","marginBottom","Explore","tabBarIcon","focused","iconName","text","Liked","Settings","Profile","FontAwesome","Ionicons","useReducer","state","action","currentState","setCurrentState","isMounted","useMounted","exchangeCodeAsync","current","exchangeError","useRef","Cards","Playlists","setRGB","pressedTrack","showPlaylists","setSwiper","lastMessage","followerCount","SafeAreaView","swipeTop","dummyDataPlaylists","require","props","_style","userTopItems","convertRGBgreen","d","convertRGBred","jumpToCardIndex","cards","renderCard","card","artists","useViewOverflow","onSwiped","cardIndex","onSwipedAborted","onSwipedAll","onSwipedRight","onSwiping","x","_y","ref","verticalSwipe","stackSize","swipeBackCard","DATA","matches","_cardIndex","infinite","explanation","container","textContainer","trackColor","false","true","thumbColor","ios_backgroundColor","borderBottomColor","errorTexts","showComponent","setShowComponent","setErrorTexts","popErrorText","toRef","setTimeout","clearTimeout","BG_IMAGE","numColumns","keyExtractor","toString","renderItem","CardItemSmall","Icon","DEMO","Message","mockTopGenres","mockTopArtists","mockTopTracks","ProfileItem","followers","total","BACKGROUND_IMAGE","Login","LoginMock","iconFocused","likedSongString","MockSettingItems","exampleBool","setExampleBool","header","defaultValue","SettingItemSwitch","MEDIUM","SettingItems","playlistShowValue","setPlaylistShowValue","resolve","LARGE","onSelect","find","playlistName","ddSize","dropdownNonpress","dropdownStyle","dropdown","dropdownTextHighlightStyle","dropdownTextHighlight","textStyle","showsVerticalScrollIndicator","dropdownTextStyle","dropdownText","_index","DARKER_GRAY","ErrorContext","newArray"],"mappings":"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","file":"static/js/app.ada3dd02.chunk.js","sourcesContent":["import { Platform } from 'react-native';\nimport { makeRedirectUri } from 'expo-auth-session';\n\n// TODO: can maybe be replaced with: getRedirectUrl from expo auth session\n\n// const redirectUri = Platform.OS === 'web' ? REDIRECT_URI_WEB : REDIRECT_URI;\nconst webRedirectUri = makeRedirectUri({ scheme: 'swiperr', path: 'swiperr' });\nconst mobileRedirectUri = makeRedirectUri({ scheme: 'swiperr' });\n\nconst redirectUri = Platform.OS === 'web'\n  ? webRedirectUri\n  : mobileRedirectUri;\nconsole.log(redirectUri);\n// TODO: add all endpoints to here instead of useSpotifyAuth\nconst authorizationEndpoint = 'https://accounts.spotify.com/authorize';\nconst tokenEndpoint = 'https://accounts.spotify.com/api/token';\nconst meEndpoint = 'https://api.spotify.com/v1/me';\nconst recomendationEndpoint = 'https://api.spotify.com/v1/recommendations';\n\nconst discovery = {\n  authorizationEndpoint,\n  tokenEndpoint,\n};\n\nexport {\n  redirectUri, webRedirectUri, mobileRedirectUri, discovery, meEndpoint, recomendationEndpoint,\n};\n","import { countries } from 'country-data';\n\nexport function getCountryName(countryCode: string) {\n  const country = countries[countryCode].name;\n  return country;\n}\n\nexport function getCounryCode(contryName: string) {\n  const countryCode = countries[contryName].alpha2;\n  return countryCode;\n}\n\nexport function getCounryCodeFromLocation(locationWithFlag: string) {\n  const countryName = locationWithFlag.split(' ')[0];\n  return getCounryCode(countryName);\n}\n\nexport function getFlagEmoji(countryCode: string) {\n  const codePoints = countryCode\n    .toUpperCase()\n    .split('')\n    .map((char) => 127397 + char.charCodeAt(0));\n  return String.fromCodePoint(...codePoints);\n}\n\nexport function getLocation(countryCode: string) {\n  // get flag emoji\n  const flagEmoji = getFlagEmoji(countryCode);\n  // get country name\n  const country = countries[countryCode].name;\n  return `${country} ${flagEmoji}`;\n}\n","import CardStack from \"react-native-card-stack-swiper\";\nimport Swiper from \"react-native-deck-swiper\";\n\nexport type CardItemT = {\n  description?: string;\n  hasActions?: boolean;\n  hasVariant?: boolean;\n  image: any;\n  artist: string;\n  popularity?: string;\n  track: string;\n  previousVolume?: number;\n  setVolume?: (val: number) => void;\n  color?: string;\n  id: number,\n  releaseDate?: string;\n};\n\nexport type CardItemRowT = {\n  name: string;\n  image: any;\n}\n\n\nexport type SwipedCardContextT = {\n  volume: number;\n  updateVolume: (value: number) => void;\n  rgb: string;\n  setRGB: (value: string) => void;\n  pressedTrack: any;\n  setPressedTrack: (value: any) => void;\n  showPlaylists: boolean;\n  setShowPlaylists: (value: boolean) => void;\n  swiper: Swiper<DataSong> | null;\n  setSwiper: (value: Swiper<DataSong> | null) => void;\n  showType: string;\n  setShowType: (value: string) => void;\n  recommendedIndex: number;\n  setRecommendedIndex: (value: number) => void;\n  newReleasesIndex: number;\n  setNewReleasesIndex: (value: number) => void;\n  allowVolumeControll: boolean;\n}\n\n\nexport type IconT = {\n  name: any;\n  size: number;\n  color: string;\n  style?: any;\n  onPress?: (e: any) => void;\n  useFontAwesome?: boolean;\n};\n\nexport type MessageT = {\n  image: any;\n  lastMessage: string;\n  name: string;\n};\n\nexport type ProfileItemT = {\n  followerCount?: string;\n  topTracks?: string;\n  topArtists?: string;\n  topGenres?: string;\n  location?: string;\n  name: string;\n};\n\nexport type TabBarIconT = {\n  focused: boolean;\n  iconName: any;\n  text: string;\n};\n\nexport type DataSong = {\n  id: number;\n  track: string;\n  match: string;\n  artist: string;\n  album: string;\n  image: any;\n  location?: string;  \n};\n\n\nexport type DataProfile = {\n  id: number;\n  name: string;\n  isOnline: boolean;\n  match: string; // . How similiar is this person to you musically?\n  description: string;\n  message: string;\n  image: any;\n  age?: string;\n  infoPersonal?: string;\n  infoMusic?: string;\n  lastSeen?: string;\n  location?: string;\n  topTracks?: string;\n  topArtists?: string;\n  topGenres?: string;\n};\n\nexport type SettingItemSwitchT = {\n  text: string;\n  onValueChange: (value: boolean) => void;\n  value: boolean;\n  icon?: any;\n  explanation?: string;\n};\n\nexport type SettingItemDropdownT = {\n  header: string;\n  explanation?: string;\n  options: string[];\n  defaultValue?: string;\n  onSelect?: (value: any) => void;\n  dropdownSize?: dropdownSize;\n}\n\nexport enum dropdownSize {\n  SMALL = \"small\",\n  MEDIUM = \"medium\",\n  LARGE = \"large\",\n}\n\nexport enum DeviceType {\n  COMPUTER = \"Computer\",\n  SMARTPHONE = \"Smartphone\",\n  SPEAKER = \"speaker\",\n}","import React, { useContext, useEffect, useState } from 'react';\nimport { Audio } from 'expo-av';\nimport useError from './useError';\n\nconst snippetContext: React.Context<{\n  addTrackAndPlay: (url: string) => Promise<void>,\n  pause: () => Promise<void>,\n  play: () => Promise<void>,\n  replay: () => Promise<void>\n}> = React.createContext({\n  addTrackAndPlay: (url: string) => new Promise<void>(() => {}),\n  pause: () => new Promise<void>(() => {}),\n  play: () => new Promise<void>(() => {}),\n  replay: () => new Promise<void>(() => {}),\n});\n\ninterface Props {\n  children: React.ReactNode\n}\n\nexport const SnippetProvider: React.ReactNode = ({ children }: Props) => {\n  const [audio, setAudio] = useState<Audio.Sound | null>(null);\n\n  // useErrorContext\n  const { addErrorText } = useError();\n\n  const addTrackAndPlay = async (url: string) => {\n    // console.log('Loading Sound');\n\n    // wait for pause then play\n    const { sound } = await Audio.Sound.createAsync(\n      { uri: url },\n      {\n        shouldPlay: true,\n        isLooping: false,\n        isMuted: false,\n        volume: 1,\n      },\n    );\n    setAudio(sound);\n  };\n  const play = async () => {\n    try {\n      if (audio) {\n        await audio.playAsync();\n      }\n    } catch (e) {\n      addErrorText(e.message);\n    }\n  };\n\n  const pause = async () => {\n    try {\n      if (audio) {\n        await audio.pauseAsync();\n      }\n    } catch (e) {\n      addErrorText(e.message);\n    }\n  };\n\n  const replay = async () => {\n    if (audio) {\n      await audio.stopAsync();\n      await audio.playAsync();\n    }\n  };\n\n  useEffect(() => (audio\n    ? () => {\n      // console.log('Unloading audio');\n      audio.unloadAsync();\n    }\n    : undefined), [audio]);\n\n  return (\n    <snippetContext.Provider value={{\n      addTrackAndPlay,\n      pause,\n      play,\n      replay,\n    }}\n    >\n      {children}\n    </snippetContext.Provider>\n  );\n};\n\nexport default function useSnippetContext() {\n  // console.log('Using Native snippets');\n  return useContext(snippetContext);\n}\n","import { StyleSheet, Dimensions } from 'react-native';\n\nexport const PRIMARY_COLOR = '#7444C0';\nexport const SECONDARY_COLOR = '#5636B8';\nexport const WHITE = '#FFFFFF';\nexport const GRAY = '#757E90';\nexport const DARK_GRAY = '#363636'; // rgb(54, 54, 54)\nexport const BLACK = '#000000';\nexport const DARKER_GRAY = '#303030';\nexport const SPOTIFY_GREEN = '#1DB954';\n\nexport const ONLINE_STATUS = '#46A575';\nexport const OFFLINE_STATUS = '#D04949';\n\nexport const STAR_ACTIONS = '#FFA200';\nexport const LIKE_ACTIONS = '#B644B2';\nexport const DISLIKE_ACTIONS = '#363636';\nexport const FLASH_ACTIONS = '#5028D7';\n\nexport const ERROR = '#770707';\n\nexport const DIMENSION_WIDTH = Dimensions.get('window').width; // window not screen\nexport const DIMENSION_HEIGHT = Dimensions.get('window').height;\n\nexport const CARD_HEIGHT = (DIMENSION_HEIGHT - 50) * 0.9;\n\nexport default StyleSheet.create({\n  // COMPONENT - CARD ITEM\n  containerCardItem: {\n    backgroundColor: DARK_GRAY,\n    borderRadius: 20,\n    borderWidth: 1,\n    // borderColor: SPOTIFY_GREEN,\n    height: CARD_HEIGHT,\n    alignItems: 'center',\n    elevation: 1,\n    shadowOpacity: 0.05,\n    shadowRadius: 10,\n    shadowColor: BLACK,\n    shadowOffset: { height: 0, width: 0 },\n    // center children\n    justifyContent: 'center',\n    marginTop: -30,\n    marginLeft: -25,\n\n  },\n\n  imageStyle: {\n    borderRadius: 8,\n    width: DIMENSION_WIDTH - 80,\n    height: CARD_HEIGHT / 2,\n    margin: 20,\n  },\n\n  loginImageStyle: {\n    width: '90%',\n    height: 400,\n  },\n\n  containerCardItemWeb: {\n    width: DIMENSION_WIDTH - 40,\n    height: CARD_HEIGHT,\n    padding: 0,\n\n  },\n\n  containerCardItemSmall: {\n    backgroundColor: DARK_GRAY,\n    borderRadius: 8,\n    alignItems: 'center',\n    margin: 10,\n    elevation: 1,\n    shadowOpacity: 0.05,\n    shadowRadius: 10,\n    shadowColor: BLACK,\n    shadowOffset: { height: 0, width: 0 },\n    width: (DIMENSION_WIDTH / 2) - 30,\n    // center children\n    justifyContent: 'center',\n  },\n\n  containerCardItemRow: {\n    backgroundColor: DARK_GRAY,\n    borderRadius: 2,\n    flexDirection: 'row',\n    alignItems: 'center',\n    margin: 10,\n    elevation: 1,\n    shadowOpacity: 0.05,\n    shadowRadius: 10,\n    shadowColor: BLACK,\n    shadowOffset: { height: 0, width: 0 },\n    width: DIMENSION_WIDTH - 30,\n  },\n  playlistText: {\n    fontSize: 30,\n    color: WHITE,\n    marginLeft: '5%',\n  },\n\n  matchesCardItem: {\n    marginTop: -35,\n    backgroundColor: PRIMARY_COLOR,\n    paddingVertical: 7,\n    paddingHorizontal: 20,\n    borderRadius: 20,\n  },\n  matchesTextCardItem: {\n    color: WHITE,\n  },\n\n  exploreTopCenter: {\n    textAlign: 'center',\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n\n  exploreTopCenterText: {\n    color: GRAY,\n    fontSize: 20,\n    marginHorizontal: 10,\n    fontWeight: 'bold',\n  },\n\n  lighterBar: {\n    fontWeight: 'normal',\n  },\n\n  exploreTopCenterTextActive: {\n    color: WHITE,\n  },\n\n  volumeSlider: {\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  descriptionCardItem: {\n    color: GRAY,\n    textAlign: 'center',\n  },\n  artist: {\n    alignItems: 'center',\n    textAlign: 'center',\n  },\n  artistText: {\n    color: GRAY,\n    fontSize: 20,\n    textAlign: 'center',\n    fontWeight: 'bold',\n  },\n\n  releaseDate: {\n    color: GRAY,\n    fontSize: 15,\n    textAlign: 'center',\n  },\n\n  reminderText: {\n    color: GRAY,\n    fontSize: 15,\n    textAlign: 'center',\n  },\n  online: {\n    width: 6,\n    height: 6,\n    backgroundColor: ONLINE_STATUS,\n    borderRadius: 3,\n    marginRight: 4,\n  },\n  offline: {\n    width: 6,\n    height: 6,\n    backgroundColor: OFFLINE_STATUS,\n    borderRadius: 3,\n    marginRight: 4,\n  },\n  actionsCardItem: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingVertical: 5,\n  },\n  button: {\n    width: 60,\n    height: 60,\n    borderRadius: 30,\n    backgroundColor: WHITE,\n    marginHorizontal: 7,\n    alignItems: 'center',\n    justifyContent: 'center',\n    elevation: 1,\n    shadowOpacity: 0.15,\n    shadowRadius: 20,\n    shadowColor: DARK_GRAY,\n    shadowOffset: { height: 10, width: 0 },\n  },\n  miniButton: {\n    width: 45,\n    height: 45,\n    borderRadius: 30,\n    backgroundColor: WHITE,\n    marginHorizontal: 7,\n    alignItems: 'center',\n    justifyContent: 'center',\n    elevation: 1,\n    shadowOpacity: 0.15,\n    shadowRadius: 20,\n    shadowColor: DARK_GRAY,\n    shadowOffset: { height: 10, width: 0 },\n  },\n  // SMALL CARD (CARDITEMSMALL)\n  smallImageStyle: {\n    borderRadius: 8,\n    // width: DIMENSION_WIDTH / 2 - 40 ,\n    width: '100%',\n    height: 170,\n    margin: 0,\n    flexDirection: 'column',\n  },\n  playlistImage: {\n    borderRadius: 2,\n    height: 120,\n    width: 120,\n    margin: 0,\n  },\n\n  smallNameStyle: {\n    color: WHITE,\n    fontSize: 15,\n    textAlign: 'center',\n    fontWeight: 'bold',\n  },\n  // LARGE CARD (CARDITEM)\n\n  trackStyle: {\n    color: WHITE,\n    width: '100%',\n    textAlign: 'center',\n    flexWrap: 'wrap',\n    flexShrink: 1,\n    fontSize: 25,\n    fontWeight: 'bold',\n  },\n\n  // COMPONENT - SETTINGS\n  settings: {\n    backgroundColor: WHITE,\n    padding: 10,\n    borderRadius: 20,\n    width: 40,\n    elevation: 1,\n    shadowOpacity: 0.05,\n    shadowRadius: 10,\n    shadowColor: BLACK,\n    shadowOffset: { height: 0, width: 0 },\n  },\n  settingsText: {\n    color: DARK_GRAY,\n    fontSize: 13,\n    textAlign: 'center',\n  },\n\n  // COMPONENT - FILTERS\n  filters: {\n    backgroundColor: WHITE,\n    padding: 10,\n    borderRadius: 20,\n    width: 40,\n    elevation: 1,\n    shadowOpacity: 0.05,\n    shadowRadius: 10,\n    shadowColor: BLACK,\n    shadowOffset: { height: 0, width: 0 },\n    alignItems: 'center',\n  },\n\n  login: {\n    backgroundColor: WHITE,\n    padding: 10,\n    borderRadius: 20,\n    width: 180,\n    height: 70,\n    elevation: 1,\n    shadowOpacity: 0.05,\n    shadowRadius: 10,\n    shadowColor: BLACK,\n    shadowOffset: { height: 0, width: 0 },\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginTop: 10,\n\n  },\n\n  loginText: {\n    color: DARK_GRAY,\n    fontSize: 30,\n    textAlign: 'center',\n    fontWeight: 'bold',\n    // box shadow\n    shadowOpacity: 0.5,\n    shadowRadius: 10,\n    shadowColor: BLACK,\n    shadowOffset: { height: 0, width: 0 },\n\n  },\n\n  // COMPONENT - MESSAGE\n  containerMessage: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    flexDirection: 'row',\n    paddingHorizontal: 10,\n    width: DIMENSION_WIDTH - 100,\n  },\n  avatar: {\n    borderRadius: 30,\n    width: 60,\n    height: 60,\n    marginRight: 20,\n    marginVertical: 15,\n  },\n  message: {\n    color: GRAY,\n    fontSize: 12,\n    paddingTop: 5,\n  },\n\n  // COMPONENT - PROFILE ITEM\n  containerProfileItem: {\n    backgroundColor: '#232323',\n    paddingHorizontal: 10,\n    paddingBottom: 25,\n    margin: 20,\n    borderRadius: 8,\n    marginTop: -65,\n    elevation: 1,\n    shadowOpacity: 0.05,\n    shadowRadius: 10,\n    shadowColor: BLACK,\n    shadowOffset: { height: 0, width: 0 },\n  },\n  matchesProfileItem: {\n    width: 135,\n    marginTop: -15,\n    backgroundColor: PRIMARY_COLOR,\n    paddingVertical: 7,\n    paddingHorizontal: 20,\n    borderRadius: 20,\n    alignSelf: 'center',\n  },\n  matchesTextProfileItem: {\n    color: WHITE,\n    textAlign: 'center',\n  },\n  name: {\n    paddingTop: 25,\n    paddingBottom: 5,\n    color: WHITE,\n    fontSize: 15,\n    textAlign: 'center',\n  },\n  messageName: {\n    paddingTop: 25,\n    paddingBottom: 5,\n    color: WHITE,\n    fontSize: 15,\n    textAlign: 'left',\n  },\n  descriptionProfileItem: {\n    color: GRAY,\n    textAlign: 'center',\n    paddingBottom: 20,\n    fontSize: 13,\n  },\n  info: {\n    paddingVertical: 8,\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  iconProfile: {\n    fontSize: 12,\n    color: DARK_GRAY,\n    paddingHorizontal: 10,\n  },\n  infoContent: {\n    color: GRAY,\n    fontSize: 13,\n  },\n\n  playlistsTopRow: {\n    flexDirection: 'row',\n    width: '90%',\n    marginLeft: '5%',\n    marginRight: '5%',\n    // vertically align items center\n    alignItems: 'center',\n  },\n\n  // CONTAINER - GENERAL\n  bg: {\n    flex: 1,\n    resizeMode: 'cover',\n    width: DIMENSION_WIDTH,\n    height: DIMENSION_HEIGHT,\n    position: 'absolute',\n  },\n  top: {\n    paddingTop: 50,\n    marginHorizontal: 10,\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    textAlign: 'center',\n    // text size 20\n\n  },\n  title: {\n    paddingBottom: 10,\n    fontSize: 22,\n    color: WHITE,\n    fontWeight: 'bold',\n    textAlign: 'center',\n    width: '100%',\n  },\n\n  // CONTAINER - HOME\n  containerHome: {\n    marginHorizontal: 10,\n    zIndex: 1,\n    elevation: 1,\n    // display: \"none\",\n  },\n\n  containerPlaylists: {\n    flex: 1,\n    backgroundColor: WHITE,\n    marginTop: 200 - CARD_HEIGHT,\n    borderTopLeftRadius: 20,\n    borderTopRightRadius: 20,\n    borderRadius: 6,\n    zIndex: 3,\n    elevation: 3,\n  },\n\n  // CONTAINER - MATCHES\n  containerLiked: {\n    justifyContent: 'space-between',\n    flex: 1,\n    paddingHorizontal: 10,\n  },\n\n  // CONTAINER - MESSAGES\n  containerMessages: {\n    justifyContent: 'space-between',\n    flex: 1,\n    paddingHorizontal: 10,\n  },\n\n  // CONTAINER - PROFILE\n  containerProfile: { marginHorizontal: 0 },\n  photo: {\n    width: DIMENSION_WIDTH,\n    height: 450,\n  },\n  topIconLeft: {\n    paddingLeft: 20,\n  },\n  topIconRight: {\n    paddingRight: 20,\n  },\n  actionsProfile: {\n    justifyContent: 'center',\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  textButton: {\n    fontSize: 15,\n    color: WHITE,\n    paddingLeft: 5,\n  },\n  circledButton: {\n    width: 50,\n    height: 50,\n    borderRadius: 25,\n    backgroundColor: PRIMARY_COLOR,\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginRight: 10,\n  },\n  roundedButton: {\n    justifyContent: 'center',\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginLeft: 10,\n    height: 50,\n    borderRadius: 25,\n    backgroundColor: SECONDARY_COLOR,\n    paddingHorizontal: 20,\n  },\n\n  // MENU\n  tabButtonText: {\n    textTransform: 'uppercase',\n  },\n  iconMenu: {\n    alignItems: 'center',\n  },\n  errorContainer: {\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n    zIndex: 1,\n    elevation: 1,\n    height: 100,\n    position: 'absolute',\n    backgroundColor: ERROR,\n    borderBottomWidth: 1,\n    borderColor: 'red',\n    width: '100%',\n  },\n\n  testText: {\n    color: 'red',\n    fontSize: 15,\n    textAlign: 'center',\n    width: '100%',\n  },\n\n});\n","import React, { useContext } from 'react';\nimport {\n  Text, View, Image, TouchableOpacity, Platform,\n} from 'react-native';\nimport Slider from '@react-native-community/slider';\nimport Icon from '../Icon';\nimport { CardItemT, SwipedCardContextT } from '../../types';\n\nimport styles, {\n  DIMENSION_HEIGHT,\n  DIMENSION_WIDTH,\n  DISLIKE_ACTIONS,\n  ERROR,\n  FLASH_ACTIONS,\n  SPOTIFY_GREEN,\n  WHITE,\n} from '../../assets/styles';\nimport { SwipeCardContext } from './CardProvider';\nimport useSpotifyContext from '../../hooks/useSpotifyAuth';\nimport useSnippetContext from '../../hooks/useSnippet';\n\nexport function TopRow() {\n  const {\n    user, queueAndSkip, recommendedTracks: userRecommendedTracks, newReleases,\n  } = useSpotifyContext();\n\n  const {\n    showType, setShowType, recommendedIndex, newReleasesIndex,\n  } = useContext(SwipeCardContext) as SwipedCardContextT;\n\n  const recommendedActiveStyle = showType === 'recommended' ? styles.exploreTopCenterTextActive : {};\n  const newActiveStyle = showType === 'new' ? styles.exploreTopCenterTextActive : {};\n\n  return (\n    <View>\n      {user ? (\n        <View style={styles.exploreTopCenter}>\n          <TouchableOpacity onPress={() => {\n            if (showType !== 'recommended' && userRecommendedTracks) {\n              setShowType('recommended');\n              queueAndSkip(userRecommendedTracks[recommendedIndex]);\n            }\n          }}\n          >\n            <Text style={[styles.exploreTopCenterText, recommendedActiveStyle]}>\n              Recommended\n            </Text>\n          </TouchableOpacity>\n          <Text style={[styles.exploreTopCenterText]}>\n            |\n          </Text>\n          <TouchableOpacity onPress={() => {\n            if (showType !== 'new' && newReleases) {\n              setShowType('new');\n              queueAndSkip(newReleases[newReleasesIndex]);\n            }\n          }}\n          >\n            <Text style={[styles.exploreTopCenterText, newActiveStyle]}>\n              New Releases\n            </Text>\n          </TouchableOpacity>\n        </View>\n      ) : (\n        <View style={styles.exploreTopCenter}>\n          <TouchableOpacity onPress={() => {\n            setShowType('recommended');\n          }}\n          >\n            <Text style={[styles.exploreTopCenterText, recommendedActiveStyle]}>\n              Recommended\n            </Text>\n          </TouchableOpacity>\n          <Text style={[styles.exploreTopCenterText, styles.lighterBar]}>\n            |\n          </Text>\n          <TouchableOpacity\n            onPress={() => { setShowType('new'); }}\n          >\n            <Text style={[styles.exploreTopCenterText, newActiveStyle]}>\n              New Releases\n            </Text>\n          </TouchableOpacity>\n        </View>\n      )}\n    </View>\n  );\n}\n\nfunction CardItem({\n  hasActions,\n  image,\n  artist,\n  popularity,\n  track,\n  releaseDate,\n  id: index,\n\n}: CardItemT) {\n  const {\n    volume, updateVolume, rgb, setPressedTrack, setShowPlaylists, showType,\n    swiper, allowVolumeControll,\n    recommendedIndex,\n    setRecommendedIndex,\n    newReleasesIndex,\n    setNewReleasesIndex,\n  } = useContext(SwipeCardContext) as SwipedCardContextT;\n  const {\n    user,\n    isPlaying,\n    setIsPlaying,\n    switchPlayingState,\n    token,\n    setVolume,\n    recommendedTracks: userRecommendedTracks,\n    newReleases,\n    playSnippets,\n\n  } = useSpotifyContext();\n\n  const { replay } = useSnippetContext();\n\n  if (track.length > 25) {\n    track = `${track.slice(0, 25)}...`;\n  }\n\n  const isLandscape = () => DIMENSION_WIDTH >= DIMENSION_HEIGHT && Platform.OS === 'web';\n\n  const landScapeWeb = isLandscape() ? styles.containerCardItemWeb : {};\n\n  const styleContainer = [styles.containerCardItem, { backgroundColor: rgb }, landScapeWeb];\n  const flexDir = isLandscape() ? 'row' : 'column';\n  return (\n    <View style={styleContainer}>\n      {/* IMAGE */}\n      <TopRow />\n      <TouchableOpacity style={{ flexDirection: flexDir }} onPress={replay}>\n        <Image source={image} style={styles.imageStyle} />\n      </TouchableOpacity>\n      <View style={styles.matchesCardItem}>\n        <Text style={styles.matchesTextCardItem}>\n          <Icon name=\"heart\" color={WHITE} size={13} />\n          {' '}\n          {popularity || '0'}\n          % Popularity\n        </Text>\n      </View>\n\n      {/* NAME */}\n\n      <Text style={styles.trackStyle}>{track}</Text>\n\n      <View style={styles.artist}>\n        <Text style={styles.artistText}>{artist}</Text>\n        {releaseDate && (\n          <Text style={styles.releaseDate}>{releaseDate}</Text>\n        )}\n      </View>\n      <View style={{ flexDirection: flexDir }}>\n        {(allowVolumeControll && !playSnippets) || showType == 'mock' && (\n        <View style={styles.volumeSlider}>\n          <Icon name=\"md-volume-low\" color={WHITE} size={20} />\n          <Slider\n            style={{ width: 200, height: 10 }}\n            minimumValue={0}\n            maximumValue={100}\n            step={1}\n            minimumTrackTintColor=\"#FFFFFF\"\n            maximumTrackTintColor=\"#000000\"\n            thumbTintColor=\"#FFFFFF\"\n            value={volume}\n            onValueChange={(value: number) => {\n              updateVolume(value);\n            // Cant set volume here due to exceeding API rate limit\n            }}\n            onSlidingComplete={(value: number) => {\n              if (token) {\n                setVolume(value);\n              }\n            }}\n          />\n          <Icon name=\"md-volume-high\" color={WHITE} size={20} />\n        </View>\n        )}\n\n        {/* ACTIONS */}\n        {hasActions && (\n        <View style={styles.actionsCardItem}>\n\n          <TouchableOpacity style={styles.miniButton}>\n            <Icon\n              name=\"close\"\n              color={ERROR}\n              size={20}\n              onPress={() => {\n                swiper?.swipeLeft();\n              }}\n\n            />\n          </TouchableOpacity>\n          <TouchableOpacity style={styles.miniButton}>\n            <Icon\n              name=\"reload\"\n              color={FLASH_ACTIONS}\n              size={20}\n              onPress={() => {\n                swiper?.swipeBack();\n                setRecommendedIndex(recommendedIndex - 2);\n                setNewReleasesIndex(newReleasesIndex - 2);\n              }}\n\n            />\n          </TouchableOpacity>\n\n          <TouchableOpacity style={styles.button}>\n            {isPlaying\n              ? (\n                <Icon\n                  name=\"pause\"\n                  color={DISLIKE_ACTIONS}\n                  size={30}\n                  onPress={() => {\n                    if (token) { // user is logged in\n                      switchPlayingState();\n                    } else { // user is not logged in switch icon for mock page\n                      setIsPlaying(!isPlaying);\n                    }\n                  }}\n                />\n              )\n              : (\n                <Icon\n                  name=\"play\"\n                  color={DISLIKE_ACTIONS}\n                  size={30}\n                  onPress={() => {\n                    if (token) {\n                      switchPlayingState();\n                    } else { // user is not logged in switch icon for mock page\n                      setIsPlaying(!isPlaying);\n                    }\n                  }}\n                />\n              )}\n\n          </TouchableOpacity>\n          <TouchableOpacity style={styles.miniButton}>\n            <Icon\n              name=\"add\"\n              color={FLASH_ACTIONS}\n              size={20}\n              onPress={() => {\n                if (token) {\n                  if (showType === 'recommended') {\n                    setPressedTrack(userRecommendedTracks[index]);\n                  } else if (showType === 'new') {\n                    setPressedTrack(newReleases[index]);\n                  } else {\n                    console.log('invalid showType');\n                  }\n                }\n\n                setShowPlaylists(true);\n              }}\n            />\n\n          </TouchableOpacity>\n          <TouchableOpacity style={styles.miniButton}>\n            <Icon\n              name=\"heart-o\"\n              color={SPOTIFY_GREEN}\n              size={20}\n              onPress={() => {\n                swiper?.swipeRight();\n              }}\n              useFontAwesome\n            />\n          </TouchableOpacity>\n\n        </View>\n        )}\n      </View>\n      {playSnippets ? (\n        <View style={{ flexDirection: flexDir }}>\n          <Text style={[styles.reminderText, { fontSize: 15 }]}>\n            You are currently playing snippets. Theese are 30 second snippets of songs.\n            Pausing the snippet may cause issues.\n          </Text>\n        </View>\n      ) : (\n        <View style={{ flexDirection: flexDir }}>\n          <Text style={[styles.reminderText, { fontSize: 15 }]}>\n            You need to have the spotify app active to use this mode.\n            Try playing and pausing your current spotify song, and make sure your queue is empty.\n          </Text>\n        </View>\n      )}\n    </View>\n  );\n}\n\nexport default CardItem;\n","import React, { useContext } from 'react';\nimport { Text, TouchableOpacity, View } from 'react-native';\nimport Icon from './Icon';\nimport styles, { DARK_GRAY } from '../assets/styles';\nimport useSpotifyContext from '../hooks/useSpotifyAuth';\nimport { SwipeCardContext } from './card-components/CardProvider';\nimport { SwipedCardContextT } from '../types';\n\nexport function LoginMock({ navigation }: any) {\n  const { promptAsync } = useSpotifyContext();\n  const { setShowType } = useContext<SwipedCardContextT>(SwipeCardContext);\n\n  const login = async () => {\n    await setShowType('recommended');\n    await navigation.navigate('Tab');\n  };\n\n  return (\n    <View style={{ flexDirection: 'row', marginTop: 20 }}>\n      <TouchableOpacity style={styles.login} onPress={login}>\n        <Text style={styles.loginText}>\n          Try it out\n        </Text>\n      </TouchableOpacity>\n    </View>\n  );\n}\nexport default function Login({ navigation }: any) {\n  const { promptAsync } = useSpotifyContext();\n  const { setShowType } = useContext<SwipedCardContextT>(SwipeCardContext);\n\n  const login = async () => {\n    await setShowType('recommended');\n    await promptAsync();\n    await navigation.navigate('Tab');\n  };\n\n  return (\n    <View style={{ flexDirection: 'row' }}>\n      <TouchableOpacity style={styles.login} onPress={login}>\n        <Text style={styles.loginText}>\n          <Icon name=\"spotify\" size={30} color={DARK_GRAY} useFontAwesome />\n          {' Login'}\n        </Text>\n      </TouchableOpacity>\n    </View>\n  );\n}\n","import React from 'react';\nimport { Text, View, Image } from 'react-native';\nimport { CardItemRowT } from '../../types';\n\nimport styles from '../../assets/styles';\n\nfunction CardItemRow({\n  image,\n  name,\n}: CardItemRowT) {\n  return (\n    <View style={styles.containerCardItemRow}>\n      {/* IMAGE */}\n      <Image source={image} style={styles.playlistImage} />\n      {/* NAME */}\n      <Text style={styles.playlistText}>{name}</Text>\n    </View>\n  );\n}\n\nexport default CardItemRow;\n","module.exports = __webpack_public_path__ + \"static/media/logic.e98d400e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/odz.a48909a6.jpg\";","module.exports = __webpack_public_path__ + \"static/media/metallica.3bad5394.jpg\";","module.exports = __webpack_public_path__ + \"static/media/dio.6a2fb57d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/post.61b3850d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/skepta.f0f62bb2.jpg\";","import { DataSong } from \"../../types\";\nimport IMAGE_LOGIC from \"../images/logic.jpg\";\nimport IMAGE_XXX from \"../images/xxx.jpg\";\nimport IMAGE_SKEPTA from \"../images/skepta.jpg\";\nimport IMAGE_ODZ from \"../images/odz.jpg\";\nimport IMAGE_DIO from \"../images/dio.jpg\";\nimport IMAGE_POST from \"../images/post.jpg\";\nimport IMAGE_METALLICA from \"../images/metallica.jpg\";\n//import IMAGE_TYLER from  \".../images/tyler.jpg\";\nimport IMAGE_TRAVIS from \"../images/travis.jpg\";\nimport IMAGE_BANGER from \"../images/banger.jpg\";\n\n\nconst data: DataSong[] = [\n  {\n    id: 1,\n    track: \"The Return\",\n    match: \"78\",\n    artist: \"Logic\",\n    album: \"The Return\",\n    image: IMAGE_LOGIC,\n\n  },\n  {\n    id: 2,\n    track: \"SAD!\",\n    match: \"93\",\n    artist: \"XXXTentacion\",\n    album: \"?\",\n    image: IMAGE_XXX,\n  },\n  {\n    id: 3,\n    track: \"Bullet From A Gun\",\n    match: \"45\",\n    artist: \"skepta\",\n    album: \"Ignorance is bliss\",\n    image: IMAGE_SKEPTA,\n  },\n  {\n    id: 4,\n    track: \"Summer of Our Lives\",\n    match: \"88\",\n    artist: \"waykap, Emmi\",\n    album: \"Summer of Our Lives\",\n    image: IMAGE_BANGER,\n  },\n  {\n    id: 5,\n    track: \"Ostron\",\n    match: \"76\",\n    artist: \"Frej Larsson, ODZ, Canto\",\n    album: \"Bland streckgubbar och linjemän\",\n    image: IMAGE_ODZ,\n  },\n  {\n    id: 6,\n    track: \"SICKO MODE\",\n    match: \"95\",\n    artist: \"Travis Scott\",\n    album: \"ASTROWORLD\",\n    image: IMAGE_TRAVIS,\n  },\n  {\n    id: 7,\n    track: \"ONE\",\n    match: \"67\",\n    artist: \"Metallica\",\n    album: \"...And Justice for None\",\n    image: IMAGE_METALLICA,\n  },\n  {\n    id: 8,\n    track: \"Holy Diver\",\n    match: \"85\",\n    artist: \"Dio\",\n    location: \"Irvine, CA\",\n    album: \"Holy Diver\",\n    image: IMAGE_DIO,\n  },\n  {\n    id: 9,\n    track: \"EARFQUACK\",\n    match: \"74\",\n    artist: \"Tyler, The Creator\",\n    album: \"IGOR\",\n    image: IMAGE_DIO,\n  },\n  {\n    id: 10,\n    track: \"Congratulations\",\n    match: \"98\",\n    artist: \"Post Malone\",\n    album: \"Stoney\",\n    image: IMAGE_POST,\n  },\n];\n\nexport default data;\n","import { DataProfile } from \"../../types\";\nimport IMAGE_01 from \"../images/img01.jpeg\";\nimport IMAGE_02 from \"../images/img01.jpeg\";\nimport IMAGE_03 from \"../images/img01.jpeg\";\nimport IMAGE_04 from \"../images/img01.jpeg\";\nimport IMAGE_05 from \"../images/img01.jpeg\";\nimport IMAGE_06 from \"../images/img01.jpeg\";\nimport IMAGE_07 from \"../images/img01.jpeg\";\nimport IMAGE_08 from \"../images/img01.jpeg\";\nimport IMAGE_09 from \"../images/img01.jpeg\";\nimport IMAGE_10 from \"../images/img01.jpeg\";\n\nconst data: DataProfile[] = [\n  {\n    id: 1,\n    name: \"Fredrik Juvet\",\n    isOnline: true,\n    match: \"78\",\n    description: \"Indek Grindset\",\n    message: \"Forza Ferrari, Grande Machina, The Witcher 3, Bella Ciao\",\n    age: \"19\",\n    image: IMAGE_01,\n  },\n  {\n    id: 2,\n    name: \"Tom Rehnström\",\n    match: \"93\",\n    description: \"I am a Huge F1 fan\",\n    isOnline: true,\n    message: \"Wassup, I'm Fredrik, I'm a software developer, and I'm looking for a job.\",\n    image: IMAGE_02,\n  },\n  {\n    id: 3,\n    name: \"Isac Hassle\",\n    match: \"45\",\n    description: \"Part time Singer/Dancer.\",\n    isOnline: false,\n    message: \"Oh, hee-hee, aha. Ha, ooh, hee, ha-ha, ha-ha. And I thought my jokes were bad.\",\n    image: IMAGE_03,\n  },\n  {\n    id: 4,\n    name: \"Alexander Holmberg\",\n    match: \"88\",\n    description: \"Crypto Guru and HV71 fan\",\n    isOnline: true,\n    message: \"Crypto is up Today! Did you see Alice in Wonderland?, At least I think I did.\",\n    image: IMAGE_04,\n  },\n  {\n    id: 5,\n    name: \"Marcus Bardvall\",\n    match: \"76\",\n    description: \"It's not who I am underneath but what I do that defines me.\",\n    isOnline: false,\n    message: \"Buy my stupid NFTs\",\n    image: IMAGE_05,\n  },\n  {\n    id: 6,\n    name: \"Max Claesson\",\n    match: \"95\",\n    description: \"Guitar player, Hair like a Golden Retriever\",\n    isOnline: true,\n    message: \"I just ate two entire pizzas. I'm not sure if I'm hungry or if I'm just really, really hungry.\",\n    image: IMAGE_06,\n  },\n  {\n    id: 7,\n    name: \"Lisa Kvist\",\n    match: \"67\",\n    description:\n      \"Fulvinia, a.k.a. The Queen of the Night, a Swedish-American singer, songwriter, and actress.\",\n    isOnline: true,\n    message:\n      \"Coffee, tea, and cake. I'm not sure what else to put here.\",\n    image: IMAGE_07,\n  },\n  {\n    id: 8,\n    name: \"Olle Jernström\",\n    match: \"85\",\n    description: \"Music lover. Globe Trotter. Occasional Photographer.\",\n    age: \"19\",\n    location: \"Stockholm, Sweden\",\n    infoPersonal: 'Loves programming',\n    infoMusic: \"Loves Rock, Pop and Hiphop/Rap\",\n    lastSeen: \"Last seen: 23h ago\",\n    isOnline: true,\n    topTracks: \"Track 1, Track 2, Track 3, Track 4, Track 5\",\n    topArtists: \"Artist 1, Artist 2, Artist 3, Artist 4, Artist 5\",\n    topGenres: \"Genre 1, Genre 2, Genre 3, Genre 4, Genre 5\",\n    message:\n      \"And as for the television's so-called plan, Batman has no jurisdiction.\",\n    image: IMAGE_08,\n  },\n  {\n    id: 9,\n    name: \"Marina Bremmander\",\n    match: \"74\",\n    description:\n      \"Swedish Rapper with the artist name MarreB\",\n    isOnline: true,\n    message: \"Rap music is love\",\n    image: IMAGE_09,\n  },\n  {\n    id: 10,\n    name: \"Pepsi Man\",\n    match: \"98\",\n    description:\n      \"Pepsi da number one\",\n    isOnline: false,\n    message:\n      \"You want order in Gotham. Batman must stop drinking coke.\",\n    image: IMAGE_10,\n  },\n];\n\nexport default data;\n","import React, { createContext, useContext, useState } from 'react';\nimport { useAuthRequest } from 'expo-auth-session';\nimport * as WebBrowser from 'expo-web-browser';\nimport { CLIENT_ID, CLIENT_SECRET } from '@env';\nimport axios from 'axios';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport useAutoExchange from './useAutoExchange';\nimport {\n  discovery, redirectUri, meEndpoint, recomendationEndpoint,\n} from './utils/auth-utils';\nimport useError from './useError';\nimport { getCountryName, getLocation } from '../components/utils/country-utils';\nimport { DeviceType } from '../types';\nimport useSnippetContext from './useSnippet';\n\nWebBrowser.maybeCompleteAuthSession();\n\nconst SpotifyAuthContext: React.Context<{\n  promptAsync: any\n  token: any,\n  user: any,\n  recommendedTracks: any,\n  getUserRecommendedTracks: any,\n  likeSong: any,\n  info: any,\n  queueAndSkip: any,\n  isPlaying: any,\n  setIsPlaying: any,\n  switchPlayingState: any,\n  setVolume: any,\n  likedSongs: any,\n  getLikedSongs: any,\n  getPlaylists: any,\n  playlists: any,\n  addTrackToPlaylist: any,\n  newReleases: any,\n  getNewReleases: any,\n  topGenres: string,\n  topArtists: string,\n  topTracks: string,\n  defaultPlaylist: any,\n  storeDefaultPlaylist: any,\n  availableMarkets: any,\n  setChosenMarket: any,\n  chosenMarket: any,\n  allowVolumeControll: any,\n  playSnippets: any,\n  setPlaySnippets: any,\n  pause: any,\n}> = createContext({\n  promptAsync: null,\n  token: null,\n  user: null,\n  recommendedTracks: null,\n  getRecommendedTracks: null,\n  likeSong: null,\n  info: null,\n  queueAndSkip: null,\n  isPlaying: null,\n  setIsPlaying: null,\n  switchPlayingState: null,\n  setVolume: null,\n  likedSongs: null,\n  getLikedSongs: null,\n  getPlaylists: null,\n  playlists: null,\n  addTrackToPlaylist: null,\n  newReleases: null,\n  getNewReleases: null,\n  topGenres: '',\n  topArtists: '',\n  topTracks: '',\n  defaultPlaylist: null,\n  storeDefaultPlaylist: null,\n  availableMarkets: null,\n  setChosenMarket: null,\n  chosenMarket: null,\n  allowVolumeControll: true,\n  playSnippets: true,\n  setPlaySnippets: null,\n  pause: null,\n});\n\nWebBrowser.maybeCompleteAuthSession();\n\nconst likeSongString = 'Liked songs';\n\ninterface Props {\n  children: React.ReactNode\n}\n\nconst storeData = async (key: string, value: string) => {\n  try {\n    const jsonValue = JSON.stringify(value);\n    await AsyncStorage.setItem(key, jsonValue);\n  } catch (e) {\n    console.log('failed to store data:', e);\n  }\n};\n\nconst getData = async (key: string) => {\n  try {\n    const jsonValue = await AsyncStorage.getItem(key);\n    return jsonValue != null ? JSON.parse(jsonValue) : null;\n  } catch (e) {\n    // error reading value\n    console.log('failed to get data:', e);\n  }\n};\n\nexport const SpotifyAuthProvider: React.ReactNode = ({ children }: Props) => {\n  const storeDefaultPlaylist = async (value: string) => {\n    const key = '@defaultPlaylist';\n    storeData(key, value).then();\n    setDefaultPlaylist(value);\n  };\n  const getDefaultPlaylist = async () => {\n    const key = '@defaultPlaylist';\n    const val = getData(key);\n    return val;\n  };\n\n  const [user, setUser] = useState(null);\n  const [recommendedTracks, setRecommendedTracks] = useState([]);\n  const [userPlaylists, setUserPlaylists] = useState(null);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [likedSongs, setLikedSongs] = useState(null);\n  const [newReleases, setNewReleases] = useState<any[] | null>(null);\n  const [topGenres, setTopGenres] = useState<string>('Genre 1, Genre 2, Genre 3');\n  const [topArtists, setTopArtists] = useState<string>('Artist 1, Artist 2, Artist 3');\n  const [topTracks, setTopTracks] = useState<string>('Track 1, Track 2, Track 3');\n  const [availableMarkets, setAvailableMarkets] = useState(null);\n  const [chosenMarket, setChosenMarket] = useState<string | null>(null);\n\n  const loadedDefaultPlaylist = getDefaultPlaylist().then((val: any) => val) || likeSongString;\n  const [defaultPlaylist, setDefaultPlaylist] = useState<any>(loadedDefaultPlaylist); // Either equal to liked songs or a playlist uri\n\n  const [config, setConfig] = useState<any>(null);\n  const [allowVolumeControll, setAllowVolumeControll] = useState<boolean>(true);\n  const [playSnippets, setPlaySnippets] = useState<boolean>(true);\n\n  const { addTrackAndPlay, pause: pauseSnippet, play: playSnippet } = useSnippetContext();\n  const { addErrorText } = useError();\n\n  const [request, response, promptAsync] = useAuthRequest({\n    clientId: CLIENT_ID,\n    scopes: ['user-read-email', 'user-read-private', 'user-top-read', 'user-library-read',\n      'user-library-modify', 'playlist-read-private', 'playlist-read-collaborative',\n      'user-read-playback-state', 'user-modify-playback-state',\n      'app-remote-control', 'playlist-modify-private', 'playlist-modify-public',\n    ],\n    /*\n      In order to follow the 'Authorization Code Flow',\n      to fetch token after authorizationEndpoint,\n      this must be set to false\n    */\n    usePKCE: false,\n    redirectUri,\n    clientSecret: CLIENT_SECRET,\n  }, discovery);\n\n  const songCount = 20; // has to be 20 due to /albums/{ids} can only have 20 ids\n\n  // Token will be auto exchanged after auth completes.\n  const { token, tokenExchangeError: exchangeError } = useAutoExchange(\n    response?.type === 'success' ? response.params.code : undefined,\n  );\n\n  async function getNewReleases() {\n    const r = Math.floor(Math.random() * 100);\n    const market = chosenMarket || 'US';\n    await axios.get(`https://api.spotify.com/v1/browse/new-releases?limit=${songCount}&country=${chosenMarket}&offset${r}`, config)\n      .then((res) => {\n        const albumUris: string[] = [];\n        res.data.albums.items.forEach((item: any) => {\n          albumUris.push(item.id);\n        });\n        albumUris.sort(() => 0.5 - Math.random());\n        const reducedAlbumUris = albumUris.slice(0, 20);\n\n        const albumUriString = reducedAlbumUris.join();\n        let releases: any[] = [];\n        axios.get(`https://api.spotify.com/v1/albums?ids=${albumUriString}`, config)\n          .then((res) => {\n            console.log('New releases in', getLocation(market), res.data);\n            res.data.albums.forEach((album: any) => {\n              const randomInt = Math.floor(Math.random() * album.tracks.items.length);\n              const item = album.tracks.items[randomInt];\n              item.images = album.images;\n              item.releaseDate = album.release_date;\n              item.id = album.tracks.items[randomInt].uri.split(':')[2]; // WATNING SHAKY\n              releases.push(item);\n            });\n            releases.sort(() => Math.random() - 0.5);\n            if (playSnippets) {\n              releases = releases.filter((\n                track: { preview_url: string | null ; },\n              ) => track.preview_url !== null);\n            }\n            setNewReleases(releases);\n          })\n          .catch((err) => {\n            console.log(err);\n            addErrorText(err.response.data.error.message);\n          });\n      })\n      .catch((err) => {\n        console.log(err);\n        addErrorText(err.response.data.error.message);\n      });\n  }\n\n  async function getPlaylists() {\n    await axios.get(`https://api.spotify.com/v1/me/playlists?limit=${50}`, config)\n      .then((res) => {\n        // Todo improve this to filter on user id aswell\n        const playlists = res.data.items.filter((playlist: any) => playlist.owner.display_name !== 'Spotify');\n\n        playlists.sort((a: any, b: any) => {\n          if (a.name < b.name) {\n            return -1;\n          }\n          if (a.name > b.name) {\n            return 1;\n          }\n          return 0;\n        });\n        // console.log('Playlists: ', playlists);\n        setUserPlaylists(playlists);\n      })\n      .catch((err) => {\n        console.log('Error Playlist: ', err);\n        addErrorText(err.response.data.error.message);\n      });\n  }\n\n  async function addTrackToPlaylist(playlistId: string, trackId: string) {\n    // console.log('OOO', accessToken, playlistId, trackId);\n    // If this is set to .put instead of .post it will erase the whole playlist\n    // Soooo... dont do that\n    await axios.post(`https://api.spotify.com/v1/playlists/${playlistId}/tracks?uris=${trackId}`, {}, config)\n      .then((res) => {\n        console.log('Added track to playlist: ', res.data);\n      })\n      .catch((err) => {\n        console.log('Error adding track to playlist: ', err);\n        addErrorText(err.response.data.error.message);\n      });\n  }\n\n  async function getAvailibleMarkets() {\n    await axios.get('https://api.spotify.com/v1/markets', config)\n      .then((res) => {\n        const countryCodes = res.data.markets;\n        // map each country code to its country name\n        let countries = countryCodes.map((countryCode: string) => ({\n          code: countryCode,\n          name: getCountryName(countryCode),\n          nameWithFlag: getLocation(countryCode),\n        }));\n        // sort countries alphabetically\n        countries = countries.sort((a: {code: string, name: string}, b: {code: string, name: string}) => {\n          if (a.name < b.name) {\n            return -1;\n          }\n          return 1;\n        });\n        setAvailableMarkets(countries);\n      })\n      .catch((err) => {\n        console.log('Error getting availible markets: ', err);\n        addErrorText(err.response.data.error.message);\n      });\n  }\n\n  async function playerInfo() {\n    // config\n    if (token) {\n      await axios.get('https://api.spotify.com/v1/me/player/devices', config)\n        .then((res) => {\n          // console.log('Device:', res);\n        }).catch((err) => {\n          console.log('Device Error:', err);\n          addErrorText(err.response.data.error.message);\n        });\n    }\n  }\n\n  async function likeSong(trackId: string) {\n    // config\n    console.log(defaultPlaylist, likeSongString, defaultPlaylist === likeSongString);\n    if (defaultPlaylist === likeSongString) {\n      await axios.put(\n        'https://api.spotify.com/v1/me/tracks',\n        // send trackid as \"ids\" parameter\n        { ids: [trackId] },\n        config,\n      ).then((res) => {\n        // console.log('Saved track to user library');\n        getLikedSongs();\n      }).catch((err) => {\n        console.log(err);\n        addErrorText(err.response.data.error.message);\n      });\n    } else {\n      const playlist = await defaultPlaylist;\n      const trackUri = `spotify:track:${trackId}`;\n      addTrackToPlaylist(playlist.id, trackUri);\n    }\n  }\n\n  async function getUserData() {\n    return axios.get(meEndpoint, config)\n      .then((res) => {\n        console.log('User data: ', res.data);\n        setUser(res.data);\n        setChosenMarket(res.data.country);\n      })\n      .catch((err) => {\n        addErrorText(err.response.data.error.message);\n        console.log('E1: ', err);\n      });\n  }\n\n  async function getTopUserItems() {\n    const allArtists: any = [];\n    const allTracks: any = [];\n    const availableGenres: any = [];\n    const otherGenres: any = [];\n    const allGenres: any = [];\n    const genres: any = [];\n    const artist: any = [];\n    const tracks: any = [];\n\n    const topTracksText: any = [];\n    const topArtistsText: any = [];\n\n    const count = 5;\n\n    await axios.get(`${meEndpoint}/top/tracks`, config)\n      .then((res) => {\n        // setUserTopItems(res.data);\n        for (let i = 0; i < res.data.items.length; i += 1) {\n          allTracks.push(res.data.items[i].id);\n          topTracksText.push(res.data.items[i].name);\n        }\n      })\n      .catch((err) => {\n        console.log('E2: ', err); addErrorText(err.response.data.error.message);\n      });\n\n    await axios.get(`${recomendationEndpoint}/available-genre-seeds`, config)\n      .then((res: any) => {\n        // loop over the genres and add them to the available genres\n        res.data.genres.forEach((genre: any) => {\n          availableGenres.push(genre);\n        });\n      })\n      .catch((err) => {\n        console.log('E3: ', err); addErrorText(err.response.data.error.message);\n      });\n\n    await axios.get(`${meEndpoint}/top/artists`, config)\n      .then((res) => {\n        for (let i = 0; i < res.data.items.length; i += 1) {\n          allArtists.push(res.data.items[i].id);\n          topArtistsText.push(res.data.items[i].name);\n        }\n        res.data.items.forEach((item: any) => {\n        // loop over the genres and push them to genres\n          for (let i = 0; i < item.genres.length; i += 1) {\n            const genre = item.genres[i];\n            if (availableGenres.includes(genre) && !allGenres.includes(genre)) {\n              allGenres.push(genre);\n            } else {\n              otherGenres.push(genre);\n            }\n          }\n        });\n      })\n      .catch((err) => {\n        console.log('E: ', err); addErrorText(err.response.data.error.message);\n      });\n\n    // Get 1 random items in allGenres and place them in genres\n    for (let i = 0; i < 1; i += 1) {\n      const randomIndex = Math.floor(Math.random() * allGenres.length);\n      genres.push(allGenres[randomIndex]);\n    }\n\n    // Get two random items from allTracks and place them in tracks\n    for (let i = 0; i < 2; i += 1) {\n      if (allTracks.length !== 0) {\n        const random = Math.floor(Math.random() * allTracks.length);\n        const selectedTrack = allTracks[random];\n        tracks.push(selectedTrack);\n        allTracks.splice(random, 1); // remove selectedTrack from allTracks\n      }\n    }\n\n    // Get two random items from allArtists and place them in artists\n    for (let i = 0; i < 2; i += 1) {\n      if (allArtists.length !== 0) {\n        const random = Math.floor(Math.random() * allArtists.length);\n        const selectedArtist = allArtists[random];\n        artist.push(selectedArtist);\n        allArtists.splice(random, 1); // remove selectedArtist from allArtists\n      }\n    }\n\n    // WARNING: the length of seed genres + seed artists + seed tracks <= 5 (MAX 5)\n    const seedGenres = genres[0];\n    const seedArtists = allArtists[1] ? `${allArtists[0]},${allArtists[1]}` : '';\n    const seedTracks = allTracks[1] ? `${allTracks[0]},${allTracks[1]}` : '';\n\n    // Copy the config add modyfy it.\n    // setting config2 = config and updating config2 also updates config\n    const configRecommendations = { ...config };\n    configRecommendations.params = {\n      seed_artists: seedArtists,\n      seed_genres: seedGenres,\n      seed_tracks: seedTracks,\n      limit: songCount,\n    };\n\n    await axios.get(recomendationEndpoint, configRecommendations)\n      .then((res) => {\n        console.log('Recomendations: ', res.data);\n        let { tracks } = res.data;\n        if (playSnippets) {\n          tracks = tracks.filter((\n            track: { preview_url: string | null ; },\n          ) => track.preview_url !== null);\n        }\n        setRecommendedTracks(tracks);\n        const firstTrackUri = tracks[0];\n        queueSongAndSkip(firstTrackUri);\n        console.log(tracks[0].name);\n      })\n      .catch((res) => console.log('Erec: ', res));\n\n    if (recommendedTracks.length === 0) {\n      const n = 10;\n      topArtistsText.sort(() => 0.5 - Math.random());\n      topTracksText.sort(() => 0.5 - Math.random());\n      const both = allGenres.concat(otherGenres);\n      both.sort(() => 0.5 - Math.random());\n      setTopArtists(topArtistsText.slice(0, n).sort().join(', '));\n      setTopTracks(topTracksText.slice(0, n).sort().join(', '));\n      setTopGenres(both.slice(0, n).sort().join(', '));\n    }\n  }\n\n  async function getLikedSongs() {\n    await axios.get(`${meEndpoint}/tracks`, config)\n      .then((res) => {\n        const tracks = res.data.items;\n        setLikedSongs(tracks);\n      })\n      .catch((err) => {\n        console.log('Error getting liked songs: ', err);\n        addErrorText(err.response.data.error.message);\n      });\n  }\n\n  async function pause() {\n    await axios.put('https://api.spotify.com/v1/me/player/pause', null, config)\n      .then((res) => {\n        // console.log('Paused');\n        setIsPlaying(false);\n      })\n      .catch((err) => {\n        addErrorText(err.response.data.error.message);\n        console.log('Error Pausing: ', err);\n      });\n  }\n\n  async function setVolume(volume: number) {\n    await axios.put(`https://api.spotify.com/v1/me/player/volume?volume_percent=${volume}`, null, config)\n      .then((res) => {\n        console.log('Volume Set to: ', volume);\n      })\n      .catch((err) => {\n        console.log('Error Setting Volume: ', err);\n        const { message } = err.response.data.error;\n        const { reason } = err.response.data.error;\n        addErrorText(`${message}. ${reason}`);\n      });\n  }\n\n  async function play() {\n    await axios.put('https://api.spotify.com/v1/me/player/play', null, config)\n      .then((res) => {\n        // console.log('Playing');\n        setIsPlaying(true);\n      })\n      .catch((err) => {\n        console.log('Error Playing: ', err); addErrorText(err.response.data.error.message);\n      });\n  }\n\n  async function queueSongAndSkip(track: any) {\n    if (playSnippets) {\n      console.log('Snippet:', track.name);\n      addTrackAndPlay(track.preview_url);\n      setIsPlaying(true);\n    } else {\n      console.log('Full track:', track.name);\n      // TODO: Figure out how to send the query nicely with axios\n\n      axios.post(\n        `https://api.spotify.com/v1/me/player/queue?uri=${track.uri}`,\n        {},\n        config,\n      ).then(() => {\n        playNextSong();\n      }).catch((err) => {\n        console.log('Error Queue: ', err);\n        addErrorText(err.response.data.error.message);\n      });\n    }\n  }\n\n  async function playNextSong() {\n    axios.post(\n      'https://api.spotify.com/v1/me/player/next',\n      {},\n      config,\n    ).catch((err) => { console.log('Error Next: ', err); addErrorText(err.response.data.error.message); });\n    setIsPlaying(true);\n  }\n\n  function switchPlayingState() {\n    if (playSnippets) {\n      isPlaying ? pauseSnippet() : playSnippet();\n      setIsPlaying(!isPlaying);\n    } else {\n      isPlaying ? pause() : play();\n    }\n  }\n\n  async function getPlaybackState() {\n    await axios.get('https://api.spotify.com/v1/me/player', config)\n      .then((res) => {\n        if (res.data !== '') {\n          /* Enable this code when playing spotify content is back */\n          // if (res.data.is_playing) {\n          //   pause();\n          // }\n\n          if (res.data.device.type === DeviceType.COMPUTER) {\n            setAllowVolumeControll(true);\n            setVolume(50);\n          } else if (res.data.device.type === DeviceType.SMARTPHONE) {\n            setAllowVolumeControll(false);\n          } else {\n            console.warn(`Could not match device type: ${res.data.device.type}`);\n            setAllowVolumeControll(false);\n          }\n        }\n      })\n      .catch((err) => {\n        console.log('Error getting playback state: ', err);\n        addErrorText(err.response.data.error.message);\n      });\n  }\n\n  React.useEffect(() => {\n    if (token) {\n      const config = {\n        headers: {\n          Authorization: `Bearer ${token.accessToken}`,\n        },\n      };\n      setConfig(config);\n    }\n  }, [token]);\n\n  React.useEffect(() => {\n    if (config && token) {\n      getPlaybackState();\n      getUserData();\n    }\n  }, [config, token]);\n\n  React.useEffect(() => {\n    if (user) {\n      getTopUserItems();\n      getLikedSongs();\n      getPlaylists();\n      getAvailibleMarkets();\n    }\n  }, [user]);\n\n  React.useEffect(() => {\n    if (chosenMarket) {\n      getNewReleases();\n    }\n  }, [chosenMarket]);\n\n  React.useEffect(() => {\n    if (config && token) {\n      getTopUserItems();\n      getNewReleases();\n    }\n  }, [playSnippets]);\n\n  return (\n    <SpotifyAuthContext.Provider\n      value={{\n        promptAsync,\n        token,\n        user,\n        recommendedTracks,\n        getUserRecommendedTracks: getTopUserItems,\n        likeSong,\n        info: playerInfo,\n        queueAndSkip: queueSongAndSkip,\n        isPlaying,\n        setIsPlaying,\n        switchPlayingState,\n        setVolume,\n        likedSongs,\n        getLikedSongs,\n        getPlaylists: () => {},\n        playlists: userPlaylists,\n        addTrackToPlaylist,\n        newReleases,\n        getNewReleases,\n        topTracks,\n        topArtists,\n        topGenres,\n        defaultPlaylist,\n        storeDefaultPlaylist,\n        availableMarkets,\n        setChosenMarket,\n        chosenMarket,\n        allowVolumeControll,\n        playSnippets,\n        setPlaySnippets,\n        pause,\n      }}\n    >\n      {children}\n    </SpotifyAuthContext.Provider>\n  );\n};\n\nexport default function useSpotifyContext() {\n  return useContext(SpotifyAuthContext);\n}\n","import React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { SpotifyAuthProvider } from './hooks/useSpotifyAuth';\nimport { ErrorProvider } from './hooks/useError';\nimport {\n  Explore, Liked, LoginPage, Profile,\n} from './screens';\nimport {\n  PRIMARY_COLOR, DARK_GRAY, BLACK,\n} from './assets/styles';\nimport TabBarIcon from './components/TabBarIcon';\nimport Settings from './screens/Settings';\nimport { Error } from './components';\nimport { SnippetProvider } from './hooks/useSnippet';\nimport SwipeCardPrvider from './components/card-components/CardProvider';\n\nconst Stack = createStackNavigator();\nconst Tab = createBottomTabNavigator();\n\nfunction App() {\n  return (\n    <ErrorProvider>\n      <SnippetProvider>\n        <SpotifyAuthProvider>\n          <SwipeCardPrvider>\n            <NavigationContainer>\n              <Error />\n              <Stack.Navigator\n                screenOptions={{\n                  headerStyle: { elevation: 0 },\n                  cardStyle: { backgroundColor: BLACK },\n                }}\n              >\n\n                <Stack.Screen\n                  name=\"Login\"\n                  options={{ headerShown: false, animationEnabled: false }}\n                  component={LoginPage}\n                />\n\n                <Stack.Screen\n                  name=\"Tab\"\n                  options={{ headerShown: false, animationEnabled: false }}\n                >\n                  {() => (\n                    <Tab.Navigator\n                      tabBarOptions={{\n                        showLabel: false,\n                        activeTintColor: PRIMARY_COLOR,\n                        inactiveTintColor: DARK_GRAY,\n                        labelStyle: {\n                          fontSize: 14,\n                          textTransform: 'uppercase',\n                          paddingTop: 10,\n                        },\n                        style: {\n                          backgroundColor: BLACK,\n                          borderTopWidth: 0,\n                          marginBottom: 0,\n                          shadowOpacity: 0.05,\n                          shadowRadius: 10,\n                          shadowColor: BLACK,\n                          shadowOffset: { height: 0, width: 0 },\n                        },\n                      }}\n                    >\n\n                      <Tab.Screen\n                        name=\"Explore\"\n                        component={Explore}\n                        options={{\n                          tabBarIcon: ({ focused }) => (\n                            <TabBarIcon\n                              focused={focused}\n                              iconName=\"musical-notes\"\n                              text=\"Explore\"\n                            />\n                          ),\n                        }}\n                      />\n\n                      <Tab.Screen\n                        name=\"Liked\"\n                        component={Liked}\n                        options={{\n                          tabBarIcon: ({ focused }) => (\n                            <TabBarIcon\n                              focused={focused}\n                              iconName=\"heart\"\n                              text=\"Liked\"\n                            />\n                          ),\n                        }}\n                      />\n\n                      {/* <Tab.Screen\n                  name=\"Chat\"\n                  component={Messages}\n                  options={{\n                    tabBarIcon: ({ focused }) => (\n                      <TabBarIcon\n                        focused={focused}\n                        iconName=\"chatbubble\"\n                        text=\"Chat\"\n                      />\n                    ),\n                  }}\n                /> */}\n\n                      <Tab.Screen\n                        name=\"Settings\"\n                        component={Settings}\n                        options={{\n                          tabBarIcon: ({ focused }) => (\n                            <TabBarIcon\n                              focused={focused}\n                              iconName=\"settings-sharp\"\n                              text=\"Settings\"\n                            />\n                          ),\n                        }}\n                      />\n\n                      <Tab.Screen\n                        name=\"Profile\"\n                        component={Profile}\n                        options={{\n                          tabBarIcon: ({ focused }) => (\n                            <TabBarIcon\n                              focused={focused}\n                              iconName=\"person\"\n                              text=\"Profile\"\n                            />\n                          ),\n                        }}\n                      />\n                    </Tab.Navigator>\n                  )}\n                </Stack.Screen>\n              </Stack.Navigator>\n            </NavigationContainer>\n          </SwipeCardPrvider>\n        </SpotifyAuthProvider>\n      </SnippetProvider>\n    </ErrorProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport { Ionicons, FontAwesome } from '@expo/vector-icons';\nimport { IconT } from '../types';\n\nfunction Icon({\n  color, name, size, style, onPress, useFontAwesome,\n}: IconT) {\n  if (!useFontAwesome) {\n    return <Ionicons name={name} size={size} color={color} style={style} onPress={onPress} />;\n  }\n  return <FontAwesome name={name} size={size} color={color} style={style} onPress={onPress} />;\n}\n\nexport default Icon;\n","export { default as CardItem } from './card-components/CardItem';\nexport { default as Settings } from './Settings';\nexport { default as Filters } from './Filters';\nexport { default as Icon } from './Icon';\nexport { default as Message } from './Message';\nexport { default as ProfileItem } from './ProfileItem';\nexport { default as Login } from './Login';\nexport { default as CardItemRow } from './card-components/CardItemRow';\nexport { default as Playlists } from './Playlists';\nexport { default as Cards } from './card-components/Cards';\nexport { default as CardItemSmall } from './card-components/CardItemSmall';\nexport { default as SettingItemSwitch } from './SettingItemSwitch';\nexport { default as Error } from './Error';\n","import { exchangeCodeAsync, TokenResponse } from 'expo-auth-session';\nimport React from 'react';\nimport { CLIENT_ID, CLIENT_SECRET } from '@env';\nimport useMounted from './useMounted';\nimport { discovery, redirectUri } from './utils/auth-utils';\n\ntype State = {\n  token: TokenResponse | null;\n  tokenExchangeError: Error | null;\n};\n\n// A hook to automatically exchange the auth token for an access token.\n// I think this should be performed on server and not in the application.\nfunction useAutoExchange(code?: string): State {\n  const [currentState, setCurrentState] = React.useReducer(\n    (state: State, action: Partial<State>) => ({ ...state, ...action }),\n    { token: null, tokenExchangeError: null },\n  );\n  const isMounted = useMounted();\n\n  React.useEffect(() => {\n    if (!code) {\n      setCurrentState({ token: null, tokenExchangeError: null });\n      return;\n    }\n\n    exchangeCodeAsync(\n      {\n        clientId: CLIENT_ID,\n        clientSecret: CLIENT_SECRET,\n        code,\n        redirectUri,\n      },\n      discovery,\n    )\n      .then((token) => {\n        if (isMounted.current) {\n          setCurrentState({ token, tokenExchangeError: null });\n        }\n      })\n      .catch((exchangeError) => {\n        if (isMounted.current) {\n          setCurrentState({ tokenExchangeError: exchangeError, token: null });\n        }\n      });\n  }, [code]);\n\n  return currentState;\n}\n\nexport default useAutoExchange;\n","import React from 'react';\n\nfunction useMounted() {\n  const isMounted = React.useRef(true);\n  React.useEffect(() => () => {\n    isMounted.current = false;\n  }, []);\n  return isMounted;\n}\n\nexport default useMounted;\n","export { default as Explore } from './Explore';\nexport { default as Liked } from './Liked';\nexport { default as Messages } from './Messages';\nexport { default as Profile } from './Profile';\nexport { default as LoginPage } from './LoginPage';\n","import React from 'react';\nimport {\n  View, ImageBackground,\n} from 'react-native';\nimport { Playlists, Cards } from '../components';\nimport styles from '../assets/styles';\nimport useSpotifyContext from '../hooks/useSpotifyAuth';\n\nfunction Explore() {\n  const backgroundLink = 'https://ollisco.se/assets/bg2.jpg'; // To avoid bg dissapearing after API call\n  const { user, playlists, addTrackToPlaylist } = useSpotifyContext();\n\n  return (\n    <View>\n      <ImageBackground\n        source={{ uri: backgroundLink }} // To avoid bg dissapearing after API call\n        style={styles.bg}\n        resizeMode=\"cover\"\n      >\n        <Cards />\n        <Playlists />\n      </ImageBackground>\n    </View>\n  );\n}\n\nexport default Explore;\n","import { createContext, FC, useState } from 'react';\nimport Swiper from 'react-native-deck-swiper';\nimport useSpotifyAuth from '../../hooks/useSpotifyAuth';\nimport useSpotifyContext from '../../hooks/useSpotifyAuth';\nimport { DataSong, SwipedCardContextT } from '../../types';\n\nexport const SwipeCardContext = createContext<SwipedCardContextT | null>(null);\n\nconst SwipeCardProvider: FC<React.ReactNode> = ({ children }) => {\n  const { recommendedTracks: userRecommendedTracks } = useSpotifyContext();\n  const [volume, setVolume] = useState<number>(50);\n  const [rgb, setRGB] = useState<string>('rgb(54, 54, 54)');\n  const [pressedTrack, setPressedTrack] = useState<any>(userRecommendedTracks ? userRecommendedTracks[0] : null);\n  const [showPlaylists, setShowPlaylists] = useState<boolean>(false);\n  const [swiper, setSwiper] = useState<Swiper<DataSong> | null>(null);\n\n  const [showType, setShowType] = useState<string>('mock');\n  const [recommendedIndex, setRecommendedIndex] = useState(0);\n  const [newReleasesIndex, setNewReleasesIndex] = useState(0);\n\n  const updateVolume = (value: number) => {\n    setVolume(value);\n  };\n\n  const { allowVolumeControll } = useSpotifyAuth();\n\n  return (\n    <SwipeCardContext.Provider value={{\n      volume,\n      updateVolume,\n      rgb,\n      setRGB,\n      pressedTrack,\n      setPressedTrack,\n      showPlaylists,\n      setShowPlaylists,\n      swiper,\n      setSwiper,\n      showType,\n      setShowType,\n      recommendedIndex,\n      setRecommendedIndex,\n      newReleasesIndex,\n      setNewReleasesIndex,\n      allowVolumeControll,\n    }}\n    >\n      {children}\n    </SwipeCardContext.Provider>\n  );\n};\n\nexport default SwipeCardProvider;\n","import React from 'react';\nimport { Text, TouchableOpacity } from 'react-native';\nimport Icon from './Icon';\nimport styles, { DARK_GRAY } from '../assets/styles';\nimport useSpotifyContext from '../hooks/useSpotifyAuth';\n\nfunction Settings() {\n  const { token } = useSpotifyContext();\n\n  return (\n    <TouchableOpacity style={styles.settings}>\n      <Text style={styles.settingsText}>\n        <Icon name=\"settings-sharp\" size={15} color={DARK_GRAY} onPress={() => console.log(token)} />\n      </Text>\n      {/* console.log(response) */}\n    </TouchableOpacity>\n  );\n}\n\nexport default Settings;\n","import React from 'react';\nimport { TouchableOpacity } from 'react-native';\nimport Icon from './Icon';\nimport styles, { DARK_GRAY } from '../assets/styles';\nimport useSpotifyContext from '../hooks/useSpotifyAuth';\n\nfunction Filters() {\n  const { getUserRecommendedTracks, getNewReleases } = useSpotifyContext();\n\n  const update = () => {\n    getUserRecommendedTracks();\n    getNewReleases();\n  };\n\n  return (\n    <TouchableOpacity style={styles.filters}>\n      <Icon\n        name=\"refresh\"\n        size={15}\n        color={DARK_GRAY}\n        onPress={update}\n        useFontAwesome\n      />\n    </TouchableOpacity>\n  );\n}\n\nexport default Filters;\n","import React from 'react';\nimport { Text, View, Image } from 'react-native';\nimport { MessageT } from '../types';\nimport styles from '../assets/styles';\n\nfunction Message({ image, lastMessage, name }: MessageT) {\n  return (\n    <View style={styles.containerMessage}>\n      <Image source={image} style={styles.avatar} />\n      <View>\n        <Text style={styles.messageName}>{name}</Text>\n        <Text style={styles.message}>{lastMessage}</Text>\n      </View>\n    </View>\n  );\n}\n\nexport default Message;\n","import React from 'react';\nimport { Text, View } from 'react-native';\nimport Icon from './Icon';\nimport { ProfileItemT } from '../types';\nimport styles, { WHITE } from '../assets/styles';\n\nfunction ProfileItem({\n  followerCount,\n  location,\n  name,\n  topTracks,\n  topArtists,\n  topGenres,\n}: ProfileItemT) {\n  return (\n    <View style={styles.containerProfileItem}>\n\n      <Text style={styles.name}>{name}</Text>\n\n      <Text style={styles.descriptionProfileItem}>\n        {followerCount}\n        {' followers '}\n        -\n        {' '}\n        {location}\n      </Text>\n\n      <View style={styles.info}>\n        <Text style={styles.iconProfile}>\n          <Icon name=\"person\" size={12} color={WHITE} />\n        </Text>\n        <Text style={styles.infoContent}>{topArtists}</Text>\n      </View>\n\n      <View style={styles.info}>\n        <Text style={styles.iconProfile}>\n          <Icon name=\"musical-notes\" size={12} color={WHITE} />\n        </Text>\n        <Text style={styles.infoContent}>{topTracks}</Text>\n      </View>\n\n      <View style={styles.info}>\n        <Text style={styles.iconProfile}>\n          <Icon name=\"albums-outline\" size={12} color={WHITE} />\n        </Text>\n        <Text style={styles.infoContent}>{topGenres}</Text>\n      </View>\n\n      <View style={styles.info}>\n        <Text style={styles.iconProfile}>\n          <Icon name=\"location\" size={12} color={WHITE} />\n        </Text>\n        <Text style={styles.infoContent}>{location}</Text>\n      </View>\n\n    </View>\n  );\n}\n\nexport default ProfileItem;\n","import { useContext } from 'react';\nimport React, {\n  TouchableOpacity, View, ScrollView, Text,\n} from 'react-native';\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport styles, { DARK_GRAY, WHITE } from '../assets/styles';\nimport useSpotifyContext from '../hooks/useSpotifyAuth';\nimport CardItemRow from './card-components/CardItemRow';\nimport { SwipeCardContext } from './card-components/CardProvider';\n// import swipcardcontext from types\nimport { SwipedCardContextT } from '../types';\nimport Icon from './Icon';\nimport { dummyDataPlaylists } from '../assets/data/dummy_data_playlists';\n\nfunction Playlists() {\n  const {\n    playlists, addTrackToPlaylist, token,\n    queueAndSkip,\n    recommendedTracks,\n    newReleases,\n  } = useSpotifyContext();\n\n  const {\n    pressedTrack,\n    showPlaylists,\n    setShowPlaylists,\n    swiper,\n    newReleasesIndex,\n    setNewReleasesIndex,\n    recommendedIndex,\n    setRecommendedIndex,\n    showType,\n  } = useContext(SwipeCardContext) as SwipedCardContextT;\n\n  if (showPlaylists) {\n    return (\n      <View style={styles.containerPlaylists}>\n        <View style={styles.playlistsTopRow}>\n          <Text style={{ color: '#000000', fontSize: 15 }}>\n            Only select a playlist where you can add songs\n          </Text>\n          <Icon\n            name=\"close\"\n            size={30}\n            color=\"#000000\"\n            style={{ marginLeft: 'auto', color: DARK_GRAY }}\n            onPress={() => setShowPlaylists(false)}\n          />\n        </View>\n        <SafeAreaView style={{ flex: 1 }}>\n          <ScrollView>\n            {playlists ? (\n              playlists.map((item: any) => (\n                <TouchableOpacity\n                  key={item.id}\n                  onPress={() => {\n                    addTrackToPlaylist(item.id, pressedTrack.uri);\n                    setShowPlaylists(false);\n                    swiper?.swipeTop();\n                    // if (showType === 'new' && newReleases[newReleasesIndex + 1] !== undefined) {\n                    //   queueAndSkip(newReleases[newReleasesIndex + 1].uri);\n                    //   setRecommendedIndex(recommendedIndex + 1);\n                    //   setNewReleasesIndex(newReleasesIndex + 1);\n\n                    // } else if (showType === 'recommended') {\n                    //   queueAndSkip(recommendedTracks[recommendedIndex + 1].uri);\n                    //   setRecommendedIndex(recommendedIndex + 1);\n                    //   setNewReleasesIndex(newReleasesIndex + 1);\n                    // }\n                  }}\n                >\n                  <CardItemRow\n                    image={item.images.length > 0 ? { uri: item.images[0].url } : dummyDataPlaylists[0].image}\n                    name={item.name}\n                  />\n                </TouchableOpacity>\n              ))\n\n            ) : (\n\n              dummyDataPlaylists.map((item: any) => (\n                <TouchableOpacity\n                  key={item.id}\n                  onPress={() => {\n                    setShowPlaylists(false);\n                    swiper?.swipeRight();\n                  }}\n                >\n                  <CardItemRow\n                    image={item.image}\n                    name={item.name}\n                  />\n                </TouchableOpacity>\n              ))\n            )}\n            {/* Ugly padding hack */}\n            <TouchableOpacity>\n              <Text style={{ color: WHITE }}>Hello World!</Text>\n              <Text style={{ color: WHITE }}>Hello World!</Text>\n              <Text style={{ color: WHITE }}>Hello World!</Text>\n              <Text style={{ color: WHITE }}>Hello World!</Text>\n            </TouchableOpacity>\n          </ScrollView>\n        </SafeAreaView>\n      </View>\n    );\n  }\n  return (<></>);\n}\nexport default Playlists;\nfunction newReleasesIndex(newReleasesIndex: any) {\n  throw new Error('Function not implemented.');\n}\n","\n\n\n\n\nexport const dummyDataPlaylists = [\n    {\n        id: '1',\n        name: 'Playlist 1',\n        image: require('../../assets/images/logic.jpg'),\n    },\n    {\n        id: '2',\n        name: 'Playlist 2',\n        image: require('../../assets/images/odz.jpg'),\n    },\n    {\n        id: '3',\n        name: 'Playlist 3',\n        image: require('../../assets/images/metallica.jpg'),\n    },\n    // make 5 more object like that\n    {\n        id: '4',\n        name: 'Playlist 4',\n        image: require('../../assets/images/dio.jpg'),\n    },\n    {\n        id: '5',\n        name: 'Playlist 5',\n        image: require('../../assets/images/post.jpg'),\n    },\n    {\n        id: '6',\n        name: 'Playlist 6',\n        image: require('../../assets/images/skepta.jpg'),\n    }\n];","import { View } from 'react-native';\nimport React from 'react';\nimport styles from '../../assets/styles';\nimport CardStackHandler from './CardStackHandler';\n\ntype Props = {}\n\nfunction Cards(props: Props) {\n  return (\n    <View style={styles.containerHome}>\n      {/* <View style={styles.top}> */}\n      {/* <Settings /> */}\n      {/* <TopRow /> */}\n      {/* <Filters /> */}\n      {/* </View> */}\n      <CardStackHandler />\n    </View>\n  );\n}\n\nexport default Cards;\n","import React, { useContext } from 'react';\nimport { View, Platform } from 'react-native';\nimport Swiper from 'react-native-deck-swiper';\nimport DATA from '../../assets/data/dummy_data_songs';\nimport { CARD_HEIGHT, DARK_GRAY } from '../../assets/styles';\nimport useSpotifyContext from '../../hooks/useSpotifyAuth';\nimport { SwipedCardContextT } from '../../types';\nimport CardItem from './CardItem';\nimport { SwipeCardContext } from './CardProvider';\n\nfunction CardStackHandler(_style: any) {\n  const {\n    recommendedTracks: userTopItems,\n    getUserRecommendedTracks: getTopUserItems,\n    token,\n    likeSong,\n    queueAndSkip,\n    newReleases,\n    getNewReleases,\n  } = useSpotifyContext();\n\n  const {\n    setRGB,\n    swiper,\n    setSwiper,\n    showType,\n    recommendedIndex,\n    setRecommendedIndex,\n    newReleasesIndex,\n    setNewReleasesIndex,\n  } = useContext(SwipeCardContext) as SwipedCardContextT;\n\n  // const [cardType, setCardType] = useState('recommended');\n\n  const swipeColorLimit = 50;\n  function convertRGBgreen(d: number) {\n    const m = d > 110 ? 100 : d;\n    return `rgb(${54 - ((54 * d) / 300) + 20}, ${m}, ${54 - ((54 * d) / 300) + 20})`;\n  }\n  function convertRGBred(d: number) {\n    const m = d < 110 ? 110 : -d;\n    return `rgb(${m}, ${54 - ((54 * -d) / 300) + 20}, ${54 - ((54 * -d) / 300) + 20})`;\n  }\n\n  // when showType updates jump to swiper index\n  React.useEffect(\n    () => {\n      if (swiper) {\n        if (showType === 'recommended') {\n          swiper.jumpToCardIndex(recommendedIndex);\n        } else if (showType === 'new') {\n          swiper.jumpToCardIndex(newReleasesIndex);\n        }\n      }\n    },\n    [showType, swiper, recommendedIndex, newReleasesIndex],\n  );\n\n  return (\n    <View style={{ borderColor: '#000', borderWidth: 3, height: CARD_HEIGHT }}>\n      {userTopItems.length > 0 && showType === 'recommended'\n        ? (\n          <Swiper\n            cards={userTopItems}\n            renderCard={(\n              card:\n              {album: any, popularity: string | undefined, artists: string[], releaseDate: string, name: string},\n              index: number,\n            ) => (\n              <CardItem\n                hasActions\n                track={card.name}\n                image={{ uri: card.album.images[0].url }}\n                releaseDate={card.releaseDate || undefined}\n                popularity={card.popularity}\n                artist={card.artists.map((artist: any) => artist.name).join(', ')}\n                id={index}\n              />\n            )}\n            useViewOverflow={Platform.OS === 'ios'}\n            onSwiped={(cardIndex) => {\n              console.log(cardIndex);\n              setRGB(DARK_GRAY);\n              // console.log(token && userTopItems[recommendedIndex + 1].uri);\n              if (token && userTopItems[recommendedIndex + 1] !== undefined) {\n                queueAndSkip(userTopItems[recommendedIndex + 1]);\n                setRecommendedIndex(recommendedIndex + 1);\n                // setNewReleasesIndex(newReleasesIndex + 1);\n              }\n            }}\n            onSwipedAborted={() => {\n              setRGB(DARK_GRAY);\n            }}\n            onSwipedAll={() => {\n              setRecommendedIndex(0);\n              getTopUserItems();\n              // getNewReleases();\n              // setNewReleasesIndex(0);\n            }}\n\n            onSwipedRight={(index) => {\n              console.log(index);\n              if (token) {\n                likeSong(userTopItems[index].id);\n              }\n            }}\n            onSwiping={(x, _y) => {\n              if (x > swipeColorLimit) {\n                setRGB(convertRGBgreen(x));\n              } else if (x < -swipeColorLimit) {\n                setRGB(convertRGBred(x));\n              } else {\n                setRGB(DARK_GRAY);\n              }\n            }}\n            ref={(swiper) => setSwiper(swiper)}\n            cardIndex={0}\n            verticalSwipe={false}\n            backgroundColor=\"#000000\"\n            stackSize={3}\n            swipeBackCard\n            key=\"top-items\"\n          />\n        )\n        : newReleases && showType === 'new'\n          ? (\n            <Swiper\n              cards={newReleases}\n              renderCard={(\n                card: {images: {url: string}[], name: string, artists: any, popularity: string, releaseDate: string},\n                index: number,\n              ) => (\n                <CardItem\n                  hasActions\n                  image={{ uri: card.images[0].url }}\n                  track={card.name || '*No Track Name Found*'}\n                  releaseDate={card.releaseDate || '*No Release Date Found*'}\n                  popularity={card.popularity || '0'}\n                  artist={card.artists.map((artist: any) => artist.name).join(', ') || '*No Artist Found*'}\n                  id={index}\n                />\n              )}\n              useViewOverflow={Platform.OS === 'ios'}\n              onSwiped={(cardIndex) => {\n                console.log(cardIndex);\n                setRGB(DARK_GRAY);\n                if (token && newReleases[newReleasesIndex + 1] !== undefined) {\n                  queueAndSkip(newReleases[newReleasesIndex + 1]);\n                  // setRecommendedIndex(recommendedIndex + 1);\n                  setNewReleasesIndex(newReleasesIndex + 1);\n                }\n              }}\n              onSwipedAborted={() => {\n                setRGB(DARK_GRAY);\n              }}\n              onSwipedAll={() => {\n                getNewReleases();\n                setNewReleasesIndex(0);\n              }}\n              onSwipedRight={(index) => {\n                if (token) {\n                  likeSong(newReleases[index].id);\n                }\n              }}\n              onSwiping={(x, _y) => {\n                if (x > swipeColorLimit) {\n                  setRGB(convertRGBgreen(x));\n                } else if (x < -swipeColorLimit) {\n                  setRGB(convertRGBred(x));\n                } else {\n                  setRGB(DARK_GRAY);\n                }\n              }}\n              ref={(swiper) => setSwiper(swiper)}\n              cardIndex={0}\n              verticalSwipe={false}\n              backgroundColor=\"#000000\"\n              stackSize={3}\n              swipeBackCard\n            />\n\n          )\n\n          : null}\n\n      {!newReleases && userTopItems.length === 0 ? (\n        <Swiper\n          cards={DATA}\n          renderCard={(card) => (\n            <CardItem\n              hasActions\n              image={card.image}\n              track={card.track}\n              description={card.artist}\n              matches={card.match}\n              artist={card.artist}\n            />\n          )}\n          useViewOverflow={Platform.OS === 'ios'}\n          onSwiped={(_cardIndex) => {\n            setRGB(DARK_GRAY);\n          }}\n          onSwipedAborted={() => {\n            setRGB(DARK_GRAY);\n          }}\n          onSwipedAll={() => {\n            console.log('onSwipedAll');\n          }}\n          onSwiping={(x, _y) => {\n            if (x > swipeColorLimit) {\n              setRGB(convertRGBgreen(x));\n            } else if (x < -swipeColorLimit) {\n              setRGB(convertRGBred(x));\n            } else {\n              setRGB(DARK_GRAY);\n            }\n          }}\n          ref={(swiper) => setSwiper(swiper)}\n          cardIndex={0}\n          verticalSwipe={false}\n          backgroundColor=\"#000000\"\n          stackSize={3}\n          infinite\n          swipeBackCard\n        />\n      ) : null}\n\n    </View>\n  );\n}\n\nexport default CardStackHandler;\n","module.exports = __webpack_public_path__ + \"static/media/xxx.a0b6a7dc.jpg\";","module.exports = __webpack_public_path__ + \"static/media/travis.a6dcc371.jpg\";","module.exports = __webpack_public_path__ + \"static/media/banger.bb266617.jpg\";","import React from 'react';\nimport { Text, View, Image } from 'react-native';\nimport { CardItemT } from '../../types';\n\nimport styles from '../../assets/styles';\n\nfunction CardItemSmall({\n  image,\n  artist,\n  track,\n}: CardItemT) {\n  const maxLength = 20;\n  if (track.length > maxLength) {\n    track = `${track.slice(0, maxLength)}...`;\n  }\n  return (\n    <View style={styles.containerCardItemSmall}>\n      {/* IMAGE */}\n      <Image source={image} style={styles.smallImageStyle} />\n      {/* NAME */}\n      <Text style={styles.smallNameStyle}>{track}</Text>\n\n      <View style={styles.artist}>\n        <Text style={[styles.artistText, { fontSize: 15 }]}>{artist}</Text>\n      </View>\n    </View>\n  );\n}\n\nexport default CardItemSmall;\n","import {\n  StyleSheet, Switch, Text, View,\n} from 'react-native';\nimport React, { useState } from 'react';\nimport { SettingItemSwitchT } from '../types';\nimport { SPOTIFY_GREEN, WHITE, GRAY } from '../assets/styles/index';\n\nfunction SettingItemSwitch({\n  text,\n  onValueChange,\n  value,\n  explanation,\n}: SettingItemSwitchT) {\n  const [disabled, setDisabled] = useState(false);\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.textContainer}>\n        <Text style={styles.text}>{text}</Text>\n        <Text style={styles.explanation}>{explanation}</Text>\n      </View>\n      <Switch\n        trackColor={{ false: '#767577', true: SPOTIFY_GREEN }}\n        thumbColor={value ? SPOTIFY_GREEN : '#FFFFFF'}\n        ios_backgroundColor=\"#3e3e3e\"\n        onValueChange={onValueChange}\n        value={value}\n      />\n    </View>\n  );\n}\n\nexport default SettingItemSwitch;\n\nconst styles = StyleSheet.create({\n  container: {\n    alignItems: 'center',\n    padding: 20,\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    // add border to each flex item\n    borderBottomColor: GRAY,\n    borderBottomWidth: 1,\n    marginTop: -1,\n\n  },\n  textContainer: {\n    flexDirection: 'column',\n    justifyContent: 'space-between',\n    width: '70%',\n  },\n  text: {\n    fontSize: 18,\n    color: WHITE,\n    borderRadius: 3,\n    borderColor: GRAY,\n  },\n  explanation: {\n    fontSize: 14,\n    color: GRAY,\n  },\n});\n","import { Text, TouchableOpacity } from 'react-native';\nimport React, { useEffect, useState } from 'react';\nimport styles from '../assets/styles';\nimport useError from '../hooks/useError';\n\nfunction Error() {\n  const {\n    errorTexts, showComponent, setShowComponent, setErrorTexts, popErrorText,\n  } = useError();\n  const [currentError, setCurrentError] = useState<string[] | null>(null);\n\n  // const [showComponent, setShowComponent] = useState(false);\n\n  useEffect(() => {\n    if (errorTexts.length > 0) {\n      const toRef = setTimeout(() => {\n        setShowComponent(true);\n        clearTimeout(toRef);\n        // it is good practice to clear the timeout (but I am not sure why)\n      }, 250);\n    }\n  }, [errorTexts]);\n\n  useEffect(() => {\n    if (showComponent) {\n      const toRef = setTimeout(() => {\n        setShowComponent(false);\n        clearTimeout(toRef);\n        setErrorTexts([]);\n      }, 4000);\n    }\n  }, [showComponent]);\n\n  const componentTwo = () => (\n    <TouchableOpacity\n      style={styles.errorContainer}\n      onPress={() => { setShowComponent(!showComponent); }}\n    >\n\n      <Text style={styles.testText}>{errorTexts}</Text>\n\n    </TouchableOpacity>\n  );\n\n  return (\n\n    showComponent ? componentTwo() : null\n  );\n}\n\nexport default Error;\n","import React from 'react';\nimport {\n  View,\n  Text,\n  ImageBackground,\n  FlatList,\n} from 'react-native';\nimport { CardItemSmall } from '../components';\nimport DATA from '../assets/data/dummy_data_songs';\nimport styles from '../assets/styles';\nimport BG_IMAGE from '../assets/images/bg2.jpg';\nimport useSpotifyContext from '../hooks/useSpotifyAuth';\n\nfunction Liked() {\n  const { likedSongs, getLikedSongs, token } = useSpotifyContext();\n\n  React.useEffect(() => {\n    if (!likedSongs && token !== null) {\n      getLikedSongs();\n    }\n  }, [likedSongs, getLikedSongs, token]);\n\n  return (\n    <View>\n      <ImageBackground\n        source={BG_IMAGE}\n        style={styles.bg}\n      >\n        <View style={styles.containerLiked}>\n          <View style={styles.top}>\n            <Text style={styles.title}>Liked Songs</Text>\n          </View>\n          {/* <SafeAreaView>\n            <ScrollView> */}\n          {likedSongs ? (\n            <FlatList\n              numColumns={2}\n              data={likedSongs}\n              keyExtractor={(item, index) => index.toString()}\n              renderItem={({ item }) => (\n                <View>\n                  <CardItemSmall\n                    image={{ uri: item.track.album.images[0].url }}\n                    track={item.track.name}\n                    artist={item.track.artists[0].name}\n                  />\n                </View>\n              )}\n            />\n          ) : (\n            <FlatList\n              numColumns={2}\n              data={DATA}\n              keyExtractor={(item, index) => index.toString()}\n              renderItem={({ index, item }) => (\n                <View>\n                  <CardItemSmall\n                    id={index}\n                    image={item.image}\n                    track={item.track}\n                    artist={item.artist}\n                  />\n                </View>\n              )}\n            />\n          )}\n          {/* Ugly padding hack */}\n          <View>\n            <Text>Padding</Text>\n            <Text>Padding</Text>\n            <Text>Padding</Text>\n          </View>\n        </View>\n      </ImageBackground>\n    </View>\n  );\n}\n\nexport default Liked;\n","import React from 'react';\nimport {\n  Text,\n  TouchableOpacity,\n  ImageBackground,\n  View,\n  FlatList,\n} from 'react-native';\nimport { Icon, Message } from '../components';\nimport DEMO from '../assets/data/dummy_data_profiles';\nimport styles, { GRAY } from '../assets/styles';\nimport BG_IMAGE from '../assets/images/bg2.jpg';\n\nfunction Messages() {\n  return (\n    <View>\n      <ImageBackground\n        source={BG_IMAGE}\n        style={styles.bg}\n      >\n        <View style={styles.containerMessages}>\n          <View style={styles.top}>\n            <Text style={styles.title}>Messages</Text>\n            <TouchableOpacity>\n              <Icon name=\"person-add\" color={GRAY} size={20} style={styles.topIconRight} />\n            </TouchableOpacity>\n          </View>\n          <FlatList\n            data={DEMO}\n            keyExtractor={(item, index) => index.toString()}\n            renderItem={({ item }) => (\n              <TouchableOpacity>\n                <Message\n                  image={item.image}\n                  name={item.name}\n                  lastMessage={item.message}\n                />\n              </TouchableOpacity>\n            )}\n          />\n        </View>\n      </ImageBackground>\n    </View>\n  );\n}\n\nexport default Messages;\n","module.exports = __webpack_public_path__ + \"static/media/img01.a678bf12.jpeg\";","import React from 'react';\nimport {\n  ScrollView,\n  View,\n  ImageBackground,\n  TouchableOpacity,\n} from 'react-native';\nimport { Icon, ProfileItem } from '../components';\nimport DEMO from '../assets/data/dummy_data_profiles';\nimport styles, { WHITE } from '../assets/styles';\nimport BG_IMAGE from '../assets/images/bg2.jpg';\nimport useSpotifyContext from '../hooks/useSpotifyAuth';\nimport { getLocation } from '../components/utils/country-utils';\n\nfunction Profile() {\n  const {\n    user, topTracks, topArtists, topGenres,\n  } = useSpotifyContext();\n  const {\n    image,\n    topGenres: mockTopGenres,\n    topArtists: mockTopArtists,\n    topTracks: mockTopTracks,\n    name,\n    location,\n  } = DEMO[7];\n\n  return (\n\n    <View>\n      <View>\n        <ImageBackground\n          source={BG_IMAGE}\n          style={styles.bg}\n        />\n        <ScrollView style={styles.containerProfile}>\n          {user && user.images.length > 0 ? (\n            <ImageBackground source={{ uri: user.images[0].url }} style={styles.photo} />\n\n          ) : (\n            <ImageBackground source={image} style={styles.photo} />\n          )}\n\n          <View style={styles.top}>\n            <TouchableOpacity>\n              <Icon\n                name=\"swap-horizontal-outline\"\n                size={20}\n                color={WHITE}\n                style={styles.topIconLeft}\n              />\n            </TouchableOpacity>\n\n            <TouchableOpacity>\n              <Icon\n                name=\"ellipsis-vertical\"\n                size={20}\n                color={WHITE}\n                style={styles.topIconRight}\n              />\n            </TouchableOpacity>\n          </View>\n\n          {user ? (\n            <ProfileItem\n              followerCount={user.followers.total}\n              name={user.display_name}\n              location={getLocation(user.country)}\n              topTracks={topTracks}\n              topArtists={topArtists}\n              topGenres={topGenres}\n            />\n          ) : (\n            <ProfileItem\n              followerCount=\"20\"\n              name={name}\n              location={location}\n              topTracks={mockTopTracks}\n              topArtists={mockTopArtists}\n              topGenres={mockTopGenres}\n            />\n          )}\n        </ScrollView>\n      </View>\n    </View>\n  );\n}\n\nexport default Profile;\n","// create a react functional component\n\nimport React from 'react';\nimport {\n  View,\n  ImageBackground,\n} from 'react-native';\nimport BACKGROUND_IMAGE from '../assets/swiperr-splash.png';\nimport { CARD_HEIGHT, DIMENSION_HEIGHT } from '../assets/styles';\nimport { Login } from '../components';\nimport { LoginMock } from '../components/Login';\n\nfunction LoginPage({ navigation }: any) {\n  return (\n    <ImageBackground style={{ height: '100%' }} source={BACKGROUND_IMAGE}>\n      <View style={{ height: DIMENSION_HEIGHT }}>\n        <View style={{\n          display: 'flex',\n          alignItems: 'center',\n          marginTop: CARD_HEIGHT * 0.65,\n          // space between rows\n\n        }}\n        >\n          <Login navigation={navigation} />\n          <LoginMock navigation={navigation} />\n        </View>\n      </View>\n    </ImageBackground>\n  );\n}\n\nexport default LoginPage;\n","module.exports = __webpack_public_path__ + \"static/media/swiperr-splash.26a8d603.png\";","import React from 'react';\nimport { Text, View } from 'react-native';\nimport Icon from './Icon';\nimport styles, { GRAY, WHITE } from '../assets/styles';\nimport { TabBarIconT } from '../types';\n\nfunction TabBarIcon({ focused, iconName, text }: TabBarIconT) {\n  const iconFocused = focused ? WHITE : GRAY;\n\n  return (\n    <View style={styles.iconMenu}>\n      <Icon name={iconName} size={16} color={iconFocused} />\n      <Text style={[styles.tabButtonText, { color: iconFocused }]}>{text}</Text>\n    </View>\n  );\n}\n\nexport default TabBarIcon;\n","import {\n  View, ImageBackground, Text,\n} from 'react-native';\nimport React, { useState } from 'react';\nimport { CLIENT_ID, CLIENT_SECRET } from '@env';\nimport styles from '../assets/styles';\nimport BG_IMAGE from '../assets/images/bg2.jpg';\nimport { SettingItemSwitch } from '../components';\nimport SettingItemDropdown from '../components/SettingItemDropdown';\nimport useSpotifyContext from '../hooks/useSpotifyAuth';\nimport { getLocation } from '../components/utils/country-utils';\nimport { mobileRedirectUri, redirectUri, webRedirectUri } from '../hooks/utils/auth-utils';\nimport { dropdownSize } from '../types';\n\nconst likedSongString = 'Liked songs';\n\nfunction MockSettingItems() {\n  const [exampleBool, setExampleBool] = useState(false);\n  return (\n    <View>\n      <SettingItemDropdown\n        header=\"Country\"\n        explanation=\"Music will be adapted to the given country. New releases will be based on the country you choose.\"\n        defaultValue={'SE' || ''}\n        options={['SE', 'US', 'GB', 'CA']}\n      />\n\n      <SettingItemDropdown\n        header=\"Default Playlist\"\n        explanation=\"The default playlist where right swiped cards apear. Please only choose playlists that you own or can add music to.\"\n        options={['Playlist 1', 'Playlist 2', 'Playlist 3']}\n      />\n\n      <SettingItemSwitch\n        text=\"An example Switch\"\n        value={exampleBool}\n        onValueChange={() => setExampleBool(!exampleBool)}\n      />\n\n      <SettingItemDropdown\n        header=\"Debug info\"\n        explanation=\"This is debug info for development resons. If you are testing you can ignore this dropdown.\"\n        options={[\n          redirectUri,\n          webRedirectUri,\n          mobileRedirectUri,\n          CLIENT_ID !== undefined ? 'client id exists' : 'client id does not exist',\n          CLIENT_SECRET !== undefined ? 'client secret exists' : 'client secret does not exist']}\n        dropdownSize={dropdownSize.MEDIUM}\n      />\n\n    </View>\n  );\n}\n\nfunction SettingItems() {\n  const {\n    playlists,\n    defaultPlaylist,\n    storeDefaultPlaylist,\n    availableMarkets,\n    chosenMarket,\n    setChosenMarket,\n  } = useSpotifyContext();\n  const [playlistShowValue, setPlaylistShowValue] = useState(defaultPlaylist.name || likedSongString);\n\n  function setDefaultPlaylist(playlistName: string) {\n    if (playlistName === likedSongString) {\n      storeDefaultPlaylist(likedSongString);\n      return;\n    }\n    const playlist = playlists.find((playlist: { name: string; }) => playlist.name === playlistName);\n    storeDefaultPlaylist(playlist);\n  }\n\n  React.useEffect(() => {\n    Promise.resolve(defaultPlaylist).then((val: any) => {\n      setPlaylistShowValue(val.name || likedSongString);\n    });\n  }), [defaultPlaylist];\n\n  React.useEffect(() => {\n    Promise.resolve(defaultPlaylist).then((val: any) => {\n      setPlaylistShowValue(val.name || likedSongString);\n    });\n  }), [defaultPlaylist];\n\n  return (\n    <View>\n      <SettingItemDropdown\n        header=\"Country\"\n        explanation=\"Music will be adapted to the given country. New releases will be based on the country you choose.\"\n        defaultValue={getLocation(chosenMarket) || ''}\n        dropdownSize={dropdownSize.LARGE}\n        options={availableMarkets.map((\n          country: {\n            code: string,\n            name: string,\n            nameWithFlag: string\n          },\n        ) => country.nameWithFlag)}\n        onSelect={(value: string) => {\n          setChosenMarket(availableMarkets.find((country: {nameWithFlag: string}) => country.nameWithFlag === value).code);\n        }}\n      />\n\n      <SettingItemDropdown\n        header=\"Default Playlist\"\n        explanation=\"The default playlist where right swiped cards apear. Please only choose playlists that you own or can add music to.\"\n        options={[likedSongString, ...playlists.map((playlist: { name: string; }) => playlist.name)]}\n        defaultValue={playlistShowValue}\n        dropdownSize={dropdownSize.MEDIUM}\n        onSelect={(value: string) => {\n          setDefaultPlaylist(value);\n        }}\n      />\n      {/* Kinda works but cause WIERD crashes */}\n      {/* <SettingItemSwitch\n        text=\"Play Snippets\"\n        explanation=\"If you want to play snippets, turn this on. If you want to play full songs through spotify, turn this off.\"\n        value={playSnippets}\n        onValueChange={(value: boolean) => {\n          value ? pauseSpotify() : pauseSnippet();\n          setPlaySnippets(value);\n        }}\n\n      /> */}\n    </View>\n  );\n}\n\nfunction Settings() {\n  const { playlists, availableMarkets } = useSpotifyContext();\n  return (\n    <View>\n\n      <ImageBackground\n        source={BG_IMAGE}\n        style={styles.bg}\n      >\n        <View style={styles.top}>\n          <Text style={styles.title}>Settings</Text>\n        </View>\n        {playlists && playlists.length > 0 && availableMarkets && availableMarkets.length > 0\n          ? <SettingItems />\n          : <MockSettingItems />}\n      </ImageBackground>\n    </View>\n  );\n}\n\nexport default Settings;\n","import {\n  StyleSheet, Text, View,\n} from 'react-native';\nimport React from 'react';\nimport ModalDropdown from 'react-native-modal-dropdown';\nimport { dropdownSize, SettingItemDropdownT } from '../types';\nimport {\n  WHITE, GRAY, BLACK, DARKER_GRAY,\n} from '../assets/styles/index';\n\nfunction SettingItemDropdown({\n  header,\n  explanation,\n  options,\n  defaultValue,\n  onSelect,\n  dropdownSize: size,\n}: SettingItemDropdownT) {\n  const ddSize = size === dropdownSize.MEDIUM ? 300\n    : size === dropdownSize.LARGE ? 400\n      : 200;\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.textContainer}>\n        <Text style={styles.header}>{header}</Text>\n        <Text style={styles.explanation}>{explanation}</Text>\n      </View>\n      <ModalDropdown\n        style={styles.dropdownNonpress}\n        options={options}\n        defaultValue={defaultValue || 'Select an item...'}\n        dropdownStyle={[styles.dropdown, { height: ddSize }]}\n        dropdownTextHighlightStyle={styles.dropdownTextHighlight}\n        textStyle={styles.header}\n        showsVerticalScrollIndicator={false}\n        dropdownTextStyle={styles.dropdownText}\n        onSelect={(_index: any, value: any) => {\n          if (onSelect && value) {\n            onSelect(value);\n          }\n        }}\n      />\n    </View>\n  );\n}\n\nexport default SettingItemDropdown;\n\nconst styles = StyleSheet.create({\n  container: {\n    alignItems: 'center',\n    padding: 20,\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    borderBottomColor: GRAY,\n    borderBottomWidth: 1,\n    marginTop: -1,\n\n  },\n  header: {\n    fontSize: 18,\n    color: WHITE,\n  },\n  dropdown: {\n    width: 150,\n    height: 100,\n    borderColor: BLACK,\n    borderWidth: 1,\n    borderRadius: 3,\n  },\n  dropdownNonpress: {\n    borderBottomWidth: 1,\n    borderBottomColor: GRAY,\n    padding: 5,\n    width: '40%',\n  },\n  dropdownText: {\n    fontSize: 18,\n    color: GRAY,\n    backgroundColor: DARKER_GRAY,\n    borderColor: BLACK,\n  },\n  dropdownTextHighlight: {\n    color: WHITE,\n  },\n  explanation: {\n    fontSize: 14,\n    color: GRAY,\n  },\n  textContainer: {\n    flexDirection: 'column',\n    justifyContent: 'space-between',\n    width: '60%',\n  },\n});\n","import React, { createContext, useContext, useState } from 'react';\n\nconst ErrorContext: React.Context<{\n    errorTexts: string[];\n    addErrorText: (errorText: string) => void;\n    popErrorText: () => string | undefined;\n    setErrorTexts: any;\n    showComponent: boolean | null,\n    setShowComponent: any;\n}> = createContext({\n  errorTexts: [],\n  addErrorText: () => {},\n  popErrorText: () => {},\n  setErrorTexts: () => {},\n  showComponent: null,\n  setShowComponent: () => {},\n\n});\n\ninterface Props {\n    children: React.ReactNode\n  }\n\nexport const ErrorProvider: React.ReactNode = ({ children }: Props) => {\n  const [errorTexts, setErrorTexts] = useState<string[]>([]);\n  const [showComponent, setShowComponent] = useState(false);\n\n  function addErrorText(text: string) {\n    const newArray = errorTexts.concat(text);\n    setErrorTexts(newArray);\n  }\n\n  function popErrorText() {\n    // pop item from array\n    if (errorTexts.length > 0) {\n      const item = errorTexts[0];\n      const newArray = errorTexts.slice(1);\n      setErrorTexts(newArray);\n      return item;\n    }\n    console.log('Fatal: no items');\n  }\n\n  return (\n    <ErrorContext.Provider value={{\n      errorTexts,\n      addErrorText,\n      popErrorText,\n      showComponent,\n      setShowComponent,\n      setErrorTexts,\n    }}\n    >\n      {children}\n    </ErrorContext.Provider>\n  );\n};\n\nexport default function useError() {\n  return useContext(ErrorContext);\n}\n","module.exports = __webpack_public_path__ + \"static/media/bg2.a5ed1007.jpg\";"],"sourceRoot":""}