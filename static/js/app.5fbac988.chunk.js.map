{"version":3,"sources":["hooks/useError.tsx","assets/styles/index.ts","hooks/utils/auth-utils.ts","components/card-components/CardItem.tsx","components/Settings.tsx","components/Filters.tsx","components/Login.tsx","components/card-components/CardItemRow.tsx","assets/images/logic.jpg","assets/images/odz.jpg","assets/images/metallica.jpg","assets/images/dio.jpg","assets/images/post.jpg","assets/images/skepta.jpg","assets/data/dummy_data_songs.ts","assets/data/dummy_data_profiles.ts","hooks/useSpotifyAuth.tsx","App.tsx","components/Icon.tsx","components/index.ts","components/card-components/CardProvider.tsx","hooks/useAutoExchange.tsx","hooks/useMounted.tsx","screens/index.ts","screens/Explore.tsx","components/Message.tsx","components/ProfileItem.tsx","components/Playlists.tsx","assets/data/dummy_data_playlists.ts","components/card-components/Cards.tsx","components/card-components/CardStackHandler.tsx","assets/images/xxx.jpg","assets/images/travis.jpg","assets/images/banger.jpg","components/card-components/CardItemSmall.tsx","components/SettingItemSwitch.tsx","components/Error.tsx","screens/Liked.tsx","screens/Messages.tsx","assets/images/img01.jpeg","screens/Profile.tsx","screens/LoginPage.tsx","components/TabBarIcon.tsx","screens/Settings.tsx","components/SettingItemDropdown.tsx","assets/images/bg2.jpg"],"names":["useContext","ErrorContext","createContext","errorTexts","addErrorText","popErrorText","setErrorTexts","showComponent","setShowComponent","children","useState","Provider","value","text","newArray","concat","length","item","slice","console","log","WHITE","GRAY","BLACK","DIMENSION_WIDTH","Dimensions","get","width","DIMENSION_HEIGHT","height","CARD_HEIGHT","StyleSheet","create","containerCardItem","backgroundColor","borderRadius","borderWidth","alignItems","margin","elevation","shadowOpacity","shadowRadius","shadowColor","shadowOffset","justifyContent","containerCardItemWeb","padding","containerCardItemSmall","containerCardItemRow","flexDirection","playlistText","fontSize","color","marginLeft","matchesCardItem","marginTop","paddingVertical","paddingHorizontal","matchesTextCardItem","exploreTopCenter","textAlign","exploreTopCenterText","marginHorizontal","exploreTopCenterTextActive","volumeSlider","display","descriptionCardItem","artist","paddingBottom","artistText","releaseDate","reminderText","online","marginRight","offline","actionsCardItem","button","miniButton","smallImageStyle","playlistImage","smallNameStyle","paddingTop","imageStyle","trackStyle","flexWrap","flexShrink","settings","settingsText","filters","login","loginText","containerMessage","flex","avatar","marginVertical","message","containerProfileItem","matchesProfileItem","alignSelf","matchesTextProfileItem","name","messageName","descriptionProfileItem","info","iconProfile","infoContent","playlistsTopRow","bg","resizeMode","position","top","title","fontWeight","containerHome","zIndex","containerPlaylists","borderTopLeftRadius","borderTopRightRadius","containerLiked","containerMessages","containerProfile","photo","topIconLeft","paddingLeft","topIconRight","paddingRight","actionsProfile","textButton","circledButton","roundedButton","tabButtonText","textTransform","iconMenu","errorContainer","borderBottomWidth","borderColor","testText","redirectUri","Platform","OS","discovery","authorizationEndpoint","tokenEndpoint","hasActions","image","popularity","track","index","id","SwipeCardContext","volume","updateVolume","rgb","setPressedTrack","setShowPlaylists","showType","pressedTrack","user","isPlaying","setIsPlaying","switchPlayingState","token","setVolume","userRecommendedTracks","recommendedTracks","newReleases","isLandscape","landScapeWeb","styles","cardOutline","SPOTIFY_GREEN","styleContainer","flexDir","style","source","size","minimumValue","maximumValue","step","minimumTrackTintColor","maximumTrackTintColor","thumbTintColor","onValueChange","onSlidingComplete","FLASH_ACTIONS","onPress","DISLIKE_ACTIONS","DARK_GRAY","promptAsync","setShowType","useFontAwesome","module","exports","match","album","IMAGE_LOGIC","IMAGE_XXX","IMAGE_SKEPTA","IMAGE_BANGER","IMAGE_ODZ","IMAGE_TRAVIS","IMAGE_METALLICA","location","IMAGE_DIO","IMAGE_POST","isOnline","description","age","IMAGE_01","IMAGE_02","IMAGE_03","IMAGE_04","IMAGE_05","IMAGE_06","IMAGE_07","infoPersonal","infoMusic","lastSeen","topTracks","topArtists","topGenres","IMAGE_08","IMAGE_09","IMAGE_10","SpotifyAuthContext","getLocation","countryCode","countries","WebBrowser","maybeCompleteAuthSession","getRecommendedTracks","likeSong","queueAndSkip","likedSongs","getLikedSongs","getPlaylists","playlists","addTrackToPlaylist","setDefaultPlaylist","availableMarkets","setChosenMarket","chosenMarket","setUser","setRecommendedTracks","userPlaylists","setUserPlaylists","setLikedSongs","setNewReleases","setTopGenres","setTopArtists","setTopTracks","setAvailableMarkets","defaultPlaylist","config","setConfig","useAuthRequest","clientId","scopes","usePKCE","clientSecret","response","type","params","code","undefined","tokenExchangeError","r","Math","floor","random","market","axios","then","res","albumUris","data","albums","items","forEach","push","sort","albumUriString","join","releases","randomInt","tracks","images","release_date","uri","split","catch","err","error","filter","playlist","owner","display_name","a","b","playlistId","trackId","post","markets","map","put","ids","meEndpoint","country","getTopUserItems","allArtists","allTracks","availableGenres","otherGenres","allGenres","genres","topTracksText","topArtistsText","i","recomendationEndpoint","genre","includes","randomIndex","selectedTrack","splice","selectedArtist","seedGenres","seedArtists","seedTracks","configRecommendations","seed_artists","seed_genres","seed_tracks","limit","queueSongAndSkip","both","reason","trackUri","playNextSong","React","useEffect","headers","Authorization","accessToken","getUserData","getAvailibleMarkets","getNewReleases","getUserRecommendedTracks","pause","play","Stack","createStackNavigator","Tab","createBottomTabNavigator","ErrorProvider","SpotifyAuthProvider","NavigationContainer","Error","Navigator","screenOptions","headerStyle","cardStyle","Screen","options","headerShown","animationEnabled","tabBarOptions","showLabel","activeTintColor","PRIMARY_COLOR","inactiveTintColor","labelStyle","borderTopWidth","marginBottom","component","Explore","tabBarIcon","focused","iconName","Liked","Settings","Profile","FontAwesome","Ionicons","setRGB","showPlaylists","swiper","setSwiper","recommendedIndex","setRecommendedIndex","newReleasesIndex","setNewReleasesIndex","useReducer","state","action","currentState","setCurrentState","isMounted","exchangeCodeAsync","current","exchangeError","useRef","Cards","Playlists","lastMessage","followerCount","SafeAreaView","swipeRight","url","dummyDataPlaylists","require","props","recommendedActiveStyle","newActiveStyle","userTopItems","convertRGBgreen","d","convertRGBred","loop","verticalSwipe","renderNoMoreCards","ref","onSwipe","x","_y","onSwiped","onSwipeEnd","onSwipedAll","onSwipedRight","Card","artists","DATA","matches","container","trackColor","false","true","thumbColor","ios_backgroundColor","borderBottomColor","toRef","setTimeout","clearTimeout","BG_IMAGE","numColumns","keyExtractor","toString","renderItem","CardItemSmall","Icon","DEMO","Message","mockTopGenres","mockTopArtists","mockTopTracks","ProfileItem","followers","total","flagEmoji","codePoints","toUpperCase","char","charCodeAt","String","fromCodePoint","getFlagEmoji","iconFocused","MockSettingItems","exampleBool","setExampleBool","header","explanation","defaultValue","SettingItemSwitch","SettingItems","onSelect","find","playlistName","getDefaultPlaylist","textContainer","dropdownNonpress","dropdownStyle","dropdown","dropdownTextHighlightStyle","dropdownTextHighlight","textStyle","showsVerticalScrollIndicator","dropdownTextStyle","dropdownText","_index","DARKER_GRAY"],"mappings":"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","file":"static/js/app.5fbac988.chunk.js","sourcesContent":["import React, { createContext, useContext, useState } from 'react';\n\nconst ErrorContext: React.Context<{\n    errorTexts: string[];\n    addErrorText: (errorText: string) => void;\n    popErrorText: () => string | undefined;\n    setErrorTexts: any;\n    showComponent: boolean | null,\n    setShowComponent: any;\n}> = createContext({\n  errorTexts: [],\n  addErrorText: () => {},\n  popErrorText: () => {},\n  setErrorTexts: () => {},\n  showComponent: null,\n  setShowComponent: () => {},\n\n});\n\ninterface Props {\n    children: React.ReactNode\n  }\n\nexport const ErrorProvider: React.ReactNode = ({ children }: Props) => {\n  const [errorTexts, setErrorTexts] = useState<string[]>([]);\n  const [showComponent, setShowComponent] = useState(false);\n\n  function addErrorText(text: string) {\n    const newArray = errorTexts.concat(text);\n    setErrorTexts(newArray);\n  }\n\n  function popErrorText() {\n    // pop item from array\n    if (errorTexts.length > 0) {\n      const item = errorTexts[0];\n      const newArray = errorTexts.slice(1);\n      setErrorTexts(newArray);\n      return item;\n    }\n    console.log('Fatal: no items');\n  }\n\n  return (\n    <ErrorContext.Provider value={{\n      errorTexts,\n      addErrorText,\n      popErrorText,\n      showComponent,\n      setShowComponent,\n      setErrorTexts,\n    }}\n    >\n      {children}\n    </ErrorContext.Provider>\n  );\n};\n\nexport default function useError() {\n  return useContext(ErrorContext);\n}\n","import { StyleSheet, Dimensions } from \"react-native\";\n\nexport const PRIMARY_COLOR = \"#7444C0\";\nexport const SECONDARY_COLOR = \"#5636B8\";\nexport const WHITE = \"#FFFFFF\";\nexport const GRAY = \"#757E90\";\nexport const DARK_GRAY = \"#363636\"; // rgb(54, 54, 54)\nexport const BLACK = \"#000000\";\nexport const DARKER_GRAY = \"#303030\";\nexport const SPOTIFY_GREEN = \"#1DB954\";\n\nexport const ONLINE_STATUS = \"#46A575\";\nexport const OFFLINE_STATUS = \"#D04949\";\n\nexport const STAR_ACTIONS = \"#FFA200\";\nexport const LIKE_ACTIONS = \"#B644B2\";\nexport const DISLIKE_ACTIONS = \"#363636\";\nexport const FLASH_ACTIONS = \"#5028D7\";\n\n\nexport const DIMENSION_WIDTH = Dimensions.get(\"window\").width;\nexport const DIMENSION_HEIGHT = Dimensions.get(\"window\").height;\n\n\nconst CARD_HEIGHT = DIMENSION_HEIGHT * 0.75;\n\nexport default StyleSheet.create({\n  // COMPONENT - CARD ITEM\n  containerCardItem: {\n    backgroundColor: DARK_GRAY,\n    borderRadius: 8,\n    borderWidth: 1,\n    //borderColor: SPOTIFY_GREEN,\n    alignItems: \"center\",\n    margin: 5,\n    elevation: 1,\n    shadowOpacity: 0.05,\n    shadowRadius: 10,\n    shadowColor: BLACK,\n    shadowOffset: { height: 0, width: 0 },\n    // center children\n    justifyContent: \"center\",\n\n  },\n\n  containerCardItemWeb: {\n    width: DIMENSION_WIDTH - 40,\n    height: CARD_HEIGHT,\n    padding: 0,\n\n  },\n\n  containerCardItemSmall: {\n    backgroundColor: DARK_GRAY,\n    borderRadius: 8,\n    alignItems: \"center\",\n    margin: 10,\n    elevation: 1,\n    shadowOpacity: 0.05,\n    shadowRadius: 10,\n    shadowColor: BLACK,\n    shadowOffset: { height: 0, width: 0 },\n    width: (DIMENSION_WIDTH / 2) - 30,\n    // center children\n    justifyContent: \"center\",\n  },\n\n  containerCardItemRow: {\n    backgroundColor: DARK_GRAY,\n    borderRadius: 2,\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    margin: 10,\n    elevation: 1,\n    shadowOpacity: 0.05,\n    shadowRadius: 10,\n    shadowColor: BLACK,\n    shadowOffset: { height: 0, width: 0 },\n    width: DIMENSION_WIDTH - 30,\n  },\n  playlistText: {\n    fontSize: 30,\n    color: WHITE,\n    marginLeft: \"5%\"\n  },\n\n  matchesCardItem: {\n    marginTop: -35,\n    backgroundColor: PRIMARY_COLOR,\n    paddingVertical: 7,\n    paddingHorizontal: 20,\n    borderRadius: 20,\n  },\n  matchesTextCardItem: {\n    color: WHITE,\n  },\n\n  exploreTopCenter: {\n    textAlign: \"center\",\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n   },\n\n  exploreTopCenterText: {\n    color: GRAY,\n    fontSize: 15,\n    marginHorizontal: 10,\n  },\n\n  exploreTopCenterTextActive: {\n    color: WHITE,\n  },\n\n  volumeSlider: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    alignItems: \"center\",\n  },\n  descriptionCardItem: {\n    color: GRAY,\n    textAlign: \"center\",\n  },\n  artist: {\n    paddingBottom: 10,\n    alignItems: \"center\",\n    textAlign: \"center\",\n  },\n  artistText: {\n    color: GRAY,\n    fontSize: 20,\n    textAlign: \"center\",\n  },\n\n  releaseDate: {\n    color: GRAY,\n    fontSize: 18,\n    textAlign: \"center\",\n  },\n\n\n  reminderText: {\n    color: GRAY,\n    fontSize: 15,\n    textAlign: \"center\",\n  },\n  online: {\n    width: 6,\n    height: 6,\n    backgroundColor: ONLINE_STATUS,\n    borderRadius: 3,\n    marginRight: 4,\n  },\n  offline: {\n    width: 6,\n    height: 6,\n    backgroundColor: OFFLINE_STATUS,\n    borderRadius: 3,\n    marginRight: 4,\n  },\n  actionsCardItem: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    paddingVertical: 30,\n  },\n  button: {\n    width: 60,\n    height: 60,\n    borderRadius: 30,\n    backgroundColor: WHITE,\n    marginHorizontal: 7,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    elevation: 1,\n    shadowOpacity: 0.15,\n    shadowRadius: 20,\n    shadowColor: DARK_GRAY,\n    shadowOffset: { height: 10, width: 0 },\n  },\n  miniButton: {\n    width: 45,\n    height: 45,\n    borderRadius: 30,\n    backgroundColor: WHITE,\n    marginHorizontal: 7,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    elevation: 1,\n    shadowOpacity: 0.15,\n    shadowRadius: 20,\n    shadowColor: DARK_GRAY,\n    shadowOffset: { height: 10, width: 0 },\n  },\n  // SMALL CARD (CARDITEMSMALL)\n  smallImageStyle: {\n      borderRadius: 8,\n      width: DIMENSION_WIDTH / 2 - 40 ,\n      height: 170 ,\n      margin: 0,\n      flexDirection: \"column\",\n  },\n  playlistImage: {\n    borderRadius: 2,\n    height:  120,\n    width: 120,\n    margin: 0,\n  },\n\n  smallNameStyle: {\n      paddingTop: 10,\n      paddingBottom: 5 ,\n      color: WHITE,\n      fontSize: 15,\n      textAlign: \"center\",\n    },\n  // LARGE CARD (CARDITEM)\n  imageStyle: {\n      borderRadius: 8,\n      width:  DIMENSION_WIDTH - 80,\n      height: (DIMENSION_HEIGHT - 80)/2,\n      margin: 20,\n    },\n  \n\n  trackStyle: {\n      paddingTop: 10,\n      paddingBottom: 7,\n      color: WHITE,\n      width: \"100%\",\n      textAlign: \"center\",\n      height: 45,\n      flexWrap: 'wrap',\n      flexShrink: 1,\n      fontSize: 25,\n  },\n\n\n\n  // COMPONENT - SETTINGS\n  settings: {\n    backgroundColor: WHITE,\n    padding: 10,\n    borderRadius: 20,\n    width: 40,\n    elevation: 1,\n    shadowOpacity: 0.05,\n    shadowRadius: 10,\n    shadowColor: BLACK,\n    shadowOffset: { height: 0, width: 0 },\n  },\n  settingsText: {\n    color: DARK_GRAY,\n    fontSize: 13,\n    textAlign: \"center\",\n  },\n\n  // COMPONENT - FILTERS\n  filters: {\n    backgroundColor: WHITE,\n    padding: 10,\n    borderRadius: 20,\n    width: 40,\n    elevation: 1,\n    shadowOpacity: 0.05,\n    shadowRadius: 10,\n    shadowColor: BLACK,\n    shadowOffset: { height: 0, width: 0 },\n    alignItems: \"center\",\n  },\n\n  login: {\n    backgroundColor: WHITE,\n    padding: 10,\n    borderRadius: 20,\n    width: 80,\n    elevation: 1,\n    shadowOpacity: 0.05,\n    shadowRadius: 10,\n    shadowColor: BLACK,\n    shadowOffset: { height: 0, width: 0 },\n  },\n\n  loginText: {\n    color: DARK_GRAY,\n    fontSize: 13,\n    textAlign: \"center\",\n  },\n\n  // COMPONENT - MESSAGE\n  containerMessage: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"flex-start\",\n    flexDirection: \"row\",\n    paddingHorizontal: 10,\n    width: DIMENSION_WIDTH - 100,\n  },\n  avatar: {\n    borderRadius: 30,\n    width: 60,\n    height: 60,\n    marginRight: 20,\n    marginVertical: 15,\n  },\n  message: {\n    color: GRAY,\n    fontSize: 12,\n    paddingTop: 5,\n  },\n\n  // COMPONENT - PROFILE ITEM\n  containerProfileItem: {\n    backgroundColor: \"#232323\",\n    paddingHorizontal: 10,\n    paddingBottom: 25,\n    margin: 20,\n    borderRadius: 8,\n    marginTop: -65,\n    elevation: 1,\n    shadowOpacity: 0.05,\n    shadowRadius: 10,\n    shadowColor: BLACK,\n    shadowOffset: { height: 0, width: 0 },\n  },\n  matchesProfileItem: {\n    width: 135,\n    marginTop: -15,\n    backgroundColor: PRIMARY_COLOR,\n    paddingVertical: 7,\n    paddingHorizontal: 20,\n    borderRadius: 20,\n    alignSelf: \"center\",\n  },\n  matchesTextProfileItem: {\n    color: WHITE,\n    textAlign: \"center\",\n  },\n  name: {\n    paddingTop: 25,\n    paddingBottom: 5,\n    color: WHITE,\n    fontSize: 15,\n    textAlign: \"center\",\n  },\n  messageName: {\n    paddingTop: 25,\n    paddingBottom: 5,\n    color: WHITE,\n    fontSize: 15,\n    textAlign: \"left\",\n  },\n  descriptionProfileItem: {\n    color: GRAY,\n    textAlign: \"center\",\n    paddingBottom: 20,\n    fontSize: 13,\n  },\n  info: {\n    paddingVertical: 8,\n    flexDirection: \"row\",\n    alignItems: \"center\",\n  },\n  iconProfile: {\n    fontSize: 12,\n    color: DARK_GRAY,\n    paddingHorizontal: 10,\n  },\n  infoContent: {\n    color: GRAY,\n    fontSize: 13,\n  },\n\n  playlistsTopRow: {\n    flexDirection: 'row', \n    width: '90%', \n    marginLeft: '5%', \n    marginRight: '5%', \n    // vertically align items center\n    alignItems: 'center',\n  },\n\n  // CONTAINER - GENERAL\n  bg: {\n    flex: 1,\n    resizeMode: \"cover\",\n    width: DIMENSION_WIDTH,\n    height: DIMENSION_HEIGHT,\n    position: \"absolute\",\n  },\n  top: {\n    paddingTop: 50,\n    marginHorizontal: 10,\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n  },\n  title: { \n    paddingBottom: 10, \n    fontSize: 22, \n    color: WHITE,\n    fontWeight: \"bold\",\n    textAlign: \"center\",\n    width: \"100%\",\n  },\n\n  // CONTAINER - HOME\n  containerHome: {\n    marginHorizontal: 10,\n    zIndex: 1,\n    elevation: 1,\n    //display: \"none\",\n  },\n\n  containerPlaylists: { \n    flex: 1, \n    backgroundColor: WHITE, \n    marginTop: 200, \n    borderTopLeftRadius: 20, \n    borderTopRightRadius: 20,\n    borderRadius: 6,\n    zIndex: 3,\n    elevation: 3,\n    },\n\n  // CONTAINER - MATCHES\n  containerLiked: {\n    justifyContent: \"space-between\",\n    flex: 1,\n    paddingHorizontal: 10,\n  },\n\n  // CONTAINER - MESSAGES\n  containerMessages: {\n    justifyContent: \"space-between\",\n    flex: 1,\n    paddingHorizontal: 10,\n  },\n\n  // CONTAINER - PROFILE\n  containerProfile: { marginHorizontal: 0 },\n  photo: {\n    width: DIMENSION_WIDTH,\n    height: 450,\n  },\n  topIconLeft: {\n    paddingLeft: 20,\n  },\n  topIconRight: {\n    paddingRight: 20,\n  },\n  actionsProfile: {\n    justifyContent: \"center\",\n    flexDirection: \"row\",\n    alignItems: \"center\",\n  },\n  textButton: {\n    fontSize: 15,\n    color: WHITE,\n    paddingLeft: 5,\n  },\n  circledButton: {\n    width: 50,\n    height: 50,\n    borderRadius: 25,\n    backgroundColor: PRIMARY_COLOR,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginRight: 10,\n  },\n  roundedButton: {\n    justifyContent: \"center\",\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    marginLeft: 10,\n    height: 50,\n    borderRadius: 25,\n    backgroundColor: SECONDARY_COLOR,\n    paddingHorizontal: 20,\n  },\n\n  // MENU\n  tabButtonText: {\n    textTransform: \"uppercase\",\n  },\n  iconMenu: {\n    alignItems: \"center\",\n  },\n  errorContainer: {\n    flex: 1, flexDirection: 'row', justifyContent: 'center', alignItems: 'center',\n    zIndex: 1,\n    height: 100,\n    position: \"absolute\",\n    backgroundColor: '#770707',\n    borderBottomWidth: 1,\n    borderColor: 'red',\n    width: '100%'\n  },\n  \n  testText: {\n    color: 'red',\n    fontSize: 15,\n    textAlign: 'center',\n    width: '100%'\n  },\n\n\n});\n","import { Platform } from 'react-native';\nimport { REDIRECT_URI, REDIRECT_URI_WEB } from '@env';\n\n// TODO: can maybe be replaced with: getRedirectUrl from expo auth session\nconst redirectUri = Platform.OS === 'web' ? REDIRECT_URI_WEB : REDIRECT_URI;\nconsole.log(REDIRECT_URI, REDIRECT_URI_WEB);\nconst authorizationEndpoint = 'https://accounts.spotify.com/authorize';\nconst tokenEndpoint = 'https://accounts.spotify.com/api/token';\nconst meEndpoint = 'https://api.spotify.com/v1/me';\nconst recomendationEndpoint = 'https://api.spotify.com/v1/recommendations';\n\nconst discovery = {\n  authorizationEndpoint,\n  tokenEndpoint,\n};\n\nexport {\n  redirectUri, discovery, meEndpoint, recomendationEndpoint,\n};\n","import React, { useContext } from 'react';\nimport {\n  Text, View, Image, TouchableOpacity, Platform,\n} from 'react-native';\nimport Slider from '@react-native-community/slider';\n// import Clipboard from '@react-native-clipboard/clipboard';\n\nimport Icon from '../Icon';\nimport { CardItemT, SwipedCardContextT } from '../../types';\n\nimport styles, {\n  DIMENSION_HEIGHT,\n  DIMENSION_WIDTH,\n  DISLIKE_ACTIONS,\n  FLASH_ACTIONS,\n  SPOTIFY_GREEN,\n  WHITE,\n} from '../../assets/styles';\nimport { SwipeCardContext } from './CardProvider';\nimport useSpotifyContext from '../../hooks/useSpotifyAuth';\n\nfunction CardItem({\n  hasActions,\n  image,\n  artist,\n  popularity,\n  track,\n  releaseDate,\n  id: index,\n\n}: CardItemT) {\n  const {\n    volume, updateVolume, rgb, setPressedTrack, setShowPlaylists, showType,\n    pressedTrack,\n\n  } = useContext(SwipeCardContext) as SwipedCardContextT;\n  const {\n    user,\n    isPlaying,\n    setIsPlaying,\n    switchPlayingState,\n    token,\n    setVolume,\n    recommendedTracks: userRecommendedTracks,\n    newReleases,\n  } = useSpotifyContext();\n\n  // temp fix\n  if (track.length > 25) {\n    track = `${track.slice(0, 25)}...`;\n  }\n\n  const isLandscape = () => DIMENSION_WIDTH >= DIMENSION_HEIGHT && Platform.OS === 'web';\n\n  const landScapeWeb = isLandscape() ? styles.containerCardItemWeb : {};\n  const cardOutline = user ? { borderColor: SPOTIFY_GREEN } : {};\n\n  const styleContainer = [styles.containerCardItem, { backgroundColor: rgb }, cardOutline, landScapeWeb];\n  const flexDir = isLandscape() ? 'row' : 'column';\n  return (\n\n    <View style={styleContainer}>\n      {/* IMAGE */}\n      <View style={{ flexDirection: flexDir }}>\n        <Image source={image} style={styles.imageStyle} />\n      </View>\n      <View style={styles.matchesCardItem}>\n        <Text style={styles.matchesTextCardItem}>\n          <Icon name=\"heart\" color={WHITE} size={13} />\n          {' '}\n          {popularity || '0'}\n          % Popularity\n        </Text>\n      </View>\n\n      {/* NAME */}\n\n      <Text style={styles.trackStyle}>{track}</Text>\n\n      <View style={styles.artist}>\n        <Text style={styles.artistText}>{artist}</Text>\n        {releaseDate && (\n          <Text style={styles.releaseDate}>{releaseDate}</Text>\n        )}\n      </View>\n      <View style={{ flexDirection: flexDir }}>\n        {Platform.OS === 'web' && (\n        <View style={styles.volumeSlider}>\n          <Icon name=\"md-volume-low\" color={WHITE} size={20} />\n          <Slider\n            style={{ width: 200, height: 20 }}\n            minimumValue={0}\n            maximumValue={100}\n            step={1}\n            minimumTrackTintColor=\"#FFFFFF\"\n            maximumTrackTintColor=\"#000000\"\n            thumbTintColor=\"#FFFFFF\"\n            value={volume}\n            onValueChange={(value: number) => {\n              updateVolume(value);\n            // Cant set volume here due to exceeding API rate limit\n            }}\n            onSlidingComplete={(value: number) => {\n              if (token) {\n                setVolume(value);\n              }\n            }}\n          />\n          <Icon name=\"md-volume-high\" color={WHITE} size={20} />\n        </View>\n        )}\n\n        {/* ACTIONS */}\n        {hasActions && (\n        <View style={styles.actionsCardItem}>\n\n          <TouchableOpacity style={styles.miniButton}>\n            <Icon\n              name=\"copy-outline\"\n              color={FLASH_ACTIONS}\n              size={20}\n              onPress={() => {\n                // if (token) {\n                //   if (showType === 'recommended') {\n                //     Clipboard.setString(userRecommendedTracks[index].uri);\n                //   } else if (showType === 'new') {\n                //     Clipboard.setString(newReleases[index].uri);\n                //   }\n                // }\n              }}\n\n            />\n          </TouchableOpacity>\n\n          <TouchableOpacity style={styles.button}>\n            {isPlaying\n              ? (\n                <Icon\n                  name=\"pause\"\n                  color={DISLIKE_ACTIONS}\n                  size={30}\n                  onPress={() => {\n                    if (token) { // user is logged in\n                      switchPlayingState();\n                    } else { // user is not logged in switch icon for mock page\n                      setIsPlaying(!isPlaying);\n                    }\n                  }}\n                />\n              )\n              : (\n                <Icon\n                  name=\"play\"\n                  color={DISLIKE_ACTIONS}\n                  size={30}\n                  onPress={() => {\n                    if (token) {\n                      switchPlayingState();\n                    } else { // user is not logged in switch icon for mock page\n                      setIsPlaying(!isPlaying);\n                    }\n                  }}\n                />\n              )}\n\n          </TouchableOpacity>\n          <TouchableOpacity style={styles.miniButton}>\n            <Icon\n              name=\"add\"\n              color={FLASH_ACTIONS}\n              size={20}\n              onPress={() => {\n                if (token) {\n                  if (showType === 'recommended') {\n                    setPressedTrack(userRecommendedTracks[index]);\n                  } else if (showType === 'new') {\n                    setPressedTrack(newReleases[index]);\n                  } else {\n                    console.log('invalid showType');\n                  }\n                }\n\n                setShowPlaylists(true);\n              }}\n            />\n\n          </TouchableOpacity>\n\n        </View>\n        )}\n      </View>\n      <View style={{ flexDirection: flexDir }}>\n        <View>\n          <Text style={[styles.reminderText, { fontSize: 15 }]}>\n            You need to have the spotify app active to use this application.\n            Try playing and pausing your current song, and make sure your queue is empty.\n          </Text>\n        </View>\n      </View>\n    </View>\n  );\n}\n\nexport default CardItem;\n","import React from 'react';\nimport { Text, TouchableOpacity } from 'react-native';\nimport Icon from './Icon';\nimport styles, { DARK_GRAY } from '../assets/styles';\nimport useSpotifyContext from '../hooks/useSpotifyAuth';\n\nfunction Settings() {\n  const { token } = useSpotifyContext();\n\n  return (\n    <TouchableOpacity style={styles.settings}>\n      <Text style={styles.settingsText}>\n        <Icon name=\"settings-sharp\" size={15} color={DARK_GRAY} onPress={() => console.log(token)} />\n      </Text>\n      {/* console.log(response) */}\n    </TouchableOpacity>\n  );\n}\n\nexport default Settings;\n","import React from 'react';\nimport { TouchableOpacity } from 'react-native';\nimport Icon from './Icon';\nimport styles, { DARK_GRAY } from '../assets/styles';\nimport useSpotifyContext from '../hooks/useSpotifyAuth';\n\nfunction Filters() {\n  const { newReleases } = useSpotifyContext();\n  return (\n    <TouchableOpacity style={styles.filters}>\n      <Icon name=\"options\" size={15} color={DARK_GRAY} onPress={() => console.log(newReleases)} />\n    </TouchableOpacity>\n  );\n}\n\nexport default Filters;\n","import React, { useContext } from 'react';\nimport { Text, TouchableOpacity, View } from 'react-native';\nimport Icon from './Icon';\nimport styles, { DARK_GRAY } from '../assets/styles';\nimport useSpotifyContext from '../hooks/useSpotifyAuth';\nimport { SwipeCardContext } from './card-components/CardProvider';\nimport { SwipedCardContextT } from '../types';\n\nfunction Login() {\n  const { promptAsync } = useSpotifyContext();\n  const { setShowType } = useContext(SwipeCardContext) as SwipedCardContextT;\n\n  async function awaitPromptAsync() {\n    setShowType('recommended');\n    await promptAsync();\n  }\n\n  return (\n    <View style={{ flexDirection: 'row' }}>\n      <TouchableOpacity style={styles.login} onPress={awaitPromptAsync}>\n        <Text style={styles.loginText}>\n          <Icon name=\"spotify\" size={13} color={DARK_GRAY} useFontAwesome />\n          {' Login'}\n        </Text>\n      </TouchableOpacity>\n\n      {/* <TouchableOpacity style={styles.login} onPress={awaitPromptAsync}>\n        <Text style={styles.loginText}>\n          <Icon name=\"soundcloud\" size={13} color={DARK_GRAY} useFontAwesome />\n          {' Login'}\n        </Text>\n      </TouchableOpacity> */}\n    </View>\n  );\n}\n\nexport default Login;\n","import React from 'react';\nimport { Text, View, Image } from 'react-native';\nimport { CardItemRowT } from '../../types';\n\nimport styles from '../../assets/styles';\n\nfunction CardItemRow({\n  image,\n  name,\n}: CardItemRowT) {\n  return (\n    <View style={styles.containerCardItemRow}>\n      {/* IMAGE */}\n      <Image source={image} style={styles.playlistImage} />\n      {/* NAME */}\n      <Text style={styles.playlistText}>{name}</Text>\n    </View>\n  );\n}\n\nexport default CardItemRow;\n","module.exports = __webpack_public_path__ + \"static/media/logic.e98d400e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/odz.a48909a6.jpg\";","module.exports = __webpack_public_path__ + \"static/media/metallica.3bad5394.jpg\";","module.exports = __webpack_public_path__ + \"static/media/dio.6a2fb57d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/post.61b3850d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/skepta.f0f62bb2.jpg\";","import { DataSong } from \"../../types\";\nimport IMAGE_LOGIC from \"../images/logic.jpg\";\nimport IMAGE_XXX from \"../images/xxx.jpg\";\nimport IMAGE_SKEPTA from \"../images/skepta.jpg\";\nimport IMAGE_ODZ from \"../images/odz.jpg\";\nimport IMAGE_DIO from \"../images/dio.jpg\";\nimport IMAGE_POST from \"../images/post.jpg\";\nimport IMAGE_METALLICA from \"../images/metallica.jpg\";\n//import IMAGE_TYLER from  \".../images/tyler.jpg\";\nimport IMAGE_TRAVIS from \"../images/travis.jpg\";\nimport IMAGE_BANGER from \"../images/banger.jpg\";\n\n\nconst data: DataSong[] = [\n  {\n    id: 1,\n    track: \"The Return\",\n    match: \"78\",\n    artist: \"Logic\",\n    album: \"The Return\",\n    image: IMAGE_LOGIC,\n\n  },\n  {\n    id: 2,\n    track: \"SAD!\",\n    match: \"93\",\n    artist: \"XXXTentacion\",\n    album: \"?\",\n    image: IMAGE_XXX,\n  },\n  {\n    id: 3,\n    track: \"Bullet From A Gun\",\n    match: \"45\",\n    artist: \"skepta\",\n    album: \"Ignorance is bliss\",\n    image: IMAGE_SKEPTA,\n  },\n  {\n    id: 4,\n    track: \"Summer of Our Lives\",\n    match: \"88\",\n    artist: \"waykap, Emmi\",\n    album: \"Summer of Our Lives\",\n    image: IMAGE_BANGER,\n  },\n  {\n    id: 5,\n    track: \"Ostron\",\n    match: \"76\",\n    artist: \"Frej Larsson, ODZ, Canto\",\n    album: \"Bland streckgubbar och linjemän\",\n    image: IMAGE_ODZ,\n  },\n  {\n    id: 6,\n    track: \"SICKO MODE\",\n    match: \"95\",\n    artist: \"Travis Scott\",\n    album: \"ASTROWORLD\",\n    image: IMAGE_TRAVIS,\n  },\n  {\n    id: 7,\n    track: \"ONE\",\n    match: \"67\",\n    artist: \"Metallica\",\n    album: \"...And Justice for None\",\n    image: IMAGE_METALLICA,\n  },\n  {\n    id: 8,\n    track: \"Holy Diver\",\n    match: \"85\",\n    artist: \"Dio\",\n    location: \"Irvine, CA\",\n    album: \"Holy Diver\",\n    image: IMAGE_DIO,\n  },\n  {\n    id: 9,\n    track: \"EARFQUACK\",\n    match: \"74\",\n    artist: \"Tyler, The Creator\",\n    album: \"IGOR\",\n    image: IMAGE_DIO,\n  },\n  {\n    id: 10,\n    track: \"Congratulations\",\n    match: \"98\",\n    artist: \"Post Malone\",\n    album: \"Stoney\",\n    image: IMAGE_POST,\n  },\n];\n\nexport default data;\n","import { DataProfile } from \"../../types\";\nimport IMAGE_01 from \"../images/img01.jpeg\";\nimport IMAGE_02 from \"../images/img01.jpeg\";\nimport IMAGE_03 from \"../images/img01.jpeg\";\nimport IMAGE_04 from \"../images/img01.jpeg\";\nimport IMAGE_05 from \"../images/img01.jpeg\";\nimport IMAGE_06 from \"../images/img01.jpeg\";\nimport IMAGE_07 from \"../images/img01.jpeg\";\nimport IMAGE_08 from \"../images/img01.jpeg\";\nimport IMAGE_09 from \"../images/img01.jpeg\";\nimport IMAGE_10 from \"../images/img01.jpeg\";\n\nconst data: DataProfile[] = [\n  {\n    id: 1,\n    name: \"Fredrik Juvet\",\n    isOnline: true,\n    match: \"78\",\n    description: \"Indek Grindset\",\n    message: \"Forza Ferrari, Grande Machina, The Witcher 3, Bella Ciao\",\n    age: \"19\",\n    image: IMAGE_01,\n  },\n  {\n    id: 2,\n    name: \"Tom Rehnström\",\n    match: \"93\",\n    description: \"I am a Huge F1 fan\",\n    isOnline: true,\n    message: \"Wassup, I'm Fredrik, I'm a software developer, and I'm looking for a job.\",\n    image: IMAGE_02,\n  },\n  {\n    id: 3,\n    name: \"Isac Hassle\",\n    match: \"45\",\n    description: \"Part time Singer/Dancer.\",\n    isOnline: false,\n    message: \"Oh, hee-hee, aha. Ha, ooh, hee, ha-ha, ha-ha. And I thought my jokes were bad.\",\n    image: IMAGE_03,\n  },\n  {\n    id: 4,\n    name: \"Alexander Holmberg\",\n    match: \"88\",\n    description: \"Crypto Guru and HV71 fan\",\n    isOnline: true,\n    message: \"Crypto is up Today! Did you see Alice in Wonderland?, At least I think I did.\",\n    image: IMAGE_04,\n  },\n  {\n    id: 5,\n    name: \"Marcus Bardvall\",\n    match: \"76\",\n    description: \"It's not who I am underneath but what I do that defines me.\",\n    isOnline: false,\n    message: \"Buy my stupid NFTs\",\n    image: IMAGE_05,\n  },\n  {\n    id: 6,\n    name: \"Max Claesson\",\n    match: \"95\",\n    description: \"Guitar player, Hair like a Golden Retriever\",\n    isOnline: true,\n    message: \"I just ate two entire pizzas. I'm not sure if I'm hungry or if I'm just really, really hungry.\",\n    image: IMAGE_06,\n  },\n  {\n    id: 7,\n    name: \"Lisa Kvist\",\n    match: \"67\",\n    description:\n      \"Fulvinia, a.k.a. The Queen of the Night, a Swedish-American singer, songwriter, and actress.\",\n    isOnline: true,\n    message:\n      \"Coffee, tea, and cake. I'm not sure what else to put here.\",\n    image: IMAGE_07,\n  },\n  {\n    id: 8,\n    name: \"Olle Jernström\",\n    match: \"85\",\n    description: \"Music lover. Globe Trotter. Occasional Photographer.\",\n    age: \"19\",\n    location: \"Stockholm, Sweden\",\n    infoPersonal: 'Loves programming',\n    infoMusic: \"Loves Rock, Pop and Hiphop/Rap\",\n    lastSeen: \"Last seen: 23h ago\",\n    isOnline: true,\n    topTracks: \"Track 1, Track 2, Track 3, Track 4, Track 5\",\n    topArtists: \"Artist 1, Artist 2, Artist 3, Artist 4, Artist 5\",\n    topGenres: \"Genre 1, Genre 2, Genre 3, Genre 4, Genre 5\",\n    message:\n      \"And as for the television's so-called plan, Batman has no jurisdiction.\",\n    image: IMAGE_08,\n  },\n  {\n    id: 9,\n    name: \"Marina Bremmander\",\n    match: \"74\",\n    description:\n      \"Swedish Rapper with the artist name MarreB\",\n    isOnline: true,\n    message: \"Rap music is love\",\n    image: IMAGE_09,\n  },\n  {\n    id: 10,\n    name: \"Pepsi Man\",\n    match: \"98\",\n    description:\n      \"Pepsi da number one\",\n    isOnline: false,\n    message:\n      \"You want order in Gotham. Batman must stop drinking coke.\",\n    image: IMAGE_10,\n  },\n];\n\nexport default data;\n","import React, { createContext, useContext, useState } from 'react';\nimport { useAuthRequest } from 'expo-auth-session';\nimport * as WebBrowser from 'expo-web-browser';\nimport { CLIENT_ID, CLIENT_SECRET } from '@env';\nimport axios from 'axios';\nimport { countries } from 'country-data';\nimport useAutoExchange from './useAutoExchange';\nimport {\n  discovery, redirectUri, meEndpoint, recomendationEndpoint,\n} from './utils/auth-utils';\nimport useError from './useError';\n\nWebBrowser.maybeCompleteAuthSession();\n\nfunction getLocation(countryCode: string) {\n  const country = countries[countryCode].name;\n  return country;\n}\n\nfunction getCounryCode(contryName: string) {\n  const countryCode = countries[contryName].alpha2;\n  return countryCode;\n}\n\n// TODO: Remove any\nconst SpotifyAuthContext: React.Context<{\n  promptAsync: any\n  token: any,\n  user: any,\n  recommendedTracks: any,\n  getUserRecommendedTracks: any,\n  likeSong: any,\n  info: any,\n  queueAndSkip: any,\n  isPlaying: any,\n  setIsPlaying: any,\n  switchPlayingState: any,\n  setVolume: any,\n  likedSongs: any,\n  getLikedSongs: any,\n  getPlaylists: any,\n  playlists: any,\n  addTrackToPlaylist: any,\n  newReleases: any,\n  topGenres: string,\n  topArtists: string,\n  topTracks: string,\n  setDefaultPlaylist: any,\n  availableMarkets: any,\n  setChosenMarket: any,\n  chosenMarket: any,\n\n}> = createContext({\n  promptAsync: null,\n  token: null,\n  user: null,\n  recommendedTracks: null,\n  getRecommendedTracks: null,\n  likeSong: null,\n  info: null,\n  queueAndSkip: null,\n  isPlaying: null,\n  setIsPlaying: null,\n  switchPlayingState: null,\n  setVolume: null,\n  likedSongs: null,\n  getLikedSongs: null,\n  getPlaylists: null,\n  playlists: null,\n  addTrackToPlaylist: null,\n  newReleases: null,\n  topGenres: '',\n  topArtists: '',\n  topTracks: '',\n  setDefaultPlaylist: null,\n  availableMarkets: null,\n  setChosenMarket: null,\n  chosenMarket: null,\n});\n\nWebBrowser.maybeCompleteAuthSession();\n\ninterface Props {\n  children: React.ReactNode\n}\n\nexport const SpotifyAuthProvider: React.ReactNode = ({ children }: Props) => {\n  const [user, setUser] = useState(null);\n  const [recommendedTracks, setRecommendedTracks] = useState(null);\n  const [userPlaylists, setUserPlaylists] = useState(null);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [likedSongs, setLikedSongs] = useState(null);\n  const [newReleases, setNewReleases] = useState<any[] | null>(null);\n  const [topGenres, setTopGenres] = useState<string>('Genre 1, Genre 2, Genre 3');\n  const [topArtists, setTopArtists] = useState<string>('Artist 1, Artist 2, Artist 3');\n  const [topTracks, setTopTracks] = useState<string>('Track 1, Track 2, Track 3');\n  const [availableMarkets, setAvailableMarkets] = useState(null);\n  const [chosenMarket, setChosenMarket] = useState<string | null>(null);\n  const likeSongString = 'Liked songs';\n  const [defaultPlaylist, setDefaultPlaylist] = useState<string>(likeSongString); // Either equal to liked songs or a playlist uri\n  const [config, setConfig] = useState<any>(null);\n\n  // Error handling\n  const { addErrorText } = useError();\n\n  const [request, response, promptAsync] = useAuthRequest({\n    clientId: CLIENT_ID,\n    scopes: ['user-read-email', 'user-read-private', 'user-top-read', 'user-library-read',\n      'user-library-modify', 'playlist-read-private', 'playlist-read-collaborative',\n      'user-read-playback-state', 'user-modify-playback-state',\n      'app-remote-control', 'playlist-modify-private', 'playlist-modify-public',\n    ],\n    /*\n      In order to follow the 'Authorization Code Flow',\n      to fetch token after authorizationEndpoint,\n      this must be set to false\n    */\n    usePKCE: false,\n    redirectUri,\n    clientSecret: CLIENT_SECRET,\n  }, discovery);\n\n  const songCount = 20; // has to be 20 due to /albums/{ids} can only have 20 ids\n\n  // Token will be auto exchanged after auth completes.\n  const { token, tokenExchangeError: exchangeError } = useAutoExchange(\n    response?.type === 'success' ? response.params.code : undefined,\n  );\n\n  async function getNewReleases() {\n    const r = Math.floor(Math.random() * 100);\n    const market = chosenMarket || 'US';\n    await axios.get(`https://api.spotify.com/v1/browse/new-releases?limit=${songCount}&country=${chosenMarket}&offset${r}`, config)\n      .then((res) => {\n        const albumUris: string[] = [];\n        res.data.albums.items.forEach((item: any) => {\n          albumUris.push(item.id);\n        });\n        albumUris.sort(() => 0.5 - Math.random());\n        const reducedAlbumUris = albumUris.slice(0, 20);\n\n        const albumUriString = reducedAlbumUris.join();\n        const releases: any[] = [];\n        axios.get(`https://api.spotify.com/v1/albums?ids=${albumUriString}`, config)\n          .then((res) => {\n            console.log('New releases in', getLocation(market), res.data);\n            res.data.albums.forEach((album: any) => {\n              const randomInt = Math.floor(Math.random() * album.tracks.items.length);\n              const item = album.tracks.items[randomInt];\n              item.images = album.images;\n              item.releaseDate = album.release_date;\n              item.id = album.tracks.items[randomInt].uri.split(':')[2]; // WATNING SHAKY\n              releases.push(item);\n            });\n            releases.sort(() => Math.random() - 0.5);\n\n            setNewReleases(releases);\n          })\n          .catch((err) => {\n            console.log(err);\n            addErrorText(err.response.data.error.message);\n          });\n\n        // shuffle the releases array\n      })\n      .catch((err) => {\n        console.log(err);\n        addErrorText(err.response.data.error.message);\n      });\n  }\n\n  async function getPlaylists() {\n    await axios.get(`https://api.spotify.com/v1/me/playlists?limit=${50}`, config)\n      .then((res) => {\n        // Todo improve this to filter on user id aswell\n        const playlists = res.data.items.filter((playlist: any) => playlist.owner.display_name !== 'Spotify');\n\n        playlists.sort((a: any, b: any) => {\n          if (a.name < b.name) {\n            return -1;\n          }\n          if (a.name > b.name) {\n            return 1;\n          }\n          return 0;\n        });\n        // console.log('Playlists: ', playlists);\n        setUserPlaylists(playlists);\n      })\n      .catch((err) => {\n        console.log('Error Playlist: ', err);\n        addErrorText(err.response.data.error.message);\n      });\n  }\n\n  async function addTrackToPlaylist(playlistId: string, trackId: string) {\n    // console.log('OOO', accessToken, playlistId, trackId);\n    // If this is set to .put instead of .post it will erase the whole playlist\n    // Soooo... dont do that\n    await axios.post(`https://api.spotify.com/v1/playlists/${playlistId}/tracks?uris=${trackId}`, {}, config)\n      .then((res) => {\n        console.log('Added track to playlist: ', res.data);\n      })\n      .catch((err) => {\n        console.log('Error adding track to playlist: ', err);\n        addErrorText(err.response.data.error.message);\n      });\n  }\n\n  async function getAvailibleMarkets() {\n    await axios.get('https://api.spotify.com/v1/markets', config)\n      .then((res) => {\n        const countryCodes = res.data.markets;\n        // map each country code to its country name\n        let countries = countryCodes.map((countryCode: string) => ({\n          code: countryCode,\n          name: getLocation(countryCode),\n        }));\n        console.log(countries);\n        // sort countries alphabetically\n        countries = countries.sort((a: {code: string, name: string}, b: {code: string, name: string}) => {\n          if (a.name < b.name) {\n            return -1;\n          }\n          return 1;\n        });\n        console.log(countries);\n        setAvailableMarkets(countries);\n      })\n      .catch((err) => {\n        console.log('Error getting availible markets: ', err);\n        addErrorText(err.response.data.error.message);\n      });\n  }\n\n  async function playerInfo() {\n    // config\n    if (token) {\n      await axios.get('https://api.spotify.com/v1/me/player/devices', config)\n        .then((res) => {\n          // console.log('Device:', res);\n        }).catch((err) => {\n          console.log('Device Error:', err);\n          addErrorText(err.response.data.error.message);\n        });\n    }\n  }\n\n  async function likeSong(trackId: string) {\n    // config\n    console.log(defaultPlaylist, likeSongString, defaultPlaylist === likeSongString);\n    if (defaultPlaylist === likeSongString) {\n      await axios.put(\n        'https://api.spotify.com/v1/me/tracks',\n        // send trackid as \"ids\" parameter\n        { ids: [trackId] },\n        config,\n      ).then((res) => {\n        // console.log('Saved track to user library');\n        getLikedSongs();\n      }).catch((err) => {\n        console.log(err);\n        addErrorText(err.response.data.error.message);\n      });\n    } else {\n      console.log(defaultPlaylist, trackId);\n      const trackUri = `spotify:track:${trackId}`;\n      addTrackToPlaylist(defaultPlaylist, trackUri);\n    }\n  }\n\n  async function getUserData() {\n    return axios.get(meEndpoint, config)\n      .then((res) => {\n        console.log('User data: ', res.data);\n        setUser(res.data);\n        setChosenMarket(res.data.country);\n      })\n      .catch((err) => {\n        addErrorText(err.response.data.error.message);\n        console.log('E1: ', err);\n      });\n  }\n\n  async function getTopUserItems() {\n    const allArtists: any = [];\n    const allTracks: any = [];\n    const availableGenres: any = [];\n    const otherGenres: any = [];\n    const allGenres: any = [];\n    const genres: any = [];\n    const artist: any = [];\n    const tracks: any = [];\n\n    const topTracksText: any = [];\n    const topArtistsText: any = [];\n\n    const count = 5;\n\n    await axios.get(`${meEndpoint}/top/tracks`, config)\n      .then((res) => {\n        // setUserTopItems(res.data);\n        for (let i = 0; i < res.data.items.length; i += 1) {\n          allTracks.push(res.data.items[i].id);\n          topTracksText.push(res.data.items[i].name);\n        }\n      })\n      .catch((err) => {\n        console.log('E2: ', err); addErrorText(err.response.data.error.message);\n      });\n\n    await axios.get(`${recomendationEndpoint}/available-genre-seeds`, config)\n      .then((res: any) => {\n        // loop over the genres and add them to the available genres\n        res.data.genres.forEach((genre: any) => {\n          availableGenres.push(genre);\n        });\n      })\n      .catch((err) => {\n        console.log('E3: ', err); addErrorText(err.response.data.error.message);\n      });\n\n    await axios.get(`${meEndpoint}/top/artists`, config)\n      .then((res) => {\n        for (let i = 0; i < res.data.items.length; i += 1) {\n          allArtists.push(res.data.items[i].id);\n          topArtistsText.push(res.data.items[i].name);\n        }\n        res.data.items.forEach((item: any) => {\n        // loop over the genres and push them to genres\n          for (let i = 0; i < item.genres.length; i += 1) {\n            const genre = item.genres[i];\n            if (availableGenres.includes(genre) && !allGenres.includes(genre)) {\n              allGenres.push(genre);\n            } else {\n              otherGenres.push(genre);\n            }\n          }\n        });\n      })\n      .catch((err) => {\n        console.log('E: ', err); addErrorText(err.response.data.error.message);\n      });\n\n    // Get 1 random items in allGenres and place them in genres\n    for (let i = 0; i < 1; i += 1) {\n      const randomIndex = Math.floor(Math.random() * allGenres.length);\n      genres.push(allGenres[randomIndex]);\n    }\n\n    // Get two random items from allTracks and place them in tracks\n    for (let i = 0; i < 2; i += 1) {\n      if (allTracks.length !== 0) {\n        const random = Math.floor(Math.random() * allTracks.length);\n        const selectedTrack = allTracks[random];\n        tracks.push(selectedTrack);\n        allTracks.splice(random, 1); // remove selectedTrack from allTracks\n      }\n    }\n\n    // Get two random items from allArtists and place them in artists\n    for (let i = 0; i < 2; i += 1) {\n      if (allArtists.length !== 0) {\n        const random = Math.floor(Math.random() * allArtists.length);\n        const selectedArtist = allArtists[random];\n        artist.push(selectedArtist);\n        allArtists.splice(random, 1); // remove selectedArtist from allArtists\n      }\n    }\n\n    // WARNING: the length of seed genres + seed artists + seed tracks <= 5 (MAX 5)\n    const seedGenres = genres[0];\n    const seedArtists = allArtists[1] ? `${allArtists[0]},${allArtists[1]}` : '';\n    const seedTracks = allTracks[1] ? `${allTracks[0]},${allTracks[1]}` : '';\n\n    // Copy the config add modyfy it.\n    // setting config2 = config and updating config2 also updates config\n    const configRecommendations = { ...config };\n    configRecommendations.params = {\n      seed_artists: seedArtists,\n      seed_genres: seedGenres,\n      seed_tracks: seedTracks,\n      limit: songCount,\n    };\n\n    await axios.get(recomendationEndpoint, configRecommendations)\n      .then((res) => {\n        // console.log('Recomendations: ', res.data);\n        const { tracks } = res.data;\n        setRecommendedTracks(tracks);\n        const firstTrackUri = tracks[0].uri;\n        queueSongAndSkip(firstTrackUri);\n      })\n      .catch((res) => console.log('Erec: ', res));\n\n    const n = 10;\n    topArtistsText.sort(() => 0.5 - Math.random());\n    topTracksText.sort(() => 0.5 - Math.random());\n    const both = allGenres.concat(otherGenres);\n    both.sort(() => 0.5 - Math.random());\n    setTopArtists(topArtistsText.slice(0, n).sort().join(', '));\n    setTopTracks(topTracksText.slice(0, n).sort().join(', '));\n    setTopGenres(both.slice(0, n).sort().join(', '));\n    setVolume(50);\n  }\n\n  async function getLikedSongs() {\n    await axios.get(`${meEndpoint}/tracks`, config)\n      .then((res) => {\n        const tracks = res.data.items;\n        setLikedSongs(tracks);\n      })\n      .catch((err) => {\n        console.log('Error getting liked songs: ', err);\n        addErrorText(err.response.data.error.message);\n      });\n  }\n\n  async function pause() {\n    await axios.put('https://api.spotify.com/v1/me/player/pause', null, config)\n      .then((res) => {\n        // console.log('Paused');\n        setIsPlaying(false);\n      })\n      .catch((err) => {\n        addErrorText(err.response.data.error.message);\n        console.log('Error Pausing: ', err);\n      });\n  }\n\n  async function setVolume(volume: number) {\n    await axios.put(`https://api.spotify.com/v1/me/player/volume?volume_percent=${volume}`, null, config)\n      .then((res) => {\n        console.log('Volume Set to: ', volume);\n      })\n      .catch((err) => {\n        console.log('Error Setting Volume: ', err);\n        const { message } = err.response.data.error;\n        const { reason } = err.response.data.error;\n        addErrorText(`${message}. ${reason}`);\n        console.log('P', err.response);\n      });\n  }\n\n  async function play() {\n    await axios.put('https://api.spotify.com/v1/me/player/play', null, config)\n      .then((res) => {\n        // console.log('Playing');\n        setIsPlaying(true);\n      })\n      .catch((err) => {\n        console.log('Error Playing: ', err); addErrorText(err.response.data.error.message);\n      });\n  }\n\n  async function queueSongAndSkip(trackUri: string) {\n    // TODO: Figure out how to send the query nicely with axios\n    axios.post(\n      `https://api.spotify.com/v1/me/player/queue?uri=${trackUri}`,\n      {},\n      config,\n    ).then(() => {\n      playNextSong();\n    }).catch((err) => {\n      console.log('Error Queue: ', err);\n      addErrorText(err.response.data.error.message);\n    });\n  }\n\n  async function playNextSong() {\n    axios.post(\n      'https://api.spotify.com/v1/me/player/next',\n      {},\n      config,\n    ).catch((err) => { console.log('Error Next: ', err); addErrorText(err.response.data.error.message); });\n    setIsPlaying(true);\n  }\n\n  function switchPlayingState() {\n    if (isPlaying) {\n      pause();\n    } else {\n      play();\n    }\n  }\n\n  React.useEffect(() => {\n    if (token) {\n      const config = {\n        headers: {\n          Authorization: `Bearer ${token.accessToken}`,\n        },\n      };\n      setConfig(config);\n    }\n  }, [token]);\n\n  React.useEffect(() => {\n    if (config && token) {\n      getUserData();\n      getTopUserItems();\n      getLikedSongs();\n      getPlaylists();\n      getAvailibleMarkets();\n    }\n  }, [config, token]);\n\n  React.useEffect(() => {\n    if (chosenMarket) {\n      getNewReleases();\n    }\n  }, [chosenMarket]);\n  return (\n    <SpotifyAuthContext.Provider\n      value={{\n        promptAsync,\n        token,\n        user,\n        recommendedTracks,\n        getUserRecommendedTracks: getTopUserItems,\n        likeSong,\n        info: playerInfo,\n        queueAndSkip: queueSongAndSkip,\n        isPlaying,\n        setIsPlaying,\n        switchPlayingState,\n        setVolume,\n        likedSongs,\n        getLikedSongs,\n        getPlaylists: () => {},\n        playlists: userPlaylists,\n        addTrackToPlaylist,\n        newReleases,\n        topTracks,\n        topArtists,\n        topGenres,\n        setDefaultPlaylist,\n        availableMarkets,\n        setChosenMarket,\n        chosenMarket,\n      }}\n    >\n      {children}\n    </SpotifyAuthContext.Provider>\n  );\n};\n\nexport default function useSpotifyContext() {\n  return useContext(SpotifyAuthContext);\n}\n","import React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { SpotifyAuthProvider } from './hooks/useSpotifyAuth';\nimport { ErrorProvider } from './hooks/useError';\nimport {\n  Explore, Liked, Profile,\n} from './screens';\nimport {\n  PRIMARY_COLOR, DARK_GRAY, BLACK,\n} from './assets/styles';\nimport TabBarIcon from './components/TabBarIcon';\nimport Settings from './screens/Settings';\nimport { Error } from './components';\n\nconst Stack = createStackNavigator();\nconst Tab = createBottomTabNavigator();\n\nfunction App() {\n  return (\n    <ErrorProvider>\n      <SpotifyAuthProvider>\n        <NavigationContainer>\n\n          <Error />\n          <Stack.Navigator\n            screenOptions={{\n              headerStyle: { elevation: 0 },\n              cardStyle: { backgroundColor: BLACK },\n            }}\n          >\n\n            <Stack.Screen\n              name=\"Tab\"\n              options={{ headerShown: false, animationEnabled: false }}\n            >\n              {() => (\n                <Tab.Navigator\n                  tabBarOptions={{\n                    showLabel: false,\n                    activeTintColor: PRIMARY_COLOR,\n                    inactiveTintColor: DARK_GRAY,\n                    labelStyle: {\n                      fontSize: 14,\n                      textTransform: 'uppercase',\n                      paddingTop: 10,\n                    },\n                    style: {\n                      backgroundColor: BLACK,\n                      borderTopWidth: 0,\n                      marginBottom: 0,\n                      shadowOpacity: 0.05,\n                      shadowRadius: 10,\n                      shadowColor: BLACK,\n                      shadowOffset: { height: 0, width: 0 },\n                    },\n                  }}\n                >\n\n                  <Tab.Screen\n                    name=\"Explore\"\n                    component={Explore}\n                    options={{\n                      tabBarIcon: ({ focused }) => (\n                        <TabBarIcon\n                          focused={focused}\n                          iconName=\"musical-notes\"\n                          text=\"Explore\"\n                        />\n                      ),\n                    }}\n                  />\n\n                  <Tab.Screen\n                    name=\"Liked\"\n                    component={Liked}\n                    options={{\n                      tabBarIcon: ({ focused }) => (\n                        <TabBarIcon\n                          focused={focused}\n                          iconName=\"heart\"\n                          text=\"Liked\"\n                        />\n                      ),\n                    }}\n                  />\n\n                  {/* <Tab.Screen\n                  name=\"Chat\"\n                  component={Messages}\n                  options={{\n                    tabBarIcon: ({ focused }) => (\n                      <TabBarIcon\n                        focused={focused}\n                        iconName=\"chatbubble\"\n                        text=\"Chat\"\n                      />\n                    ),\n                  }}\n                /> */}\n\n                  <Tab.Screen\n                    name=\"Settings\"\n                    component={Settings}\n                    options={{\n                      tabBarIcon: ({ focused }) => (\n                        <TabBarIcon\n                          focused={focused}\n                          iconName=\"settings-sharp\"\n                          text=\"Settings\"\n                        />\n                      ),\n                    }}\n                  />\n\n                  <Tab.Screen\n                    name=\"Profile\"\n                    component={Profile}\n                    options={{\n                      tabBarIcon: ({ focused }) => (\n                        <TabBarIcon\n                          focused={focused}\n                          iconName=\"person\"\n                          text=\"Profile\"\n                        />\n                      ),\n                    }}\n                  />\n                </Tab.Navigator>\n              )}\n            </Stack.Screen>\n          </Stack.Navigator>\n        </NavigationContainer>\n      </SpotifyAuthProvider>\n    </ErrorProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport { Ionicons, FontAwesome } from '@expo/vector-icons';\nimport { IconT } from '../types';\n\nfunction Icon({\n  color, name, size, style, onPress, useFontAwesome,\n}: IconT) {\n  if (!useFontAwesome) {\n    return <Ionicons name={name} size={size} color={color} style={style} onPress={onPress} />;\n  }\n  return <FontAwesome name={name} size={size} color={color} style={style} onPress={onPress} />;\n}\n\nexport default Icon;\n","export { default as CardItem } from './card-components/CardItem';\nexport { default as Settings } from './Settings';\nexport { default as Filters } from './Filters';\nexport { default as Icon } from './Icon';\nexport { default as Message } from './Message';\nexport { default as ProfileItem } from './ProfileItem';\nexport { default as Login } from './Login';\nexport { default as CardItemRow } from './card-components/CardItemRow';\nexport { default as Playlists } from './Playlists';\nexport { default as Cards } from './card-components/Cards';\nexport { default as CardItemSmall } from './card-components/CardItemSmall';\nexport { default as SettingItemSwitch } from './SettingItemSwitch';\nexport { default as Error } from './Error';\n","import { createContext, FC, useState } from 'react';\nimport CardStack from 'react-native-card-stack-swiper';\nimport useSpotifyContext from '../../hooks/useSpotifyAuth';\nimport { SwipedCardContextT } from '../../types';\n\nexport const SwipeCardContext = createContext<SwipedCardContextT | null>(null);\n\nconst SwipeCardProvider: FC<React.ReactNode> = ({ children }) => {\n  const { recommendedTracks: userRecommendedTracks } = useSpotifyContext();\n  const [volume, setVolume] = useState<number>(50);\n  // const [swipedDistance, setSwipedDistance] = useState<number>(0);\n  const [rgb, setRGB] = useState<string>('rgb(54, 54, 54)');\n  const [pressedTrack, setPressedTrack] = useState<any>(userRecommendedTracks ? userRecommendedTracks[0] : null);\n  const [showPlaylists, setShowPlaylists] = useState<boolean>(false);\n  const [swiper, setSwiper] = useState<CardStack | null>(null);\n  const [showType, setShowType] = useState<string>('mock');\n  const [recommendedIndex, setRecommendedIndex] = useState(0);\n  const [newReleasesIndex, setNewReleasesIndex] = useState(0);\n\n  const updateVolume = (value: number) => {\n    setVolume(value);\n  };\n\n  return (\n    <SwipeCardContext.Provider value={{\n      volume,\n      updateVolume,\n      rgb,\n      setRGB,\n      pressedTrack,\n      setPressedTrack,\n      showPlaylists,\n      setShowPlaylists,\n      swiper,\n      setSwiper,\n      showType,\n      setShowType,\n      recommendedIndex,\n      setRecommendedIndex,\n      newReleasesIndex,\n      setNewReleasesIndex,\n    }}\n    >\n      {children}\n    </SwipeCardContext.Provider>\n  );\n};\n\nexport default SwipeCardProvider;\n","import { exchangeCodeAsync, TokenResponse } from 'expo-auth-session';\nimport React from 'react';\nimport { CLIENT_ID, CLIENT_SECRET } from '@env';\nimport useMounted from './useMounted';\nimport { discovery, redirectUri } from './utils/auth-utils';\n\ntype State = {\n  token: TokenResponse | null;\n  tokenExchangeError: Error | null;\n};\n\n// A hook to automatically exchange the auth token for an access token.\n// this should be performed in a server and not in the application.\nfunction useAutoExchange(code?: string): State {\n  const [currentState, setCurrentState] = React.useReducer(\n    (state: State, action: Partial<State>) => ({ ...state, ...action }),\n    { token: null, tokenExchangeError: null },\n  );\n  const isMounted = useMounted();\n\n  React.useEffect(() => {\n    if (!code) {\n      setCurrentState({ token: null, tokenExchangeError: null });\n      return;\n    }\n    exchangeCodeAsync(\n      {\n        clientId: CLIENT_ID,\n        clientSecret: CLIENT_SECRET,\n        code,\n        redirectUri,\n      },\n      discovery,\n    )\n      .then((token) => {\n        if (isMounted.current) {\n          setCurrentState({ token, tokenExchangeError: null });\n        }\n      })\n      .catch((exchangeError) => {\n        if (isMounted.current) {\n          setCurrentState({ tokenExchangeError: exchangeError, token: null });\n        }\n      });\n  }, [code]);\n\n  return currentState;\n}\n\nexport default useAutoExchange;\n","import React from 'react';\n\nfunction useMounted() {\n  const isMounted = React.useRef(true);\n  React.useEffect(() => () => {\n    isMounted.current = false;\n  }, []);\n  return isMounted;\n}\n\nexport default useMounted;\n","export { default as Explore } from './Explore';\nexport { default as Liked } from './Liked';\nexport { default as Messages } from './Messages';\nexport { default as Profile } from './Profile';\nexport { default as LoginPage } from './LoginPage';\n","import React from 'react';\nimport {\n  View, ImageBackground,\n} from 'react-native';\nimport { Playlists, Cards } from '../components';\nimport styles from '../assets/styles';\nimport SwipeCardProvider from '../components/card-components/CardProvider';\nimport useSpotifyContext from '../hooks/useSpotifyAuth';\n\nfunction Explore() {\n  const backgroundLink = 'https://ollisco.se/assets/bg2.jpg'; // To avoid bg dissapearing after API call\n  const { user, playlists, addTrackToPlaylist } = useSpotifyContext();\n\n  return (\n    <View>\n      <ImageBackground\n        source={{ uri: backgroundLink }} // To avoid bg dissapearing after API call\n        style={styles.bg}\n        resizeMode=\"cover\"\n      >\n        <SwipeCardProvider>\n          <Cards />\n          <Playlists />\n        </SwipeCardProvider>\n      </ImageBackground>\n    </View>\n  );\n}\n\nexport default Explore;\n","import React from 'react';\nimport { Text, View, Image } from 'react-native';\nimport { MessageT } from '../types';\nimport styles from '../assets/styles';\n\nfunction Message({ image, lastMessage, name }: MessageT) {\n  return (\n    <View style={styles.containerMessage}>\n      <Image source={image} style={styles.avatar} />\n      <View>\n        <Text style={styles.messageName}>{name}</Text>\n        <Text style={styles.message}>{lastMessage}</Text>\n      </View>\n    </View>\n  );\n}\n\nexport default Message;\n","import React from 'react';\nimport { Text, View } from 'react-native';\nimport Icon from './Icon';\nimport { ProfileItemT } from '../types';\nimport styles, { WHITE } from '../assets/styles';\n\nfunction ProfileItem({\n  followerCount,\n  location,\n  name,\n  topTracks,\n  topArtists,\n  topGenres,\n}: ProfileItemT) {\n  return (\n    <View style={styles.containerProfileItem}>\n\n      <Text style={styles.name}>{name}</Text>\n\n      <Text style={styles.descriptionProfileItem}>\n        {followerCount}\n        {' followers '}\n        -\n        {' '}\n        {location}\n      </Text>\n\n      <View style={styles.info}>\n        <Text style={styles.iconProfile}>\n          <Icon name=\"person\" size={12} color={WHITE} />\n        </Text>\n        <Text style={styles.infoContent}>{topArtists}</Text>\n      </View>\n\n      <View style={styles.info}>\n        <Text style={styles.iconProfile}>\n          <Icon name=\"musical-notes\" size={12} color={WHITE} />\n        </Text>\n        <Text style={styles.infoContent}>{topTracks}</Text>\n      </View>\n\n      <View style={styles.info}>\n        <Text style={styles.iconProfile}>\n          <Icon name=\"albums-outline\" size={12} color={WHITE} />\n        </Text>\n        <Text style={styles.infoContent}>{topGenres}</Text>\n      </View>\n\n      <View style={styles.info}>\n        <Text style={styles.iconProfile}>\n          <Icon name=\"location\" size={12} color={WHITE} />\n        </Text>\n        <Text style={styles.infoContent}>{location}</Text>\n      </View>\n\n    </View>\n  );\n}\n\nexport default ProfileItem;\n","import { useContext } from 'react';\nimport React, {\n  TouchableOpacity, View, ScrollView, Text,\n} from 'react-native';\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport styles, { DARK_GRAY, WHITE } from '../assets/styles';\nimport useSpotifyContext from '../hooks/useSpotifyAuth';\nimport CardItemRow from './card-components/CardItemRow';\nimport { SwipeCardContext } from './card-components/CardProvider';\n// import swipcardcontext from types\nimport { SwipedCardContextT } from '../types';\nimport Icon from './Icon';\nimport { dummyDataPlaylists } from '../assets/data/dummy_data_playlists';\n\nfunction Playlists() {\n  const { playlists, addTrackToPlaylist, token } = useSpotifyContext();\n\n  const {\n    pressedTrack,\n    showPlaylists,\n    setShowPlaylists,\n    swiper,\n  } = useContext(SwipeCardContext) as SwipedCardContextT;\n\n  if (showPlaylists) {\n    return (\n      <View style={styles.containerPlaylists}>\n        <View style={styles.playlistsTopRow}>\n          <Text style={{ color: '#000000', fontSize: 15 }}>\n            Only select a playlist where you can add songs\n          </Text>\n          <Icon\n            name=\"close\"\n            size={30}\n            color=\"#000000\"\n            style={{ marginLeft: 'auto', color: DARK_GRAY }}\n            onPress={() => setShowPlaylists(false)}\n          />\n        </View>\n        <SafeAreaView style={{ flex: 1 }}>\n          <ScrollView>\n            {playlists ? (\n              playlists.map((item: any) => (\n                <TouchableOpacity\n                  key={item.id}\n                  onPress={() => {\n                    addTrackToPlaylist(item.id, pressedTrack.uri);\n                    setShowPlaylists(false);\n                    swiper?.swipeRight();\n                  }}\n                >\n                  <CardItemRow\n                    image={item.images.length > 0 ? { uri: item.images[0].url } : dummyDataPlaylists[0].image}\n                    name={item.name}\n                  />\n                </TouchableOpacity>\n              ))\n\n            ) : (\n\n              dummyDataPlaylists.map((item: any) => (\n                <TouchableOpacity\n                  key={item.id}\n                  onPress={() => {\n                    setShowPlaylists(false);\n                    swiper?.swipeRight();\n                  }}\n                >\n                  <CardItemRow\n                    image={item.image}\n                    name={item.name}\n                  />\n                </TouchableOpacity>\n              ))\n            )}\n            {/* Ugly padding hack */}\n            <TouchableOpacity>\n              <Text style={{ color: WHITE }}>Hello World!</Text>\n              <Text style={{ color: WHITE }}>Hello World!</Text>\n              <Text style={{ color: WHITE }}>Hello World!</Text>\n              <Text style={{ color: WHITE }}>Hello World!</Text>\n            </TouchableOpacity>\n          </ScrollView>\n        </SafeAreaView>\n      </View>\n    );\n  }\n  return (<></>);\n}\nexport default Playlists;\n","\n\n\n\n\nexport const dummyDataPlaylists = [\n    {\n        id: '1',\n        name: 'Playlist 1',\n        image: require('../../assets/images/logic.jpg'),\n    },\n    {\n        id: '2',\n        name: 'Playlist 2',\n        image: require('../../assets/images/odz.jpg'),\n    },\n    {\n        id: '3',\n        name: 'Playlist 3',\n        image: require('../../assets/images/metallica.jpg'),\n    },\n    // make 5 more object like that\n    {\n        id: '4',\n        name: 'Playlist 4',\n        image: require('../../assets/images/dio.jpg'),\n    },\n    {\n        id: '5',\n        name: 'Playlist 5',\n        image: require('../../assets/images/post.jpg'),\n    },\n    {\n        id: '6',\n        name: 'Playlist 6',\n        image: require('../../assets/images/skepta.jpg'),\n    }\n];","import { View, Text, TouchableOpacity } from 'react-native';\nimport React, { useContext } from 'react';\nimport styles from '../../assets/styles';\nimport Settings from '../Settings';\nimport Filters from '../Filters';\nimport Login from '../Login';\nimport useSpotifyContext from '../../hooks/useSpotifyAuth';\nimport CardStackHandler from './CardStackHandler';\nimport { SwipeCardContext } from './CardProvider';\nimport { SwipedCardContextT } from '../../types';\n\ntype Props = {}\n\nfunction Cards(props: Props) {\n  const {\n    user, queueAndSkip, token, recommendedTracks: userRecommendedTracks, newReleases,\n\n  } = useSpotifyContext();\n  const {\n    showType, setShowType, recommendedIndex, newReleasesIndex,\n    setRecommendedIndex, setNewReleasesIndex,\n  } = useContext(SwipeCardContext) as SwipedCardContextT;\n\n  const recommendedActiveStyle = showType === 'recommended' ? styles.exploreTopCenterTextActive : {};\n  const newActiveStyle = showType === 'new' ? styles.exploreTopCenterTextActive : {};\n\n  React.useEffect(() => {\n    if (newReleases && userRecommendedTracks) {\n      console.log('Studying behavior');\n      if (showType === 'new') {\n        queueAndSkip(newReleases[newReleasesIndex].uri);\n      }\n    }\n  }, [newReleases, userRecommendedTracks]);\n\n  return (\n    <View style={styles.containerHome}>\n      <View style={styles.top}>\n        {/* Testing spotify login in settings component */}\n        <Settings />\n        {user ? (\n          <View style={styles.exploreTopCenter}>\n            <TouchableOpacity onPress={() => {\n              if (showType !== 'recommended' && userRecommendedTracks) {\n                setShowType('recommended');\n                queueAndSkip(userRecommendedTracks[recommendedIndex].uri);\n              }\n            }}\n            >\n              <Text style={[styles.exploreTopCenterText, recommendedActiveStyle]}>\n                Recommended\n              </Text>\n            </TouchableOpacity>\n            <Text style={styles.exploreTopCenterText}>\n              |\n            </Text>\n            <TouchableOpacity onPress={() => {\n              if (showType !== 'new' && newReleases) {\n                setShowType('new');\n                queueAndSkip(newReleases[newReleasesIndex].uri);\n              }\n            }}\n            >\n              <Text style={[styles.exploreTopCenterText, newActiveStyle]}>\n                New Releases\n              </Text>\n            </TouchableOpacity>\n          </View>\n        ) : (\n          <Login />\n        )}\n        <Filters />\n      </View>\n      <CardStackHandler />\n    </View>\n  );\n}\n\nexport default Cards;\n","import React, { useContext } from 'react';\nimport { View } from 'react-native';\nimport CardStack, { Card } from 'react-native-card-stack-swiper';\nimport DATA from '../../assets/data/dummy_data_songs';\nimport { DARK_GRAY } from '../../assets/styles';\nimport useSpotifyContext from '../../hooks/useSpotifyAuth';\nimport { SwipedCardContextT } from '../../types';\nimport CardItem from './CardItem';\nimport { SwipeCardContext } from './CardProvider';\n\nfunction CardStackHandler(style: any) {\n  const {\n    recommendedTracks: userTopItems,\n    getUserRecommendedTracks: getTopUserItems,\n    token,\n    likeSong,\n    queueAndSkip,\n    newReleases,\n  } = useSpotifyContext();\n  const {\n    setRGB,\n    setSwiper,\n    showType,\n    recommendedIndex,\n    setRecommendedIndex,\n    newReleasesIndex,\n    setNewReleasesIndex,\n  } = useContext(SwipeCardContext) as SwipedCardContextT;\n\n  const cardIndex = showType === 'recommended' ? recommendedIndex : newReleasesIndex;\n\n  const swipeColorLimit = 50;\n  function convertRGBgreen(d: number) {\n    const m = d > 110 ? 100 : d;\n    return `rgb(${54 - ((54 * d) / 300) + 20}, ${m}, ${54 - ((54 * d) / 300) + 20})`;\n  }\n  function convertRGBred(d: number) {\n    const m = d < 110 ? 110 : -d;\n    return `rgb(${m}, ${54 - ((54 * -d) / 300) + 20}, ${54 - ((54 * -d) / 300) + 20})`;\n  }\n  return (\n    <View style={{ borderColor: '#000000', borderWidth: 3 }}>\n\n      {userTopItems && showType === 'recommended'\n        ? (\n          <CardStack\n            loop\n            verticalSwipe={false}\n            renderNoMoreCards={() => null}\n            ref={(swiper) => setSwiper(swiper)}\n            onSwipe={(x, _y) => {\n              if (x > swipeColorLimit) {\n                setRGB(convertRGBgreen(x));\n              } else if (x < -swipeColorLimit) {\n                setRGB(convertRGBred(x));\n              } else {\n                setRGB(DARK_GRAY);\n              }\n            }}\n            onSwiped={(index: number) => {\n              setRGB(DARK_GRAY);\n              if (token) {\n                queueAndSkip(userTopItems[recommendedIndex + 1].uri);\n                setRecommendedIndex(recommendedIndex + 1);\n                setNewReleasesIndex(newReleasesIndex + 1);\n              }\n            }}\n            onSwipeEnd={() => {\n              setRGB(DARK_GRAY);\n            }}\n\n            onSwipedAll={() => {\n              if (token) {\n                getTopUserItems();\n              }\n            }}\n            onSwipedRight={(index: number) => {\n              if (token) {\n                likeSong(userTopItems[index].id);\n              }\n            }}\n          >\n            {userTopItems?.map((item: any, index: number) => (\n              <Card key={item.id}>\n                <CardItem\n                  hasActions\n                  image={{ uri: item.album.images[0].url }}\n                  popularity={item.popularity}\n                  artist={item.artists.map((artist: any) => artist.name).join(', ')}\n                  track={item.name}\n                  id={index}\n                />\n              </Card>\n            ))}\n          </CardStack>\n        )\n        : newReleases && showType === 'new'\n          ? (\n            <CardStack\n              loop\n              verticalSwipe={false}\n              renderNoMoreCards={() => null}\n              ref={(swiper) => setSwiper(swiper)}\n              onSwipe={(x, _y) => {\n                if (x > swipeColorLimit) {\n                  setRGB(convertRGBgreen(x));\n                } else if (x < -swipeColorLimit) {\n                  setRGB(convertRGBred(x));\n                } else {\n                  setRGB(DARK_GRAY);\n                }\n              }}\n              onSwiped={(index: number) => {\n                setRGB(DARK_GRAY);\n                if (token) {\n                  queueAndSkip(newReleases[newReleasesIndex + 1].uri);\n                  setNewReleasesIndex(newReleasesIndex + 1);\n                  setRecommendedIndex(recommendedIndex + 1);\n                }\n              }}\n              onSwipeEnd={() => {\n                setRGB(DARK_GRAY);\n              }}\n\n              onSwipedAll={() => {\n                if (token) {\n                  getTopUserItems();\n                }\n              }}\n              onSwipedRight={(index: number) => {\n                if (token) {\n                  likeSong(userTopItems[index].id);\n                }\n              }}\n            >\n              {\n            newReleases?.map((item: any, index: number) => (\n              <Card key={item.id}>\n                <CardItem\n                  hasActions\n                  image={{ uri: item.images[0].url }}\n                  popularity={item.popularity}\n                  artist={item.artists.map((artist: any) => artist.name).join(', ')}\n                  track={item.name}\n                  id={index}\n                  releaseDate={item.releaseDate}\n                />\n              </Card>\n            ))\n          }\n            </CardStack>\n          )\n          : null}\n\n      {!newReleases && !userTopItems ? (\n        <CardStack\n          loop\n          verticalSwipe={false}\n          ref={(swiper) => setSwiper(swiper)}\n          onSwipe={(x, _y) => {\n            if (x > swipeColorLimit) {\n              setRGB(convertRGBgreen(x));\n            } else if (x < -swipeColorLimit) {\n              setRGB(convertRGBred(x));\n            } else {\n              setRGB(DARK_GRAY);\n            }\n          }}\n          onSwipeEnd={() => {\n            setRGB(DARK_GRAY);\n          }}\n          onSwiped={() => {\n            setRGB(DARK_GRAY);\n          }}\n        >\n          {DATA.map((item, index) => (\n            <Card key={item.id}>\n              <CardItem\n                hasActions\n                image={item.image}\n                track={item.track}\n                description={item.artist}\n                matches={item.match}\n                artist={item.artist}\n                id={index}\n              />\n            </Card>\n          ))}\n        </CardStack>\n      ) : null}\n\n    </View>\n  );\n}\n\nexport default CardStackHandler;\nfunction queueAndSkip(accessToken: any, arg1: number) {\n  throw new Error('Function not implemented.');\n}\n","module.exports = __webpack_public_path__ + \"static/media/xxx.a0b6a7dc.jpg\";","module.exports = __webpack_public_path__ + \"static/media/travis.a6dcc371.jpg\";","module.exports = __webpack_public_path__ + \"static/media/banger.bb266617.jpg\";","import React from 'react';\nimport { Text, View, Image } from 'react-native';\nimport { CardItemT } from '../../types';\n\nimport styles from '../../assets/styles';\n\nfunction CardItemSmall({\n  image,\n  artist,\n  track,\n}: CardItemT) {\n  const maxLength = 20;\n  if (track.length > maxLength) {\n    track = `${track.slice(0, maxLength)}...`;\n  }\n  return (\n    <View style={styles.containerCardItemSmall}>\n      {/* IMAGE */}\n      <Image source={image} style={styles.smallImageStyle} />\n      {/* NAME */}\n      <Text style={styles.smallNameStyle}>{track}</Text>\n\n      <View style={styles.artist}>\n        <Text style={[styles.artistText, { fontSize: 10 }]}>{artist}</Text>\n      </View>\n    </View>\n  );\n}\n\nexport default CardItemSmall;\n","import {\n  StyleSheet, Switch, Text, View,\n} from 'react-native';\nimport React from 'react';\nimport { SettingItemSwitchT } from '../types';\nimport { SPOTIFY_GREEN, WHITE, GRAY } from '../assets/styles/index';\n\nfunction SettingItemSwitch({\n  text,\n  onValueChange,\n  value,\n}: SettingItemSwitchT) {\n  return (\n    <View style={styles.container}>\n      <Text style={styles.text}>{text}</Text>\n      <Switch\n        trackColor={{ false: '#767577', true: SPOTIFY_GREEN }}\n        thumbColor={value ? SPOTIFY_GREEN : '#FFFFFF'}\n        ios_backgroundColor=\"#3e3e3e\"\n        onValueChange={onValueChange}\n        value={value}\n      />\n    </View>\n  );\n}\n\nexport default SettingItemSwitch;\n\nconst styles = StyleSheet.create({\n  container: {\n    alignItems: 'center',\n    padding: 20,\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    // add border to each flex item\n    borderBottomColor: GRAY,\n    borderBottomWidth: 1,\n    marginTop: -1,\n\n  },\n  text: {\n    fontSize: 18,\n    color: WHITE,\n    borderRadius: 3,\n    borderColor: GRAY,\n  },\n});\n","import { Text, TouchableOpacity } from 'react-native';\nimport React, { useEffect, useState } from 'react';\nimport styles from '../assets/styles';\nimport useError from '../hooks/useError';\n\nfunction Error() {\n  const {\n    errorTexts, showComponent, setShowComponent, setErrorTexts, popErrorText,\n  } = useError();\n  const [currentError, setCurrentError] = useState<string[] | null>(null);\n\n  // const [showComponent, setShowComponent] = useState(false);\n\n  useEffect(() => {\n    if (errorTexts.length > 0) {\n      const toRef = setTimeout(() => {\n        setShowComponent(true);\n        clearTimeout(toRef);\n        // it is good practice to clear the timeout (but I am not sure why)\n      }, 250);\n    }\n  }, [errorTexts]);\n\n  useEffect(() => {\n    if (showComponent) {\n      const toRef = setTimeout(() => {\n        setShowComponent(false);\n        clearTimeout(toRef);\n        setErrorTexts([]);\n      }, 4000);\n    }\n  }, [showComponent]);\n\n  const componentTwo = () => (\n    <TouchableOpacity\n      style={styles.errorContainer}\n      onPress={() => { console.log(showComponent); setShowComponent(!showComponent); }}\n    >\n\n      <Text style={styles.testText}>{errorTexts}</Text>\n\n    </TouchableOpacity>\n  );\n\n  return (\n\n    showComponent ? componentTwo() : null\n  );\n}\n\nexport default Error;\n","import React from 'react';\nimport {\n  View,\n  Text,\n  TouchableOpacity,\n  ImageBackground,\n  FlatList,\n} from 'react-native';\nimport { CardItemSmall } from '../components';\nimport DATA from '../assets/data/dummy_data_songs';\nimport styles from '../assets/styles';\nimport BG_IMAGE from '../assets/images/bg2.jpg';\nimport useSpotifyContext from '../hooks/useSpotifyAuth';\n\nfunction Liked() {\n  const { likedSongs, getLikedSongs, token } = useSpotifyContext();\n\n  React.useEffect(() => {\n    if (!likedSongs && token !== null) {\n      getLikedSongs();\n    }\n  }, [likedSongs, getLikedSongs, token]);\n\n  return (\n    <View>\n      <ImageBackground\n        source={BG_IMAGE}\n        style={styles.bg}\n      >\n        <View style={styles.containerLiked}>\n          <View style={styles.top}>\n            <Text style={styles.title}>Liked Songs</Text>\n          </View>\n          {/* <SafeAreaView>\n            <ScrollView> */}\n          {likedSongs ? (\n            <FlatList\n              numColumns={2}\n              data={likedSongs}\n              keyExtractor={(item, index) => index.toString()}\n              renderItem={({ item }) => (\n                <TouchableOpacity>\n                  <CardItemSmall\n                    image={{ uri: item.track.album.images[0].url }}\n                    track={item.track.name}\n                    artist={item.track.artists[0].name}\n                  />\n                </TouchableOpacity>\n              )}\n            />\n          ) : (\n            <FlatList\n              numColumns={2}\n              data={DATA}\n              keyExtractor={(item, index) => index.toString()}\n              renderItem={({ index, item }) => (\n                <TouchableOpacity>\n                  <CardItemSmall\n                    id={index}\n                    image={item.image}\n                    track={item.track}\n                    artist={item.artist}\n                  />\n                </TouchableOpacity>\n              )}\n            />\n          )}\n          {/* Ugly padding hack */}\n          <TouchableOpacity>\n            <Text>Padding</Text>\n            <Text>Padding</Text>\n            <Text>Padding</Text>\n          </TouchableOpacity>\n        </View>\n      </ImageBackground>\n    </View>\n  );\n}\n\nexport default Liked;\n","import React from 'react';\nimport {\n  Text,\n  TouchableOpacity,\n  ImageBackground,\n  View,\n  FlatList,\n} from 'react-native';\nimport { Icon, Message } from '../components';\nimport DEMO from '../assets/data/dummy_data_profiles';\nimport styles, { GRAY } from '../assets/styles';\nimport BG_IMAGE from '../assets/images/bg2.jpg';\n\nfunction Messages() {\n  return (\n    <View>\n      <ImageBackground\n        source={BG_IMAGE}\n        style={styles.bg}\n      >\n        <View style={styles.containerMessages}>\n          <View style={styles.top}>\n            <Text style={styles.title}>Messages</Text>\n            <TouchableOpacity>\n              <Icon name=\"person-add\" color={GRAY} size={20} style={styles.topIconRight} />\n            </TouchableOpacity>\n          </View>\n          <FlatList\n            data={DEMO}\n            keyExtractor={(item, index) => index.toString()}\n            renderItem={({ item }) => (\n              <TouchableOpacity>\n                <Message\n                  image={item.image}\n                  name={item.name}\n                  lastMessage={item.message}\n                />\n              </TouchableOpacity>\n            )}\n          />\n        </View>\n      </ImageBackground>\n    </View>\n  );\n}\n\nexport default Messages;\n","module.exports = __webpack_public_path__ + \"static/media/img01.a678bf12.jpeg\";","import React from 'react';\nimport {\n  ScrollView,\n  View,\n  ImageBackground,\n  TouchableOpacity,\n} from 'react-native';\nimport { countries } from 'country-data';\nimport { Icon, ProfileItem } from '../components';\nimport DEMO from '../assets/data/dummy_data_profiles';\nimport styles, { WHITE } from '../assets/styles';\nimport BG_IMAGE from '../assets/images/bg2.jpg';\nimport useSpotifyContext from '../hooks/useSpotifyAuth';\n\nfunction Profile() {\n  const {\n    user, topTracks, topArtists, topGenres,\n  } = useSpotifyContext();\n  const {\n    image,\n    topGenres: mockTopGenres,\n    topArtists: mockTopArtists,\n    topTracks: mockTopTracks,\n    name,\n    location,\n  } = DEMO[7];\n\n  function getFlagEmoji(countryCode: string) {\n    const codePoints = countryCode\n      .toUpperCase()\n      .split('')\n      .map((char) => 127397 + char.charCodeAt(0));\n    return String.fromCodePoint(...codePoints);\n  }\n\n  function getLocation(countryCode: string) {\n    // get flag emoji\n    const flagEmoji = getFlagEmoji(countryCode);\n    // get country name\n    const country = countries[countryCode].name;\n    return `${country} ${flagEmoji}`;\n  }\n\n  return (\n\n    <View>\n      <View>\n        <ImageBackground\n          source={BG_IMAGE}\n          style={styles.bg}\n        />\n        <ScrollView style={styles.containerProfile}>\n          {user && user.images.length > 0 ? (\n            <ImageBackground source={{ uri: user.images[0].url }} style={styles.photo} />\n\n          ) : (\n            <ImageBackground source={image} style={styles.photo} />\n          )}\n\n          <View style={styles.top}>\n            <TouchableOpacity>\n              <Icon\n                name=\"swap-horizontal-outline\"\n                size={20}\n                color={WHITE}\n                style={styles.topIconLeft}\n              />\n            </TouchableOpacity>\n\n            <TouchableOpacity>\n              <Icon\n                name=\"ellipsis-vertical\"\n                size={20}\n                color={WHITE}\n                style={styles.topIconRight}\n              />\n            </TouchableOpacity>\n          </View>\n\n          {user ? (\n            <ProfileItem\n              followerCount={user.followers.total}\n              name={user.display_name}\n              location={getLocation(user.country)}\n              topTracks={topTracks}\n              topArtists={topArtists}\n              topGenres={topGenres}\n            />\n          ) : (\n            <ProfileItem\n              followerCount=\"20\"\n              name={name}\n              location={location}\n              topTracks={mockTopTracks}\n              topArtists={mockTopArtists}\n              topGenres={mockTopGenres}\n            />\n          )}\n        </ScrollView>\n      </View>\n    </View>\n  );\n}\n\nexport default Profile;\n","// create a react functional component\n\nimport React from 'react';\nimport {\n  View,\n  Text,\n} from 'react-native';\nimport useSpotifyContext from '../hooks/useSpotifyAuth';\n\nfunction LoginPage() {\n  const { likedSongs, getLikedSongs, token } = useSpotifyContext();\n\n  return (\n    <View>\n      <Text>\n        Login\n      </Text>\n      ;\n    </View>\n  );\n}\n\nexport default LoginPage;\n","import React from 'react';\nimport { Text, View } from 'react-native';\nimport Icon from './Icon';\nimport styles, { GRAY, WHITE } from '../assets/styles';\nimport { TabBarIconT } from '../types';\n\nfunction TabBarIcon({ focused, iconName, text }: TabBarIconT) {\n  const iconFocused = focused ? WHITE : GRAY;\n\n  return (\n    <View style={styles.iconMenu}>\n      <Icon name={iconName} size={16} color={iconFocused} />\n      <Text style={[styles.tabButtonText, { color: iconFocused }]}>{text}</Text>\n    </View>\n  );\n}\n\nexport default TabBarIcon;\n","import {\n  View, ImageBackground, Text,\n} from 'react-native';\nimport React, { useState } from 'react';\nimport styles from '../assets/styles';\nimport BG_IMAGE from '../assets/images/bg2.jpg';\nimport { SettingItemSwitch } from '../components';\nimport SettingItemDropdown from '../components/SettingItemDropdown';\nimport useSpotifyContext from '../hooks/useSpotifyAuth';\n\nfunction MockSettingItems() {\n  const [exampleBool, setExampleBool] = useState(false);\n  return (\n    <View>\n      <SettingItemDropdown\n        header=\"Country\"\n        explanation=\"Music will be adapted to the given country. New releases will be based on the country you choose.\"\n        defaultValue={'SE' || ''}\n        options={['SE', 'US', 'GB', 'CA']}\n      />\n\n      <SettingItemDropdown\n        header=\"Default Playlist\"\n        explanation=\"The default playlist where right swiped cards apear. Please only choose playlists that you own or can add music to.\"\n        options={['Playlist 1', 'Playlist 2', 'Playlist 3']}\n      />\n\n      <SettingItemSwitch\n        text=\"An example Switch\"\n        value={exampleBool}\n        onValueChange={() => setExampleBool(!exampleBool)}\n\n      />\n\n    </View>\n  );\n}\n\nfunction SettingItems() {\n  const {\n    playlists, setDefaultPlaylist, availableMarkets, chosenMarket, setChosenMarket,\n  } = useSpotifyContext();\n\n  const likedSongs = 'Liked songs';\n  function getDefaultPlaylist(playlistName: string) {\n    if (playlistName === likedSongs) {\n      setDefaultPlaylist(likedSongs);\n      return;\n    }\n    const playlist = playlists.find((playlist: { name: string; }) => playlist.name === playlistName);\n    setDefaultPlaylist(playlist.id);\n  }\n\n  return (\n    <View>\n      <SettingItemDropdown\n        header=\"Country\"\n        explanation=\"Music will be adapted to the given country. New releases will be based on the country you choose.\"\n        defaultValue={chosenMarket || ''}\n        options={availableMarkets.map((country: {code: string; name: string}) => country.name)}\n        onSelect={(value: string) => {\n          // this is uneffective should probably make getLocation ad getCountrycode public\n          setChosenMarket(availableMarkets.find((country: {name: string}) => country.name === value).code);\n        }}\n      />\n\n      <SettingItemDropdown\n        header=\"Default Playlist\"\n        explanation=\"The default playlist where right swiped cards apear. Please only choose playlists that you own or can add music to.\"\n        options={[likedSongs, ...playlists.map((playlist: { name: string; }) => playlist.name)]}\n        defaultValue={likedSongs}\n        onSelect={(value: string) => getDefaultPlaylist(value)}\n      />\n    </View>\n  );\n}\n\nfunction Settings() {\n  const { playlists, availableMarkets } = useSpotifyContext();\n  return (\n    <View>\n\n      <ImageBackground\n        source={BG_IMAGE}\n        style={styles.bg}\n      >\n        <View style={styles.top}>\n          <Text style={styles.title}>Settings</Text>\n        </View>\n        {playlists && playlists.length > 0 && availableMarkets && availableMarkets.length > 0\n          ? <SettingItems />\n          : <MockSettingItems />}\n      </ImageBackground>\n    </View>\n  );\n}\n\nexport default Settings;\n","import {\n  StyleSheet, Text, View,\n} from 'react-native';\nimport React from 'react';\nimport ModalDropdown from 'react-native-modal-dropdown';\nimport { SettingItemDropdownT } from '../types';\nimport {\n  WHITE, GRAY, BLACK, DARKER_GRAY,\n} from '../assets/styles/index';\n\nfunction SettingItemDropdown({\n  header,\n  explanation,\n  options,\n  defaultValue,\n  onSelect,\n}: SettingItemDropdownT) {\n  return (\n    <View style={styles.container}>\n      <View style={styles.textContainer}>\n        <Text style={styles.header}>{header}</Text>\n        <Text style={styles.explanation}>{explanation}</Text>\n      </View>\n      <ModalDropdown\n        style={styles.dropdownNonpress}\n        options={options}\n        defaultValue={defaultValue || 'Select an item...'}\n        dropdownStyle={styles.dropdown}\n        dropdownTextHighlightStyle={styles.dropdownTextHighlight}\n        textStyle={styles.header}\n        showsVerticalScrollIndicator={false}\n        dropdownTextStyle={styles.dropdownText}\n        onSelect={(_index: any, value: any) => {\n          if (onSelect && value) {\n            onSelect(value);\n          }\n        }}\n      />\n    </View>\n  );\n}\n\nexport default SettingItemDropdown;\n\nconst styles = StyleSheet.create({\n  container: {\n    alignItems: 'center',\n    padding: 20,\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    borderBottomColor: GRAY,\n    borderBottomWidth: 1,\n    marginTop: -1,\n\n  },\n  header: {\n    fontSize: 18,\n    color: WHITE,\n  },\n  dropdown: {\n    width: 150,\n    height: 100,\n    borderColor: BLACK,\n    borderWidth: 1,\n    borderRadius: 3,\n  },\n  dropdownNonpress: {\n    borderBottomWidth: 1,\n    borderBottomColor: GRAY,\n    padding: 5,\n    width: '40%',\n  },\n  dropdownText: {\n    fontSize: 18,\n    color: GRAY,\n    backgroundColor: DARKER_GRAY,\n    borderColor: BLACK,\n  },\n  dropdownTextHighlight: {\n    color: WHITE,\n  },\n  explanation: {\n    fontSize: 14,\n    color: GRAY,\n  },\n  textContainer: {\n    flexDirection: 'column',\n    justifyContent: 'space-between',\n    width: '60%',\n  },\n});\n","module.exports = __webpack_public_path__ + \"static/media/bg2.a5ed1007.jpg\";"],"sourceRoot":""}