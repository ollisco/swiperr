{"version":3,"sources":["hooks/useError.tsx","components/utils/country-utils.ts","assets/styles/index.ts","hooks/utils/auth-utils.ts","components/card-components/CardItem.tsx","components/Settings.tsx","components/Filters.tsx","components/Login.tsx","components/card-components/CardItemRow.tsx","assets/images/logic.jpg","assets/images/odz.jpg","assets/images/metallica.jpg","assets/images/dio.jpg","assets/images/post.jpg","assets/images/skepta.jpg","assets/data/dummy_data_songs.ts","assets/data/dummy_data_profiles.ts","hooks/useSpotifyAuth.tsx","App.tsx","components/Icon.tsx","components/index.ts","components/card-components/CardProvider.tsx","hooks/useAutoExchange.tsx","hooks/useMounted.tsx","screens/index.ts","screens/Explore.tsx","components/Message.tsx","components/ProfileItem.tsx","components/Playlists.tsx","assets/data/dummy_data_playlists.ts","components/card-components/Cards.tsx","components/card-components/CardStackHandler.tsx","assets/images/xxx.jpg","assets/images/travis.jpg","assets/images/banger.jpg","components/card-components/CardItemSmall.tsx","components/SettingItemSwitch.tsx","components/Error.tsx","screens/Liked.tsx","screens/Messages.tsx","assets/images/img01.jpeg","screens/Profile.tsx","screens/LoginPage.tsx","components/TabBarIcon.tsx","screens/Settings.tsx","components/SettingItemDropdown.tsx","assets/images/bg2.jpg"],"names":["useContext","ErrorContext","createContext","errorTexts","addErrorText","popErrorText","setErrorTexts","showComponent","setShowComponent","children","useState","Provider","value","text","newArray","concat","length","item","slice","console","log","locationWithFlag","getCounryCode","split","countryCode","countries","name","flagEmoji","getFlagEmoji","contryName","alpha2","codePoints","toUpperCase","map","char","charCodeAt","String","fromCodePoint","WHITE","GRAY","BLACK","DIMENSION_WIDTH","Dimensions","get","width","DIMENSION_HEIGHT","height","CARD_HEIGHT","StyleSheet","create","containerCardItem","backgroundColor","borderRadius","borderWidth","alignItems","margin","elevation","shadowOpacity","shadowRadius","shadowColor","shadowOffset","justifyContent","marginTop","marginLeft","imageStyle","containerCardItemWeb","padding","containerCardItemSmall","containerCardItemRow","flexDirection","playlistText","fontSize","color","matchesCardItem","paddingVertical","paddingHorizontal","matchesTextCardItem","exploreTopCenter","textAlign","exploreTopCenterText","marginHorizontal","exploreTopCenterTextActive","volumeSlider","display","descriptionCardItem","artist","artistText","releaseDate","reminderText","online","marginRight","offline","actionsCardItem","button","miniButton","smallImageStyle","playlistImage","smallNameStyle","trackStyle","flexWrap","flexShrink","settings","settingsText","filters","login","loginText","containerMessage","flex","avatar","marginVertical","message","paddingTop","containerProfileItem","paddingBottom","matchesProfileItem","alignSelf","matchesTextProfileItem","messageName","descriptionProfileItem","info","iconProfile","infoContent","playlistsTopRow","bg","resizeMode","position","top","title","fontWeight","containerHome","zIndex","containerPlaylists","borderTopLeftRadius","borderTopRightRadius","containerLiked","containerMessages","containerProfile","photo","topIconLeft","paddingLeft","topIconRight","paddingRight","actionsProfile","textButton","circledButton","roundedButton","tabButtonText","textTransform","iconMenu","errorContainer","borderBottomWidth","borderColor","testText","redirectUri","makeRedirectUri","discovery","authorizationEndpoint","tokenEndpoint","hasActions","image","popularity","track","index","id","SwipeCardContext","volume","updateVolume","rgb","setPressedTrack","setShowPlaylists","showType","swiper","useSpotifyContext","isPlaying","user","setIsPlaying","switchPlayingState","token","setVolume","userRecommendedTracks","recommendedTracks","newReleases","isLandscape","Platform","OS","landScapeWeb","styles","styleContainer","flexDir","style","source","size","minimumValue","maximumValue","step","minimumTrackTintColor","maximumTrackTintColor","thumbTintColor","onValueChange","onSlidingComplete","ERROR","onPress","swipeLeft","FLASH_ACTIONS","DISLIKE_ACTIONS","SPOTIFY_GREEN","swipeRight","DARK_GRAY","promptAsync","setShowType","useFontAwesome","module","exports","match","album","IMAGE_LOGIC","IMAGE_XXX","IMAGE_SKEPTA","IMAGE_BANGER","IMAGE_ODZ","IMAGE_TRAVIS","IMAGE_METALLICA","location","IMAGE_DIO","IMAGE_POST","isOnline","description","age","IMAGE_01","IMAGE_02","IMAGE_03","IMAGE_04","IMAGE_05","IMAGE_06","IMAGE_07","infoPersonal","infoMusic","lastSeen","topTracks","topArtists","topGenres","IMAGE_08","IMAGE_09","IMAGE_10","SpotifyAuthContext","WebBrowser","maybeCompleteAuthSession","getRecommendedTracks","likeSong","queueAndSkip","likedSongs","getLikedSongs","getPlaylists","playlists","addTrackToPlaylist","getNewReleases","setDefaultPlaylist","availableMarkets","setChosenMarket","chosenMarket","setUser","setRecommendedTracks","userPlaylists","setUserPlaylists","setLikedSongs","setNewReleases","setTopGenres","setTopArtists","setTopTracks","setAvailableMarkets","defaultPlaylist","config","setConfig","useAuthRequest","clientId","scopes","usePKCE","clientSecret","response","type","params","code","undefined","tokenExchangeError","r","Math","floor","random","market","axios","then","res","albumUris","data","albums","items","forEach","push","sort","albumUriString","join","releases","getLocation","randomInt","tracks","images","release_date","uri","catch","err","error","filter","playlist","owner","display_name","a","b","playlistId","trackId","post","markets","getCountryName","nameWithFlag","put","ids","meEndpoint","country","getTopUserItems","allArtists","allTracks","availableGenres","otherGenres","allGenres","genres","topTracksText","topArtistsText","i","recomendationEndpoint","genre","includes","randomIndex","selectedTrack","splice","selectedArtist","seedGenres","seedArtists","seedTracks","configRecommendations","seed_artists","seed_genres","seed_tracks","limit","queueSongAndSkip","both","reason","trackUri","playNextSong","React","useEffect","headers","Authorization","accessToken","getUserData","getAvailibleMarkets","getUserRecommendedTracks","pause","play","Stack","createStackNavigator","Tab","createBottomTabNavigator","ErrorProvider","SpotifyAuthProvider","NavigationContainer","Error","Navigator","screenOptions","headerStyle","cardStyle","Screen","options","headerShown","animationEnabled","tabBarOptions","showLabel","activeTintColor","PRIMARY_COLOR","inactiveTintColor","labelStyle","borderTopWidth","marginBottom","component","Explore","tabBarIcon","focused","iconName","Liked","Settings","Profile","FontAwesome","Ionicons","setRGB","pressedTrack","showPlaylists","setSwiper","recommendedIndex","setRecommendedIndex","newReleasesIndex","setNewReleasesIndex","useReducer","state","action","currentState","setCurrentState","isMounted","useMounted","exchangeCodeAsync","current","exchangeError","useRef","Cards","Playlists","lastMessage","followerCount","SafeAreaView","swipeTop","url","dummyDataPlaylists","require","props","recommendedActiveStyle","newActiveStyle","_style","userTopItems","convertRGBgreen","d","convertRGBred","jumpToCardIndex","cards","renderCard","card","artists","useViewOverflow","onSwiped","cardIndex","onSwipedAborted","onSwipedAll","onSwipedRight","onSwiping","x","_y","ref","verticalSwipe","stackSize","infinite","DATA","matches","_cardIndex","container","trackColor","false","true","thumbColor","ios_backgroundColor","borderBottomColor","toRef","setTimeout","clearTimeout","BG_IMAGE","numColumns","keyExtractor","toString","renderItem","CardItemSmall","Icon","DEMO","Message","mockTopGenres","mockTopArtists","mockTopTracks","ProfileItem","followers","total","iconFocused","MockSettingItems","exampleBool","setExampleBool","header","explanation","defaultValue","SettingItemSwitch","SettingItems","onSelect","find","playlistName","getDefaultPlaylist","textContainer","dropdownNonpress","dropdownStyle","dropdown","dropdownTextHighlightStyle","dropdownTextHighlight","textStyle","showsVerticalScrollIndicator","dropdownTextStyle","dropdownText","_index","DARKER_GRAY"],"mappings":"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","file":"static/js/app.113404f2.chunk.js","sourcesContent":["import React, { createContext, useContext, useState } from 'react';\n\nconst ErrorContext: React.Context<{\n    errorTexts: string[];\n    addErrorText: (errorText: string) => void;\n    popErrorText: () => string | undefined;\n    setErrorTexts: any;\n    showComponent: boolean | null,\n    setShowComponent: any;\n}> = createContext({\n  errorTexts: [],\n  addErrorText: () => {},\n  popErrorText: () => {},\n  setErrorTexts: () => {},\n  showComponent: null,\n  setShowComponent: () => {},\n\n});\n\ninterface Props {\n    children: React.ReactNode\n  }\n\nexport const ErrorProvider: React.ReactNode = ({ children }: Props) => {\n  const [errorTexts, setErrorTexts] = useState<string[]>([]);\n  const [showComponent, setShowComponent] = useState(false);\n\n  function addErrorText(text: string) {\n    const newArray = errorTexts.concat(text);\n    setErrorTexts(newArray);\n  }\n\n  function popErrorText() {\n    // pop item from array\n    if (errorTexts.length > 0) {\n      const item = errorTexts[0];\n      const newArray = errorTexts.slice(1);\n      setErrorTexts(newArray);\n      return item;\n    }\n    console.log('Fatal: no items');\n  }\n\n  return (\n    <ErrorContext.Provider value={{\n      errorTexts,\n      addErrorText,\n      popErrorText,\n      showComponent,\n      setShowComponent,\n      setErrorTexts,\n    }}\n    >\n      {children}\n    </ErrorContext.Provider>\n  );\n};\n\nexport default function useError() {\n  return useContext(ErrorContext);\n}\n","import { countries } from 'country-data';\n\nexport function getCountryName(countryCode: string) {\n    const country = countries[countryCode].name;\n    return country;\n}\n  \nexport function getCounryCode(contryName: string) {\n    const countryCode = countries[contryName].alpha2;\n    return countryCode;\n}\n\nexport function getCounryCodeFromLocation(locationWithFlag: string) {\n    const countryName = locationWithFlag.split(' ')[0];\n    return getCounryCode(countryName);\n}\n\n\nexport function getFlagEmoji(countryCode: string) {\n    const codePoints = countryCode\n      .toUpperCase()\n      .split('')\n      .map((char) => 127397 + char.charCodeAt(0));\n    return String.fromCodePoint(...codePoints);\n  }\n\nexport function getLocation(countryCode: string) {\n    // get flag emoji\n    const flagEmoji = getFlagEmoji(countryCode);\n    // get country name\n    const country = countries[countryCode].name;\n    return `${country} ${flagEmoji}`;\n}\n\n","import { StyleSheet, Dimensions } from \"react-native\";\n\nexport const PRIMARY_COLOR = \"#7444C0\";\nexport const SECONDARY_COLOR = \"#5636B8\";\nexport const WHITE = \"#FFFFFF\";\nexport const GRAY = \"#757E90\";\nexport const DARK_GRAY = \"#363636\"; // rgb(54, 54, 54)\nexport const BLACK = \"#000000\";\nexport const DARKER_GRAY = \"#303030\";\nexport const SPOTIFY_GREEN = \"#1DB954\";\n\nexport const ONLINE_STATUS = \"#46A575\";\nexport const OFFLINE_STATUS = \"#D04949\";\n\nexport const STAR_ACTIONS = \"#FFA200\";\nexport const LIKE_ACTIONS = \"#B644B2\";\nexport const DISLIKE_ACTIONS = \"#363636\";\nexport const FLASH_ACTIONS = \"#5028D7\";\n\nexport const ERROR = \"#770707\";\n\nexport const DIMENSION_WIDTH = Dimensions.get(\"window\").width;\nexport const DIMENSION_HEIGHT = Dimensions.get(\"window\").height;\n\n\nexport const CARD_HEIGHT = (DIMENSION_HEIGHT - 50) * 0.8;\n\nexport default StyleSheet.create({\n  // COMPONENT - CARD ITEM\n  containerCardItem: {\n    backgroundColor: DARK_GRAY,\n    borderRadius: 8,\n    borderWidth: 1,\n    //borderColor: SPOTIFY_GREEN,\n    height: CARD_HEIGHT,\n    alignItems: \"center\",\n    margin: 5,\n    elevation: 1,\n    shadowOpacity: 0.05,\n    shadowRadius: 10,\n    shadowColor: BLACK,\n    shadowOffset: { height: 0, width: 0 },\n    // center children\n    justifyContent: \"center\",\n    marginTop: -30,\n    marginLeft: -20,\n\n  },\n\n  imageStyle: {\n    borderRadius: 8,\n    width:  DIMENSION_WIDTH - 80,\n    height: CARD_HEIGHT / 2,\n    margin: 20,\n  },\n\n  containerCardItemWeb: {\n    width: DIMENSION_WIDTH - 40,\n    height: CARD_HEIGHT,\n    padding: 0,\n\n  },\n\n  containerCardItemSmall: {\n    backgroundColor: DARK_GRAY,\n    borderRadius: 8,\n    alignItems: \"center\",\n    margin: 10,\n    elevation: 1,\n    shadowOpacity: 0.05,\n    shadowRadius: 10,\n    shadowColor: BLACK,\n    shadowOffset: { height: 0, width: 0 },\n    width: (DIMENSION_WIDTH / 2) - 30,\n    // center children\n    justifyContent: \"center\",\n  },\n\n  containerCardItemRow: {\n    backgroundColor: DARK_GRAY,\n    borderRadius: 2,\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    margin: 10,\n    elevation: 1,\n    shadowOpacity: 0.05,\n    shadowRadius: 10,\n    shadowColor: BLACK,\n    shadowOffset: { height: 0, width: 0 },\n    width: DIMENSION_WIDTH - 30,\n  },\n  playlistText: {\n    fontSize: 30,\n    color: WHITE,\n    marginLeft: \"5%\"\n  },\n\n  matchesCardItem: {\n    marginTop: -35,\n    backgroundColor: PRIMARY_COLOR,\n    paddingVertical: 7,\n    paddingHorizontal: 20,\n    borderRadius: 20,\n  },\n  matchesTextCardItem: {\n    color: WHITE,\n  },\n\n  exploreTopCenter: {\n    textAlign: \"center\",\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n   },\n\n  exploreTopCenterText: {\n    color: GRAY,\n    fontSize: 15,\n    marginHorizontal: 10,\n  },\n\n  exploreTopCenterTextActive: {\n    color: WHITE,\n  },\n\n  volumeSlider: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    alignItems: \"center\",\n  },\n  descriptionCardItem: {\n    color: GRAY,\n    textAlign: \"center\",\n  },\n  artist: {\n    alignItems: \"center\",\n    textAlign: \"center\",\n  },\n  artistText: {\n    color: GRAY,\n    fontSize: 20,\n    textAlign: \"center\",\n  },\n\n  releaseDate: {\n    color: GRAY,\n    fontSize: 18,\n    textAlign: \"center\",\n  },\n\n\n  reminderText: {\n    color: GRAY,\n    fontSize: 15,\n    textAlign: \"center\",\n  },\n  online: {\n    width: 6,\n    height: 6,\n    backgroundColor: ONLINE_STATUS,\n    borderRadius: 3,\n    marginRight: 4,\n  },\n  offline: {\n    width: 6,\n    height: 6,\n    backgroundColor: OFFLINE_STATUS,\n    borderRadius: 3,\n    marginRight: 4,\n  },\n  actionsCardItem: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    paddingVertical: 30,\n  },\n  button: {\n    width: 60,\n    height: 60,\n    borderRadius: 30,\n    backgroundColor: WHITE,\n    marginHorizontal: 7,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    elevation: 1,\n    shadowOpacity: 0.15,\n    shadowRadius: 20,\n    shadowColor: DARK_GRAY,\n    shadowOffset: { height: 10, width: 0 },\n  },\n  miniButton: {\n    width: 45,\n    height: 45,\n    borderRadius: 30,\n    backgroundColor: WHITE,\n    marginHorizontal: 7,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    elevation: 1,\n    shadowOpacity: 0.15,\n    shadowRadius: 20,\n    shadowColor: DARK_GRAY,\n    shadowOffset: { height: 10, width: 0 },\n  },\n  // SMALL CARD (CARDITEMSMALL)\n  smallImageStyle: {\n      borderRadius: 8,\n      width: DIMENSION_WIDTH / 2 - 40 ,\n      height: 170 ,\n      margin: 0,\n      flexDirection: \"column\",\n  },\n  playlistImage: {\n    borderRadius: 2,\n    height:  120,\n    width: 120,\n    margin: 0,\n  },\n\n  smallNameStyle: {\n      color: WHITE,\n      fontSize: 15,\n      textAlign: \"center\",\n    },\n  // LARGE CARD (CARDITEM)\n  \n  \n\n  trackStyle: {\n      color: WHITE,\n      width: \"100%\",\n      textAlign: \"center\",\n      height: 45,\n      flexWrap: 'wrap',\n      flexShrink: 1,\n      fontSize: 25,\n  },\n\n\n\n  // COMPONENT - SETTINGS\n  settings: {\n    backgroundColor: WHITE,\n    padding: 10,\n    borderRadius: 20,\n    width: 40,\n    elevation: 1,\n    shadowOpacity: 0.05,\n    shadowRadius: 10,\n    shadowColor: BLACK,\n    shadowOffset: { height: 0, width: 0 },\n  },\n  settingsText: {\n    color: DARK_GRAY,\n    fontSize: 13,\n    textAlign: \"center\",\n  },\n\n  // COMPONENT - FILTERS\n  filters: {\n    backgroundColor: WHITE,\n    padding: 10,\n    borderRadius: 20,\n    width: 40,\n    elevation: 1,\n    shadowOpacity: 0.05,\n    shadowRadius: 10,\n    shadowColor: BLACK,\n    shadowOffset: { height: 0, width: 0 },\n    alignItems: \"center\",\n  },\n\n  login: {\n    backgroundColor: WHITE,\n    padding: 10,\n    borderRadius: 20,\n    width: 80,\n    elevation: 1,\n    shadowOpacity: 0.05,\n    shadowRadius: 10,\n    shadowColor: BLACK,\n    shadowOffset: { height: 0, width: 0 },\n  },\n\n  loginText: {\n    color: DARK_GRAY,\n    fontSize: 13,\n    textAlign: \"center\",\n  },\n\n  // COMPONENT - MESSAGE\n  containerMessage: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"flex-start\",\n    flexDirection: \"row\",\n    paddingHorizontal: 10,\n    width: DIMENSION_WIDTH - 100,\n  },\n  avatar: {\n    borderRadius: 30,\n    width: 60,\n    height: 60,\n    marginRight: 20,\n    marginVertical: 15,\n  },\n  message: {\n    color: GRAY,\n    fontSize: 12,\n    paddingTop: 5,\n  },\n\n  // COMPONENT - PROFILE ITEM\n  containerProfileItem: {\n    backgroundColor: \"#232323\",\n    paddingHorizontal: 10,\n    paddingBottom: 25,\n    margin: 20,\n    borderRadius: 8,\n    marginTop: -65,\n    elevation: 1,\n    shadowOpacity: 0.05,\n    shadowRadius: 10,\n    shadowColor: BLACK,\n    shadowOffset: { height: 0, width: 0 },\n  },\n  matchesProfileItem: {\n    width: 135,\n    marginTop: -15,\n    backgroundColor: PRIMARY_COLOR,\n    paddingVertical: 7,\n    paddingHorizontal: 20,\n    borderRadius: 20,\n    alignSelf: \"center\",\n  },\n  matchesTextProfileItem: {\n    color: WHITE,\n    textAlign: \"center\",\n  },\n  name: {\n    paddingTop: 25,\n    paddingBottom: 5,\n    color: WHITE,\n    fontSize: 15,\n    textAlign: \"center\",\n  },\n  messageName: {\n    paddingTop: 25,\n    paddingBottom: 5,\n    color: WHITE,\n    fontSize: 15,\n    textAlign: \"left\",\n  },\n  descriptionProfileItem: {\n    color: GRAY,\n    textAlign: \"center\",\n    paddingBottom: 20,\n    fontSize: 13,\n  },\n  info: {\n    paddingVertical: 8,\n    flexDirection: \"row\",\n    alignItems: \"center\",\n  },\n  iconProfile: {\n    fontSize: 12,\n    color: DARK_GRAY,\n    paddingHorizontal: 10,\n  },\n  infoContent: {\n    color: GRAY,\n    fontSize: 13,\n  },\n\n  playlistsTopRow: {\n    flexDirection: 'row', \n    width: '90%', \n    marginLeft: '5%', \n    marginRight: '5%', \n    // vertically align items center\n    alignItems: 'center',\n  },\n\n  // CONTAINER - GENERAL\n  bg: {\n    flex: 1,\n    resizeMode: \"cover\",\n    width: DIMENSION_WIDTH,\n    height: DIMENSION_HEIGHT,\n    position: \"absolute\",\n  },\n  top: {\n    paddingTop: 50,\n    marginHorizontal: 10,\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n  },\n  title: { \n    paddingBottom: 10, \n    fontSize: 22, \n    color: WHITE,\n    fontWeight: \"bold\",\n    textAlign: \"center\",\n    width: \"100%\",\n  },\n\n  // CONTAINER - HOME\n  containerHome: {\n    marginHorizontal: 10,\n    zIndex: 1,\n    elevation: 1,\n    //display: \"none\",\n  },\n\n  containerPlaylists: { \n    flex: 1, \n    backgroundColor: WHITE, \n    marginTop: 200 - CARD_HEIGHT, \n    borderTopLeftRadius: 20, \n    borderTopRightRadius: 20,\n    borderRadius: 6,\n    zIndex: 3,\n    elevation: 3,\n    },\n\n  // CONTAINER - MATCHES\n  containerLiked: {\n    justifyContent: \"space-between\",\n    flex: 1,\n    paddingHorizontal: 10,\n  },\n\n  // CONTAINER - MESSAGES\n  containerMessages: {\n    justifyContent: \"space-between\",\n    flex: 1,\n    paddingHorizontal: 10,\n  },\n\n  // CONTAINER - PROFILE\n  containerProfile: { marginHorizontal: 0 },\n  photo: {\n    width: DIMENSION_WIDTH,\n    height: 450,\n  },\n  topIconLeft: {\n    paddingLeft: 20,\n  },\n  topIconRight: {\n    paddingRight: 20,\n  },\n  actionsProfile: {\n    justifyContent: \"center\",\n    flexDirection: \"row\",\n    alignItems: \"center\",\n  },\n  textButton: {\n    fontSize: 15,\n    color: WHITE,\n    paddingLeft: 5,\n  },\n  circledButton: {\n    width: 50,\n    height: 50,\n    borderRadius: 25,\n    backgroundColor: PRIMARY_COLOR,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginRight: 10,\n  },\n  roundedButton: {\n    justifyContent: \"center\",\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    marginLeft: 10,\n    height: 50,\n    borderRadius: 25,\n    backgroundColor: SECONDARY_COLOR,\n    paddingHorizontal: 20,\n  },\n\n  // MENU\n  tabButtonText: {\n    textTransform: \"uppercase\",\n  },\n  iconMenu: {\n    alignItems: \"center\",\n  },\n  errorContainer: {\n    flex: 1, flexDirection: 'row', justifyContent: 'center', alignItems: 'center',\n    zIndex: 1,\n    height: 100,\n    position: \"absolute\",\n    backgroundColor: ERROR,\n    borderBottomWidth: 1,\n    borderColor: 'red',\n    width: '100%'\n  },\n  \n  testText: {\n    color: 'red',\n    fontSize: 15,\n    textAlign: 'center',\n    width: '100%'\n  },\n\n\n});\n","import { Platform } from 'react-native';\nimport { REDIRECT_URI, REDIRECT_URI_WEB } from '@env';\nimport { makeRedirectUri } from 'expo-auth-session';\n\n// TODO: can maybe be replaced with: getRedirectUrl from expo auth session\n\n//const redirectUri = Platform.OS === 'web' ? REDIRECT_URI_WEB : REDIRECT_URI;\n\nconst redirectUri = makeRedirectUri({\n});\nconsole.log(redirectUri);\n// TODO: add all endpoints to here instead of useSpotifyAuth\nconst authorizationEndpoint = 'https://accounts.spotify.com/authorize';\nconst tokenEndpoint = 'https://accounts.spotify.com/api/token';\nconst meEndpoint = 'https://api.spotify.com/v1/me';\nconst recomendationEndpoint = 'https://api.spotify.com/v1/recommendations';\n\nconst discovery = {\n  authorizationEndpoint,\n  tokenEndpoint,\n};\n\nexport {\n  redirectUri, discovery, meEndpoint, recomendationEndpoint,\n};\n","import React, { useContext } from 'react';\nimport {\n  Text, View, Image, TouchableOpacity, Platform,\n} from 'react-native';\nimport Slider from '@react-native-community/slider';\nimport Icon from '../Icon';\nimport { CardItemT, SwipedCardContextT } from '../../types';\n\nimport styles, {\n  DIMENSION_HEIGHT,\n  DIMENSION_WIDTH,\n  DISLIKE_ACTIONS,\n  ERROR,\n  FLASH_ACTIONS,\n  SPOTIFY_GREEN,\n  WHITE,\n} from '../../assets/styles';\nimport { SwipeCardContext } from './CardProvider';\nimport useSpotifyContext from '../../hooks/useSpotifyAuth';\n\nfunction CardItem({\n  hasActions,\n  image,\n  artist,\n  popularity,\n  track,\n  releaseDate,\n  id: index,\n\n}: CardItemT) {\n  const {\n    volume, updateVolume, rgb, setPressedTrack, setShowPlaylists, showType,\n    swiper,\n\n  } = useContext(SwipeCardContext) as SwipedCardContextT;\n  const {\n    user,\n    isPlaying,\n    setIsPlaying,\n    switchPlayingState,\n    token,\n    setVolume,\n    recommendedTracks: userRecommendedTracks,\n    newReleases,\n  } = useSpotifyContext();\n\n  if (track.length > 25) {\n    track = `${track.slice(0, 25)}...`;\n  }\n\n  const isLandscape = () => DIMENSION_WIDTH >= DIMENSION_HEIGHT && Platform.OS === 'web';\n\n  const landScapeWeb = isLandscape() ? styles.containerCardItemWeb : {};\n\n  const styleContainer = [styles.containerCardItem, { backgroundColor: rgb }, landScapeWeb];\n  const flexDir = isLandscape() ? 'row' : 'column';\n  return (\n\n    <View style={styleContainer}>\n      {/* IMAGE */}\n      <View style={{ flexDirection: flexDir }}>\n        <Image source={image} style={styles.imageStyle} />\n      </View>\n      <View style={styles.matchesCardItem}>\n        <Text style={styles.matchesTextCardItem}>\n          <Icon name=\"heart\" color={WHITE} size={13} />\n          {' '}\n          {popularity || '0'}\n          % Popularity\n        </Text>\n      </View>\n\n      {/* NAME */}\n\n      <Text style={styles.trackStyle}>{track}</Text>\n\n      <View style={styles.artist}>\n        <Text style={styles.artistText}>{artist}</Text>\n        {releaseDate && (\n          <Text style={styles.releaseDate}>{releaseDate}</Text>\n        )}\n      </View>\n      <View style={{ flexDirection: flexDir }}>\n        {Platform.OS === 'web' && (\n        <View style={styles.volumeSlider}>\n          <Icon name=\"md-volume-low\" color={WHITE} size={20} />\n          <Slider\n            style={{ width: 200, height: 20 }}\n            minimumValue={0}\n            maximumValue={100}\n            step={1}\n            minimumTrackTintColor=\"#FFFFFF\"\n            maximumTrackTintColor=\"#000000\"\n            thumbTintColor=\"#FFFFFF\"\n            value={volume}\n            onValueChange={(value: number) => {\n              updateVolume(value);\n            // Cant set volume here due to exceeding API rate limit\n            }}\n            onSlidingComplete={(value: number) => {\n              if (token) {\n                setVolume(value);\n              }\n            }}\n          />\n          <Icon name=\"md-volume-high\" color={WHITE} size={20} />\n        </View>\n        )}\n\n        {/* ACTIONS */}\n        {hasActions && (\n        <View style={styles.actionsCardItem}>\n\n          <TouchableOpacity style={styles.miniButton}>\n            <Icon\n              name=\"close\"\n              color={ERROR}\n              size={20}\n              onPress={() => {\n                swiper?.swipeLeft();\n              }}\n\n            />\n          </TouchableOpacity>\n          <TouchableOpacity style={styles.miniButton}>\n            <Icon\n              name=\"copy-outline\"\n              color={FLASH_ACTIONS}\n              size={20}\n              onPress={() => {\n                // if (token) {\n                //   if (showType === 'recommended') {\n                //     Clipboard.setString(userRecommendedTracks[index].uri);\n                //   } else if (showType === 'new') {\n                //     Clipboard.setString(newReleases[index].uri);\n                //   }\n                // }\n              }}\n\n            />\n          </TouchableOpacity>\n\n          <TouchableOpacity style={styles.button}>\n            {isPlaying\n              ? (\n                <Icon\n                  name=\"pause\"\n                  color={DISLIKE_ACTIONS}\n                  size={30}\n                  onPress={() => {\n                    if (token) { // user is logged in\n                      switchPlayingState();\n                    } else { // user is not logged in switch icon for mock page\n                      setIsPlaying(!isPlaying);\n                    }\n                  }}\n                />\n              )\n              : (\n                <Icon\n                  name=\"play\"\n                  color={DISLIKE_ACTIONS}\n                  size={30}\n                  onPress={() => {\n                    if (token) {\n                      switchPlayingState();\n                    } else { // user is not logged in switch icon for mock page\n                      setIsPlaying(!isPlaying);\n                    }\n                  }}\n                />\n              )}\n\n          </TouchableOpacity>\n          <TouchableOpacity style={styles.miniButton}>\n            <Icon\n              name=\"add\"\n              color={FLASH_ACTIONS}\n              size={20}\n              onPress={() => {\n                if (token) {\n                  if (showType === 'recommended') {\n                    setPressedTrack(userRecommendedTracks[index]);\n                  } else if (showType === 'new') {\n                    setPressedTrack(newReleases[index]);\n                  } else {\n                    console.log('invalid showType');\n                  }\n                }\n\n                setShowPlaylists(true);\n              }}\n            />\n\n          </TouchableOpacity>\n          <TouchableOpacity style={styles.miniButton}>\n            <Icon\n              name=\"checkmark\"\n              color={SPOTIFY_GREEN}\n              size={20}\n              onPress={() => {\n                swiper?.swipeRight();\n              }}\n\n            />\n          </TouchableOpacity>\n\n        </View>\n        )}\n      </View>\n      <View style={{ flexDirection: flexDir }}>\n        <View>\n          <Text style={[styles.reminderText, { fontSize: 15 }]}>\n            You need to have the spotify app active to use this application.\n            Try playing and pausing your current song, and make sure your queue is empty.\n          </Text>\n        </View>\n      </View>\n    </View>\n  );\n}\n\nexport default CardItem;\n","import React from 'react';\nimport { Text, TouchableOpacity } from 'react-native';\nimport Icon from './Icon';\nimport styles, { DARK_GRAY } from '../assets/styles';\nimport useSpotifyContext from '../hooks/useSpotifyAuth';\n\nfunction Settings() {\n  const { token } = useSpotifyContext();\n\n  return (\n    <TouchableOpacity style={styles.settings}>\n      <Text style={styles.settingsText}>\n        <Icon name=\"settings-sharp\" size={15} color={DARK_GRAY} onPress={() => console.log(token)} />\n      </Text>\n      {/* console.log(response) */}\n    </TouchableOpacity>\n  );\n}\n\nexport default Settings;\n","import React from 'react';\nimport { TouchableOpacity } from 'react-native';\nimport Icon from './Icon';\nimport styles, { DARK_GRAY } from '../assets/styles';\nimport useSpotifyContext from '../hooks/useSpotifyAuth';\n\nfunction Filters() {\n  const { newReleases } = useSpotifyContext();\n  return (\n    <TouchableOpacity style={styles.filters}>\n      <Icon name=\"options\" size={15} color={DARK_GRAY} onPress={() => console.log(newReleases)} />\n    </TouchableOpacity>\n  );\n}\n\nexport default Filters;\n","import React, { useContext } from 'react';\nimport { Text, TouchableOpacity, View } from 'react-native';\nimport Icon from './Icon';\nimport styles, { DARK_GRAY } from '../assets/styles';\nimport useSpotifyContext from '../hooks/useSpotifyAuth';\nimport { SwipeCardContext } from './card-components/CardProvider';\nimport { SwipedCardContextT } from '../types';\n\nfunction Login() {\n  const { promptAsync } = useSpotifyContext();\n  const { setShowType } = useContext(SwipeCardContext) as SwipedCardContextT;\n\n  async function awaitPromptAsync() {\n    setShowType('recommended');\n    await promptAsync();\n  }\n\n  return (\n    <View style={{ flexDirection: 'row' }}>\n      <TouchableOpacity style={styles.login} onPress={awaitPromptAsync}>\n        <Text style={styles.loginText}>\n          <Icon name=\"spotify\" size={13} color={DARK_GRAY} useFontAwesome />\n          {' Login'}\n        </Text>\n      </TouchableOpacity>\n\n      {/* <TouchableOpacity style={styles.login} onPress={awaitPromptAsync}>\n        <Text style={styles.loginText}>\n          <Icon name=\"soundcloud\" size={13} color={DARK_GRAY} useFontAwesome />\n          {' Login'}\n        </Text>\n      </TouchableOpacity> */}\n    </View>\n  );\n}\n\nexport default Login;\n","import React from 'react';\nimport { Text, View, Image } from 'react-native';\nimport { CardItemRowT } from '../../types';\n\nimport styles from '../../assets/styles';\n\nfunction CardItemRow({\n  image,\n  name,\n}: CardItemRowT) {\n  return (\n    <View style={styles.containerCardItemRow}>\n      {/* IMAGE */}\n      <Image source={image} style={styles.playlistImage} />\n      {/* NAME */}\n      <Text style={styles.playlistText}>{name}</Text>\n    </View>\n  );\n}\n\nexport default CardItemRow;\n","module.exports = __webpack_public_path__ + \"static/media/logic.e98d400e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/odz.a48909a6.jpg\";","module.exports = __webpack_public_path__ + \"static/media/metallica.3bad5394.jpg\";","module.exports = __webpack_public_path__ + \"static/media/dio.6a2fb57d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/post.61b3850d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/skepta.f0f62bb2.jpg\";","import { DataSong } from \"../../types\";\nimport IMAGE_LOGIC from \"../images/logic.jpg\";\nimport IMAGE_XXX from \"../images/xxx.jpg\";\nimport IMAGE_SKEPTA from \"../images/skepta.jpg\";\nimport IMAGE_ODZ from \"../images/odz.jpg\";\nimport IMAGE_DIO from \"../images/dio.jpg\";\nimport IMAGE_POST from \"../images/post.jpg\";\nimport IMAGE_METALLICA from \"../images/metallica.jpg\";\n//import IMAGE_TYLER from  \".../images/tyler.jpg\";\nimport IMAGE_TRAVIS from \"../images/travis.jpg\";\nimport IMAGE_BANGER from \"../images/banger.jpg\";\n\n\nconst data: DataSong[] = [\n  {\n    id: 1,\n    track: \"The Return\",\n    match: \"78\",\n    artist: \"Logic\",\n    album: \"The Return\",\n    image: IMAGE_LOGIC,\n\n  },\n  {\n    id: 2,\n    track: \"SAD!\",\n    match: \"93\",\n    artist: \"XXXTentacion\",\n    album: \"?\",\n    image: IMAGE_XXX,\n  },\n  {\n    id: 3,\n    track: \"Bullet From A Gun\",\n    match: \"45\",\n    artist: \"skepta\",\n    album: \"Ignorance is bliss\",\n    image: IMAGE_SKEPTA,\n  },\n  {\n    id: 4,\n    track: \"Summer of Our Lives\",\n    match: \"88\",\n    artist: \"waykap, Emmi\",\n    album: \"Summer of Our Lives\",\n    image: IMAGE_BANGER,\n  },\n  {\n    id: 5,\n    track: \"Ostron\",\n    match: \"76\",\n    artist: \"Frej Larsson, ODZ, Canto\",\n    album: \"Bland streckgubbar och linjemän\",\n    image: IMAGE_ODZ,\n  },\n  {\n    id: 6,\n    track: \"SICKO MODE\",\n    match: \"95\",\n    artist: \"Travis Scott\",\n    album: \"ASTROWORLD\",\n    image: IMAGE_TRAVIS,\n  },\n  {\n    id: 7,\n    track: \"ONE\",\n    match: \"67\",\n    artist: \"Metallica\",\n    album: \"...And Justice for None\",\n    image: IMAGE_METALLICA,\n  },\n  {\n    id: 8,\n    track: \"Holy Diver\",\n    match: \"85\",\n    artist: \"Dio\",\n    location: \"Irvine, CA\",\n    album: \"Holy Diver\",\n    image: IMAGE_DIO,\n  },\n  {\n    id: 9,\n    track: \"EARFQUACK\",\n    match: \"74\",\n    artist: \"Tyler, The Creator\",\n    album: \"IGOR\",\n    image: IMAGE_DIO,\n  },\n  {\n    id: 10,\n    track: \"Congratulations\",\n    match: \"98\",\n    artist: \"Post Malone\",\n    album: \"Stoney\",\n    image: IMAGE_POST,\n  },\n];\n\nexport default data;\n","import { DataProfile } from \"../../types\";\nimport IMAGE_01 from \"../images/img01.jpeg\";\nimport IMAGE_02 from \"../images/img01.jpeg\";\nimport IMAGE_03 from \"../images/img01.jpeg\";\nimport IMAGE_04 from \"../images/img01.jpeg\";\nimport IMAGE_05 from \"../images/img01.jpeg\";\nimport IMAGE_06 from \"../images/img01.jpeg\";\nimport IMAGE_07 from \"../images/img01.jpeg\";\nimport IMAGE_08 from \"../images/img01.jpeg\";\nimport IMAGE_09 from \"../images/img01.jpeg\";\nimport IMAGE_10 from \"../images/img01.jpeg\";\n\nconst data: DataProfile[] = [\n  {\n    id: 1,\n    name: \"Fredrik Juvet\",\n    isOnline: true,\n    match: \"78\",\n    description: \"Indek Grindset\",\n    message: \"Forza Ferrari, Grande Machina, The Witcher 3, Bella Ciao\",\n    age: \"19\",\n    image: IMAGE_01,\n  },\n  {\n    id: 2,\n    name: \"Tom Rehnström\",\n    match: \"93\",\n    description: \"I am a Huge F1 fan\",\n    isOnline: true,\n    message: \"Wassup, I'm Fredrik, I'm a software developer, and I'm looking for a job.\",\n    image: IMAGE_02,\n  },\n  {\n    id: 3,\n    name: \"Isac Hassle\",\n    match: \"45\",\n    description: \"Part time Singer/Dancer.\",\n    isOnline: false,\n    message: \"Oh, hee-hee, aha. Ha, ooh, hee, ha-ha, ha-ha. And I thought my jokes were bad.\",\n    image: IMAGE_03,\n  },\n  {\n    id: 4,\n    name: \"Alexander Holmberg\",\n    match: \"88\",\n    description: \"Crypto Guru and HV71 fan\",\n    isOnline: true,\n    message: \"Crypto is up Today! Did you see Alice in Wonderland?, At least I think I did.\",\n    image: IMAGE_04,\n  },\n  {\n    id: 5,\n    name: \"Marcus Bardvall\",\n    match: \"76\",\n    description: \"It's not who I am underneath but what I do that defines me.\",\n    isOnline: false,\n    message: \"Buy my stupid NFTs\",\n    image: IMAGE_05,\n  },\n  {\n    id: 6,\n    name: \"Max Claesson\",\n    match: \"95\",\n    description: \"Guitar player, Hair like a Golden Retriever\",\n    isOnline: true,\n    message: \"I just ate two entire pizzas. I'm not sure if I'm hungry or if I'm just really, really hungry.\",\n    image: IMAGE_06,\n  },\n  {\n    id: 7,\n    name: \"Lisa Kvist\",\n    match: \"67\",\n    description:\n      \"Fulvinia, a.k.a. The Queen of the Night, a Swedish-American singer, songwriter, and actress.\",\n    isOnline: true,\n    message:\n      \"Coffee, tea, and cake. I'm not sure what else to put here.\",\n    image: IMAGE_07,\n  },\n  {\n    id: 8,\n    name: \"Olle Jernström\",\n    match: \"85\",\n    description: \"Music lover. Globe Trotter. Occasional Photographer.\",\n    age: \"19\",\n    location: \"Stockholm, Sweden\",\n    infoPersonal: 'Loves programming',\n    infoMusic: \"Loves Rock, Pop and Hiphop/Rap\",\n    lastSeen: \"Last seen: 23h ago\",\n    isOnline: true,\n    topTracks: \"Track 1, Track 2, Track 3, Track 4, Track 5\",\n    topArtists: \"Artist 1, Artist 2, Artist 3, Artist 4, Artist 5\",\n    topGenres: \"Genre 1, Genre 2, Genre 3, Genre 4, Genre 5\",\n    message:\n      \"And as for the television's so-called plan, Batman has no jurisdiction.\",\n    image: IMAGE_08,\n  },\n  {\n    id: 9,\n    name: \"Marina Bremmander\",\n    match: \"74\",\n    description:\n      \"Swedish Rapper with the artist name MarreB\",\n    isOnline: true,\n    message: \"Rap music is love\",\n    image: IMAGE_09,\n  },\n  {\n    id: 10,\n    name: \"Pepsi Man\",\n    match: \"98\",\n    description:\n      \"Pepsi da number one\",\n    isOnline: false,\n    message:\n      \"You want order in Gotham. Batman must stop drinking coke.\",\n    image: IMAGE_10,\n  },\n];\n\nexport default data;\n","import React, { createContext, useContext, useState } from 'react';\nimport { useAuthRequest } from 'expo-auth-session';\nimport * as WebBrowser from 'expo-web-browser';\nimport { CLIENT_ID, CLIENT_SECRET } from '@env';\nimport axios from 'axios';\nimport useAutoExchange from './useAutoExchange';\nimport {\n  discovery, redirectUri, meEndpoint, recomendationEndpoint,\n} from './utils/auth-utils';\nimport useError from './useError';\nimport { getCountryName, getLocation } from '../components/utils/country-utils';\n\nWebBrowser.maybeCompleteAuthSession();\n\n\n\nconst SpotifyAuthContext: React.Context<{\n  promptAsync: any\n  token: any,\n  user: any,\n  recommendedTracks: any,\n  getUserRecommendedTracks: any,\n  likeSong: any,\n  info: any,\n  queueAndSkip: any,\n  isPlaying: any,\n  setIsPlaying: any,\n  switchPlayingState: any,\n  setVolume: any,\n  likedSongs: any,\n  getLikedSongs: any,\n  getPlaylists: any,\n  playlists: any,\n  addTrackToPlaylist: any,\n  newReleases: any,\n  getNewReleases: any,\n  topGenres: string,\n  topArtists: string,\n  topTracks: string,\n  setDefaultPlaylist: any,\n  availableMarkets: any,\n  setChosenMarket: any,\n  chosenMarket: any,\n\n}> = createContext({\n  promptAsync: null,\n  token: null,\n  user: null,\n  recommendedTracks: null,\n  getRecommendedTracks: null,\n  likeSong: null,\n  info: null,\n  queueAndSkip: null,\n  isPlaying: null,\n  setIsPlaying: null,\n  switchPlayingState: null,\n  setVolume: null,\n  likedSongs: null,\n  getLikedSongs: null,\n  getPlaylists: null,\n  playlists: null,\n  addTrackToPlaylist: null,\n  newReleases: null,\n  getNewReleases: null,\n  topGenres: '',\n  topArtists: '',\n  topTracks: '',\n  setDefaultPlaylist: null,\n  availableMarkets: null,\n  setChosenMarket: null,\n  chosenMarket: null,\n});\n\nWebBrowser.maybeCompleteAuthSession();\n\ninterface Props {\n  children: React.ReactNode\n}\n\nexport const SpotifyAuthProvider: React.ReactNode = ({ children }: Props) => {\n  const [user, setUser] = useState(null);\n  const [recommendedTracks, setRecommendedTracks] = useState([]);\n  const [userPlaylists, setUserPlaylists] = useState(null);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [likedSongs, setLikedSongs] = useState(null);\n  const [newReleases, setNewReleases] = useState<any[] | null>(null);\n  const [topGenres, setTopGenres] = useState<string>('Genre 1, Genre 2, Genre 3');\n  const [topArtists, setTopArtists] = useState<string>('Artist 1, Artist 2, Artist 3');\n  const [topTracks, setTopTracks] = useState<string>('Track 1, Track 2, Track 3');\n  const [availableMarkets, setAvailableMarkets] = useState(null);\n  const [chosenMarket, setChosenMarket] = useState<string | null>(null);\n  const likeSongString = 'Liked songs';\n  const [defaultPlaylist, setDefaultPlaylist] = useState<string>(likeSongString); // Either equal to liked songs or a playlist uri\n  const [config, setConfig] = useState<any>(null);\n\n  // Error handling\n  const { addErrorText } = useError();\n  const [request, response, promptAsync] = useAuthRequest({\n    clientId: CLIENT_ID,\n    scopes: ['user-read-email', 'user-read-private', 'user-top-read', 'user-library-read',\n      'user-library-modify', 'playlist-read-private', 'playlist-read-collaborative',\n      'user-read-playback-state', 'user-modify-playback-state',\n      'app-remote-control', 'playlist-modify-private', 'playlist-modify-public',\n    ],\n    /*\n      In order to follow the 'Authorization Code Flow',\n      to fetch token after authorizationEndpoint,\n      this must be set to false\n    */\n    usePKCE: false,\n    redirectUri,\n    clientSecret: CLIENT_SECRET,\n  }, discovery);\n\n  const songCount = 20; // has to be 20 due to /albums/{ids} can only have 20 ids\n\n  // Token will be auto exchanged after auth completes.\n  const { token, tokenExchangeError: exchangeError } = useAutoExchange(\n    response?.type === 'success' ? response.params.code : undefined,\n  );\n\n  async function getNewReleases() {\n    const r = Math.floor(Math.random() * 100);\n    const market = chosenMarket || 'US';\n    await axios.get(`https://api.spotify.com/v1/browse/new-releases?limit=${songCount}&country=${chosenMarket}&offset${r}`, config)\n      .then((res) => {\n        const albumUris: string[] = [];\n        res.data.albums.items.forEach((item: any) => {\n          albumUris.push(item.id);\n        });\n        albumUris.sort(() => 0.5 - Math.random());\n        const reducedAlbumUris = albumUris.slice(0, 20);\n\n        const albumUriString = reducedAlbumUris.join();\n        const releases: any[] = [];\n        axios.get(`https://api.spotify.com/v1/albums?ids=${albumUriString}`, config)\n          .then((res) => {\n            console.log('New releases in', getLocation(market), res.data);\n            res.data.albums.forEach((album: any) => {\n              const randomInt = Math.floor(Math.random() * album.tracks.items.length);\n              const item = album.tracks.items[randomInt];\n              item.images = album.images;\n              item.releaseDate = album.release_date;\n              item.id = album.tracks.items[randomInt].uri.split(':')[2]; // WATNING SHAKY\n              releases.push(item);\n            });\n            releases.sort(() => Math.random() - 0.5);\n\n            setNewReleases(releases);\n          })\n          .catch((err) => {\n            console.log(err);\n            addErrorText(err.response.data.error.message);\n          });\n      })\n      .catch((err) => {\n        console.log(err);\n        addErrorText(err.response.data.error.message);\n      });\n  }\n\n  async function getPlaylists() {\n    await axios.get(`https://api.spotify.com/v1/me/playlists?limit=${50}`, config)\n      .then((res) => {\n        // Todo improve this to filter on user id aswell\n        const playlists = res.data.items.filter((playlist: any) => playlist.owner.display_name !== 'Spotify');\n\n        playlists.sort((a: any, b: any) => {\n          if (a.name < b.name) {\n            return -1;\n          }\n          if (a.name > b.name) {\n            return 1;\n          }\n          return 0;\n        });\n        // console.log('Playlists: ', playlists);\n        setUserPlaylists(playlists);\n      })\n      .catch((err) => {\n        console.log('Error Playlist: ', err);\n        addErrorText(err.response.data.error.message);\n      });\n  }\n\n  async function addTrackToPlaylist(playlistId: string, trackId: string) {\n    // console.log('OOO', accessToken, playlistId, trackId);\n    // If this is set to .put instead of .post it will erase the whole playlist\n    // Soooo... dont do that\n    await axios.post(`https://api.spotify.com/v1/playlists/${playlistId}/tracks?uris=${trackId}`, {}, config)\n      .then((res) => {\n        console.log('Added track to playlist: ', res.data);\n      })\n      .catch((err) => {\n        console.log('Error adding track to playlist: ', err);\n        addErrorText(err.response.data.error.message);\n      });\n  }\n\n  async function getAvailibleMarkets() {\n    await axios.get('https://api.spotify.com/v1/markets', config)\n      .then((res) => {\n        const countryCodes = res.data.markets;\n        // map each country code to its country name\n        let countries = countryCodes.map((countryCode: string) => ({\n          code: countryCode,\n          name: getCountryName(countryCode),\n          nameWithFlag: getLocation(countryCode),\n        }));\n        // sort countries alphabetically\n        countries = countries.sort((a: {code: string, name: string}, b: {code: string, name: string}) => {\n          if (a.name < b.name) {\n            return -1;\n          }\n          return 1;\n        });\n        setAvailableMarkets(countries);\n      })\n      .catch((err) => {\n        console.log('Error getting availible markets: ', err);\n        addErrorText(err.response.data.error.message);\n      });\n  }\n\n  async function playerInfo() {\n    // config\n    if (token) {\n      await axios.get('https://api.spotify.com/v1/me/player/devices', config)\n        .then((res) => {\n          // console.log('Device:', res);\n        }).catch((err) => {\n          console.log('Device Error:', err);\n          addErrorText(err.response.data.error.message);\n        });\n    }\n  }\n\n  async function likeSong(trackId: string) {\n    // config\n    console.log(defaultPlaylist, likeSongString, defaultPlaylist === likeSongString);\n    if (defaultPlaylist === likeSongString) {\n      await axios.put(\n        'https://api.spotify.com/v1/me/tracks',\n        // send trackid as \"ids\" parameter\n        { ids: [trackId] },\n        config,\n      ).then((res) => {\n        // console.log('Saved track to user library');\n        getLikedSongs();\n      }).catch((err) => {\n        console.log(err);\n        addErrorText(err.response.data.error.message);\n      });\n    } else {\n      console.log(defaultPlaylist, trackId);\n      const trackUri = `spotify:track:${trackId}`;\n      addTrackToPlaylist(defaultPlaylist, trackUri);\n    }\n  }\n\n  async function getUserData() {\n    return axios.get(meEndpoint, config)\n      .then((res) => {\n        console.log('User data: ', res.data);\n        setUser(res.data);\n        setChosenMarket(res.data.country);\n      })\n      .catch((err) => {\n        addErrorText(err.response.data.error.message);\n        console.log('E1: ', err);\n      });\n  }\n\n  async function getTopUserItems() {\n    const allArtists: any = [];\n    const allTracks: any = [];\n    const availableGenres: any = [];\n    const otherGenres: any = [];\n    const allGenres: any = [];\n    const genres: any = [];\n    const artist: any = [];\n    const tracks: any = [];\n\n    const topTracksText: any = [];\n    const topArtistsText: any = [];\n\n    const count = 5;\n\n    await axios.get(`${meEndpoint}/top/tracks`, config)\n      .then((res) => {\n        // setUserTopItems(res.data);\n        for (let i = 0; i < res.data.items.length; i += 1) {\n          allTracks.push(res.data.items[i].id);\n          topTracksText.push(res.data.items[i].name);\n        }\n      })\n      .catch((err) => {\n        console.log('E2: ', err); addErrorText(err.response.data.error.message);\n      });\n\n    await axios.get(`${recomendationEndpoint}/available-genre-seeds`, config)\n      .then((res: any) => {\n        // loop over the genres and add them to the available genres\n        res.data.genres.forEach((genre: any) => {\n          availableGenres.push(genre);\n        });\n      })\n      .catch((err) => {\n        console.log('E3: ', err); addErrorText(err.response.data.error.message);\n      });\n\n    await axios.get(`${meEndpoint}/top/artists`, config)\n      .then((res) => {\n        for (let i = 0; i < res.data.items.length; i += 1) {\n          allArtists.push(res.data.items[i].id);\n          topArtistsText.push(res.data.items[i].name);\n        }\n        res.data.items.forEach((item: any) => {\n        // loop over the genres and push them to genres\n          for (let i = 0; i < item.genres.length; i += 1) {\n            const genre = item.genres[i];\n            if (availableGenres.includes(genre) && !allGenres.includes(genre)) {\n              allGenres.push(genre);\n            } else {\n              otherGenres.push(genre);\n            }\n          }\n        });\n      })\n      .catch((err) => {\n        console.log('E: ', err); addErrorText(err.response.data.error.message);\n      });\n\n    // Get 1 random items in allGenres and place them in genres\n    for (let i = 0; i < 1; i += 1) {\n      const randomIndex = Math.floor(Math.random() * allGenres.length);\n      genres.push(allGenres[randomIndex]);\n    }\n\n    // Get two random items from allTracks and place them in tracks\n    for (let i = 0; i < 2; i += 1) {\n      if (allTracks.length !== 0) {\n        const random = Math.floor(Math.random() * allTracks.length);\n        const selectedTrack = allTracks[random];\n        tracks.push(selectedTrack);\n        allTracks.splice(random, 1); // remove selectedTrack from allTracks\n      }\n    }\n\n    // Get two random items from allArtists and place them in artists\n    for (let i = 0; i < 2; i += 1) {\n      if (allArtists.length !== 0) {\n        const random = Math.floor(Math.random() * allArtists.length);\n        const selectedArtist = allArtists[random];\n        artist.push(selectedArtist);\n        allArtists.splice(random, 1); // remove selectedArtist from allArtists\n      }\n    }\n\n    // WARNING: the length of seed genres + seed artists + seed tracks <= 5 (MAX 5)\n    const seedGenres = genres[0];\n    const seedArtists = allArtists[1] ? `${allArtists[0]},${allArtists[1]}` : '';\n    const seedTracks = allTracks[1] ? `${allTracks[0]},${allTracks[1]}` : '';\n\n    // Copy the config add modyfy it.\n    // setting config2 = config and updating config2 also updates config\n    const configRecommendations = { ...config };\n    configRecommendations.params = {\n      seed_artists: seedArtists,\n      seed_genres: seedGenres,\n      seed_tracks: seedTracks,\n      limit: songCount,\n    };\n\n    await axios.get(recomendationEndpoint, configRecommendations)\n      .then((res) => {\n        // console.log('Recomendations: ', res.data);\n        const { tracks } = res.data;\n        setRecommendedTracks(tracks);\n        const firstTrackUri = tracks[0].uri;\n        queueSongAndSkip(firstTrackUri);\n        console.log(tracks[0].name);\n      })\n      .catch((res) => console.log('Erec: ', res));\n\n    if (recommendedTracks.length === 0) {\n      const n = 10;\n      topArtistsText.sort(() => 0.5 - Math.random());\n      topTracksText.sort(() => 0.5 - Math.random());\n      const both = allGenres.concat(otherGenres);\n      both.sort(() => 0.5 - Math.random());\n      setTopArtists(topArtistsText.slice(0, n).sort().join(', '));\n      setTopTracks(topTracksText.slice(0, n).sort().join(', '));\n      setTopGenres(both.slice(0, n).sort().join(', '));\n      setVolume(50);\n    }\n  }\n\n  async function getLikedSongs() {\n    await axios.get(`${meEndpoint}/tracks`, config)\n      .then((res) => {\n        const tracks = res.data.items;\n        setLikedSongs(tracks);\n      })\n      .catch((err) => {\n        console.log('Error getting liked songs: ', err);\n        addErrorText(err.response.data.error.message);\n      });\n  }\n\n  async function pause() {\n    await axios.put('https://api.spotify.com/v1/me/player/pause', null, config)\n      .then((res) => {\n        // console.log('Paused');\n        setIsPlaying(false);\n      })\n      .catch((err) => {\n        addErrorText(err.response.data.error.message);\n        console.log('Error Pausing: ', err);\n      });\n  }\n\n  async function setVolume(volume: number) {\n    await axios.put(`https://api.spotify.com/v1/me/player/volume?volume_percent=${volume}`, null, config)\n      .then((res) => {\n        console.log('Volume Set to: ', volume);\n      })\n      .catch((err) => {\n        console.log('Error Setting Volume: ', err);\n        const { message } = err.response.data.error;\n        const { reason } = err.response.data.error;\n        addErrorText(`${message}. ${reason}`);\n      });\n  }\n\n  async function play() {\n    await axios.put('https://api.spotify.com/v1/me/player/play', null, config)\n      .then((res) => {\n        // console.log('Playing');\n        setIsPlaying(true);\n      })\n      .catch((err) => {\n        console.log('Error Playing: ', err); addErrorText(err.response.data.error.message);\n      });\n  }\n\n  async function queueSongAndSkip(trackUri: string) {\n    // TODO: Figure out how to send the query nicely with axios\n    axios.post(\n      `https://api.spotify.com/v1/me/player/queue?uri=${trackUri}`,\n      {},\n      config,\n    ).then(() => {\n      playNextSong();\n    }).catch((err) => {\n      console.log('Error Queue: ', err);\n      addErrorText(err.response.data.error.message);\n    });\n  }\n\n  async function playNextSong() {\n    axios.post(\n      'https://api.spotify.com/v1/me/player/next',\n      {},\n      config,\n    ).catch((err) => { console.log('Error Next: ', err); addErrorText(err.response.data.error.message); });\n    setIsPlaying(true);\n  }\n\n  function switchPlayingState() {\n    if (isPlaying) {\n      pause();\n    } else {\n      play();\n    }\n  }\n\n  React.useEffect(() => {\n    if (token) {\n      const config = {\n        headers: {\n          Authorization: `Bearer ${token.accessToken}`,\n        },\n      };\n      setConfig(config);\n    }\n  }, [token]);\n\n  React.useEffect(() => {\n    if (config && token) {\n      getUserData();\n      getTopUserItems();\n      getLikedSongs();\n      getPlaylists();\n      getAvailibleMarkets();\n    }\n  }, [config, token]);\n\n  React.useEffect(() => {\n    if (chosenMarket) {\n      getNewReleases();\n    }\n  }, [chosenMarket]);\n  return (\n    <SpotifyAuthContext.Provider\n      value={{\n        promptAsync,\n        token,\n        user,\n        recommendedTracks,\n        getUserRecommendedTracks: getTopUserItems,\n        likeSong,\n        info: playerInfo,\n        queueAndSkip: queueSongAndSkip,\n        isPlaying,\n        setIsPlaying,\n        switchPlayingState,\n        setVolume,\n        likedSongs,\n        getLikedSongs,\n        getPlaylists: () => {},\n        playlists: userPlaylists,\n        addTrackToPlaylist,\n        newReleases,\n        getNewReleases,\n        topTracks,\n        topArtists,\n        topGenres,\n        setDefaultPlaylist,\n        availableMarkets,\n        setChosenMarket,\n        chosenMarket,\n      }}\n    >\n      {children}\n    </SpotifyAuthContext.Provider>\n  );\n};\n\nexport default function useSpotifyContext() {\n  return useContext(SpotifyAuthContext);\n}\n","import React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { SpotifyAuthProvider } from './hooks/useSpotifyAuth';\nimport { ErrorProvider } from './hooks/useError';\nimport {\n  Explore, Liked, Profile,\n} from './screens';\nimport {\n  PRIMARY_COLOR, DARK_GRAY, BLACK,\n} from './assets/styles';\nimport TabBarIcon from './components/TabBarIcon';\nimport Settings from './screens/Settings';\nimport { Error } from './components';\n\nconst Stack = createStackNavigator();\nconst Tab = createBottomTabNavigator();\n\nfunction App() {\n  return (\n    <ErrorProvider>\n      <SpotifyAuthProvider>\n        <NavigationContainer>\n\n          <Error />\n          <Stack.Navigator\n            screenOptions={{\n              headerStyle: { elevation: 0 },\n              cardStyle: { backgroundColor: BLACK },\n            }}\n          >\n\n            <Stack.Screen\n              name=\"Tab\"\n              options={{ headerShown: false, animationEnabled: false }}\n            >\n              {() => (\n                <Tab.Navigator\n                  tabBarOptions={{\n                    showLabel: false,\n                    activeTintColor: PRIMARY_COLOR,\n                    inactiveTintColor: DARK_GRAY,\n                    labelStyle: {\n                      fontSize: 14,\n                      textTransform: 'uppercase',\n                      paddingTop: 10,\n                    },\n                    style: {\n                      backgroundColor: BLACK,\n                      borderTopWidth: 0,\n                      marginBottom: 0,\n                      shadowOpacity: 0.05,\n                      shadowRadius: 10,\n                      shadowColor: BLACK,\n                      shadowOffset: { height: 0, width: 0 },\n                    },\n                  }}\n                >\n\n                  <Tab.Screen\n                    name=\"Explore\"\n                    component={Explore}\n                    options={{\n                      tabBarIcon: ({ focused }) => (\n                        <TabBarIcon\n                          focused={focused}\n                          iconName=\"musical-notes\"\n                          text=\"Explore\"\n                        />\n                      ),\n                    }}\n                  />\n\n                  <Tab.Screen\n                    name=\"Liked\"\n                    component={Liked}\n                    options={{\n                      tabBarIcon: ({ focused }) => (\n                        <TabBarIcon\n                          focused={focused}\n                          iconName=\"heart\"\n                          text=\"Liked\"\n                        />\n                      ),\n                    }}\n                  />\n\n                  {/* <Tab.Screen\n                  name=\"Chat\"\n                  component={Messages}\n                  options={{\n                    tabBarIcon: ({ focused }) => (\n                      <TabBarIcon\n                        focused={focused}\n                        iconName=\"chatbubble\"\n                        text=\"Chat\"\n                      />\n                    ),\n                  }}\n                /> */}\n\n                  <Tab.Screen\n                    name=\"Settings\"\n                    component={Settings}\n                    options={{\n                      tabBarIcon: ({ focused }) => (\n                        <TabBarIcon\n                          focused={focused}\n                          iconName=\"settings-sharp\"\n                          text=\"Settings\"\n                        />\n                      ),\n                    }}\n                  />\n\n                  <Tab.Screen\n                    name=\"Profile\"\n                    component={Profile}\n                    options={{\n                      tabBarIcon: ({ focused }) => (\n                        <TabBarIcon\n                          focused={focused}\n                          iconName=\"person\"\n                          text=\"Profile\"\n                        />\n                      ),\n                    }}\n                  />\n                </Tab.Navigator>\n              )}\n            </Stack.Screen>\n          </Stack.Navigator>\n        </NavigationContainer>\n      </SpotifyAuthProvider>\n    </ErrorProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport { Ionicons, FontAwesome } from '@expo/vector-icons';\nimport { IconT } from '../types';\n\nfunction Icon({\n  color, name, size, style, onPress, useFontAwesome,\n}: IconT) {\n  if (!useFontAwesome) {\n    return <Ionicons name={name} size={size} color={color} style={style} onPress={onPress} />;\n  }\n  return <FontAwesome name={name} size={size} color={color} style={style} onPress={onPress} />;\n}\n\nexport default Icon;\n","export { default as CardItem } from './card-components/CardItem';\nexport { default as Settings } from './Settings';\nexport { default as Filters } from './Filters';\nexport { default as Icon } from './Icon';\nexport { default as Message } from './Message';\nexport { default as ProfileItem } from './ProfileItem';\nexport { default as Login } from './Login';\nexport { default as CardItemRow } from './card-components/CardItemRow';\nexport { default as Playlists } from './Playlists';\nexport { default as Cards } from './card-components/Cards';\nexport { default as CardItemSmall } from './card-components/CardItemSmall';\nexport { default as SettingItemSwitch } from './SettingItemSwitch';\nexport { default as Error } from './Error';\n","import { createContext, FC, useState } from 'react';\nimport Swiper from 'react-native-deck-swiper';\nimport useSpotifyContext from '../../hooks/useSpotifyAuth';\nimport { DataSong, SwipedCardContextT } from '../../types';\n\nexport const SwipeCardContext = createContext<SwipedCardContextT | null>(null);\n\nconst SwipeCardProvider: FC<React.ReactNode> = ({ children }) => {\n  const { recommendedTracks: userRecommendedTracks } = useSpotifyContext();\n  const [volume, setVolume] = useState<number>(50);\n  const [rgb, setRGB] = useState<string>('rgb(54, 54, 54)');\n  const [pressedTrack, setPressedTrack] = useState<any>(userRecommendedTracks ? userRecommendedTracks[0] : null);\n  const [showPlaylists, setShowPlaylists] = useState<boolean>(false);\n  const [swiper, setSwiper] = useState<Swiper<DataSong> | null>(null);\n\n  const [showType, setShowType] = useState<string>('mock');\n  const [recommendedIndex, setRecommendedIndex] = useState(0);\n  const [newReleasesIndex, setNewReleasesIndex] = useState(0);\n\n  const updateVolume = (value: number) => {\n    setVolume(value);\n  };\n\n  return (\n    <SwipeCardContext.Provider value={{\n      volume,\n      updateVolume,\n      rgb,\n      setRGB,\n      pressedTrack,\n      setPressedTrack,\n      showPlaylists,\n      setShowPlaylists,\n      swiper,\n      setSwiper,\n      showType,\n      setShowType,\n      recommendedIndex,\n      setRecommendedIndex,\n      newReleasesIndex,\n      setNewReleasesIndex,\n    }}\n    >\n      {children}\n    </SwipeCardContext.Provider>\n  );\n};\n\nexport default SwipeCardProvider;\n","import { exchangeCodeAsync, TokenResponse } from 'expo-auth-session';\nimport React from 'react';\nimport { CLIENT_ID, CLIENT_SECRET } from '@env';\nimport useMounted from './useMounted';\nimport { discovery, redirectUri } from './utils/auth-utils';\n\ntype State = {\n  token: TokenResponse | null;\n  tokenExchangeError: Error | null;\n};\n\n// A hook to automatically exchange the auth token for an access token.\n// I think this should be performed on server and not in the application.\nfunction useAutoExchange(code?: string): State {\n  const [currentState, setCurrentState] = React.useReducer(\n    (state: State, action: Partial<State>) => ({ ...state, ...action }),\n    { token: null, tokenExchangeError: null },\n  );\n  const isMounted = useMounted();\n\n  React.useEffect(() => {\n    if (!code) {\n      setCurrentState({ token: null, tokenExchangeError: null });\n      return;\n    }\n\n    exchangeCodeAsync(\n      {\n        clientId: CLIENT_ID,\n        clientSecret: CLIENT_SECRET,\n        code,\n        redirectUri,\n      },\n      discovery,\n    )\n      .then((token) => {\n        if (isMounted.current) {\n          setCurrentState({ token, tokenExchangeError: null });\n        }\n      })\n      .catch((exchangeError) => {\n        if (isMounted.current) {\n          setCurrentState({ tokenExchangeError: exchangeError, token: null });\n        }\n      });\n  }, [code]);\n\n  return currentState;\n}\n\nexport default useAutoExchange;\n","import React from 'react';\n\nfunction useMounted() {\n  const isMounted = React.useRef(true);\n  React.useEffect(() => () => {\n    isMounted.current = false;\n  }, []);\n  return isMounted;\n}\n\nexport default useMounted;\n","export { default as Explore } from './Explore';\nexport { default as Liked } from './Liked';\nexport { default as Messages } from './Messages';\nexport { default as Profile } from './Profile';\nexport { default as LoginPage } from './LoginPage';\n","import React from 'react';\nimport {\n  View, ImageBackground,\n} from 'react-native';\nimport { Playlists, Cards } from '../components';\nimport styles from '../assets/styles';\nimport SwipeCardProvider from '../components/card-components/CardProvider';\nimport useSpotifyContext from '../hooks/useSpotifyAuth';\n\nfunction Explore() {\n  const backgroundLink = 'https://ollisco.se/assets/bg2.jpg'; // To avoid bg dissapearing after API call\n  const { user, playlists, addTrackToPlaylist } = useSpotifyContext();\n\n  return (\n    <View>\n      <ImageBackground\n        source={{ uri: backgroundLink }} // To avoid bg dissapearing after API call\n        style={styles.bg}\n        resizeMode=\"cover\"\n      >\n        <SwipeCardProvider>\n          <Cards />\n          <Playlists />\n        </SwipeCardProvider>\n      </ImageBackground>\n    </View>\n  );\n}\n\nexport default Explore;\n","import React from 'react';\nimport { Text, View, Image } from 'react-native';\nimport { MessageT } from '../types';\nimport styles from '../assets/styles';\n\nfunction Message({ image, lastMessage, name }: MessageT) {\n  return (\n    <View style={styles.containerMessage}>\n      <Image source={image} style={styles.avatar} />\n      <View>\n        <Text style={styles.messageName}>{name}</Text>\n        <Text style={styles.message}>{lastMessage}</Text>\n      </View>\n    </View>\n  );\n}\n\nexport default Message;\n","import React from 'react';\nimport { Text, View } from 'react-native';\nimport Icon from './Icon';\nimport { ProfileItemT } from '../types';\nimport styles, { WHITE } from '../assets/styles';\n\nfunction ProfileItem({\n  followerCount,\n  location,\n  name,\n  topTracks,\n  topArtists,\n  topGenres,\n}: ProfileItemT) {\n  return (\n    <View style={styles.containerProfileItem}>\n\n      <Text style={styles.name}>{name}</Text>\n\n      <Text style={styles.descriptionProfileItem}>\n        {followerCount}\n        {' followers '}\n        -\n        {' '}\n        {location}\n      </Text>\n\n      <View style={styles.info}>\n        <Text style={styles.iconProfile}>\n          <Icon name=\"person\" size={12} color={WHITE} />\n        </Text>\n        <Text style={styles.infoContent}>{topArtists}</Text>\n      </View>\n\n      <View style={styles.info}>\n        <Text style={styles.iconProfile}>\n          <Icon name=\"musical-notes\" size={12} color={WHITE} />\n        </Text>\n        <Text style={styles.infoContent}>{topTracks}</Text>\n      </View>\n\n      <View style={styles.info}>\n        <Text style={styles.iconProfile}>\n          <Icon name=\"albums-outline\" size={12} color={WHITE} />\n        </Text>\n        <Text style={styles.infoContent}>{topGenres}</Text>\n      </View>\n\n      <View style={styles.info}>\n        <Text style={styles.iconProfile}>\n          <Icon name=\"location\" size={12} color={WHITE} />\n        </Text>\n        <Text style={styles.infoContent}>{location}</Text>\n      </View>\n\n    </View>\n  );\n}\n\nexport default ProfileItem;\n","import { useContext } from 'react';\nimport React, {\n  TouchableOpacity, View, ScrollView, Text,\n} from 'react-native';\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport styles, { DARK_GRAY, WHITE } from '../assets/styles';\nimport useSpotifyContext from '../hooks/useSpotifyAuth';\nimport CardItemRow from './card-components/CardItemRow';\nimport { SwipeCardContext } from './card-components/CardProvider';\n// import swipcardcontext from types\nimport { SwipedCardContextT } from '../types';\nimport Icon from './Icon';\nimport { dummyDataPlaylists } from '../assets/data/dummy_data_playlists';\n\nfunction Playlists() {\n  const { playlists, addTrackToPlaylist, token, \n    queueAndSkip,\n    recommendedTracks,\n    newReleases,\n  } = useSpotifyContext();\n\n  const {\n    pressedTrack,\n    showPlaylists,\n    setShowPlaylists,\n    swiper,\n    newReleasesIndex,\n    setNewReleasesIndex,\n    recommendedIndex,\n    setRecommendedIndex,\n    showType,\n  } = useContext(SwipeCardContext) as SwipedCardContextT;\n\n  if (showPlaylists) {\n    return (\n      <View style={styles.containerPlaylists}>\n        <View style={styles.playlistsTopRow}>\n          <Text style={{ color: '#000000', fontSize: 15 }}>\n            Only select a playlist where you can add songs\n          </Text>\n          <Icon\n            name=\"close\"\n            size={30}\n            color=\"#000000\"\n            style={{ marginLeft: 'auto', color: DARK_GRAY }}\n            onPress={() => setShowPlaylists(false)}\n          />\n        </View>\n        <SafeAreaView style={{ flex: 1 }}>\n          <ScrollView>\n            {playlists ? (\n              playlists.map((item: any) => (\n                <TouchableOpacity\n                  key={item.id}\n                  onPress={() => {\n                    addTrackToPlaylist(item.id, pressedTrack.uri);\n                    setShowPlaylists(false);\n                    swiper?.swipeTop();\n                    if (showType === 'new' && newReleases[newReleasesIndex + 1] !== undefined) {\n                      queueAndSkip(newReleases[newReleasesIndex + 1].uri);\n                      setRecommendedIndex(recommendedIndex + 1);\n                      setNewReleasesIndex(newReleasesIndex + 1);\n                      \n                    } else if (showType === 'recommended') {\n                      queueAndSkip(recommendedTracks[recommendedIndex + 1].uri);\n                      setRecommendedIndex(recommendedIndex + 1);\n                      setNewReleasesIndex(newReleasesIndex + 1);\n                    }\n                  }}\n                >\n                  <CardItemRow\n                    image={item.images.length > 0 ? { uri: item.images[0].url } : dummyDataPlaylists[0].image}\n                    name={item.name}\n                  />\n                </TouchableOpacity>\n              ))\n\n            ) : (\n\n              dummyDataPlaylists.map((item: any) => (\n                <TouchableOpacity\n                  key={item.id}\n                  onPress={() => {\n                    setShowPlaylists(false);\n                    swiper?.swipeRight();\n                  }}\n                >\n                  <CardItemRow\n                    image={item.image}\n                    name={item.name}\n                  />\n                </TouchableOpacity>\n              ))\n            )}\n            {/* Ugly padding hack */}\n            <TouchableOpacity>\n              <Text style={{ color: WHITE }}>Hello World!</Text>\n              <Text style={{ color: WHITE }}>Hello World!</Text>\n              <Text style={{ color: WHITE }}>Hello World!</Text>\n              <Text style={{ color: WHITE }}>Hello World!</Text>\n            </TouchableOpacity>\n          </ScrollView>\n        </SafeAreaView>\n      </View>\n    );\n  }\n  return (<></>);\n}\nexport default Playlists;\nfunction newReleasesIndex(newReleasesIndex: any) {\n  throw new Error('Function not implemented.');\n}\n\n","\n\n\n\n\nexport const dummyDataPlaylists = [\n    {\n        id: '1',\n        name: 'Playlist 1',\n        image: require('../../assets/images/logic.jpg'),\n    },\n    {\n        id: '2',\n        name: 'Playlist 2',\n        image: require('../../assets/images/odz.jpg'),\n    },\n    {\n        id: '3',\n        name: 'Playlist 3',\n        image: require('../../assets/images/metallica.jpg'),\n    },\n    // make 5 more object like that\n    {\n        id: '4',\n        name: 'Playlist 4',\n        image: require('../../assets/images/dio.jpg'),\n    },\n    {\n        id: '5',\n        name: 'Playlist 5',\n        image: require('../../assets/images/post.jpg'),\n    },\n    {\n        id: '6',\n        name: 'Playlist 6',\n        image: require('../../assets/images/skepta.jpg'),\n    }\n];","import { View, Text, TouchableOpacity } from 'react-native';\nimport React, { useContext } from 'react';\nimport styles from '../../assets/styles';\nimport Settings from '../Settings';\nimport Filters from '../Filters';\nimport Login from '../Login';\nimport useSpotifyContext from '../../hooks/useSpotifyAuth';\nimport CardStackHandler from './CardStackHandler';\nimport { SwipeCardContext } from './CardProvider';\nimport { SwipedCardContextT } from '../../types';\n\ntype Props = {}\n\nfunction Cards(props: Props) {\n  const {\n    user, queueAndSkip, recommendedTracks: userRecommendedTracks, newReleases,\n\n  } = useSpotifyContext();\n  const {\n    showType, setShowType, recommendedIndex, newReleasesIndex,\n  } = useContext(SwipeCardContext) as SwipedCardContextT;\n\n  const recommendedActiveStyle = showType === 'recommended' ? styles.exploreTopCenterTextActive : {};\n  const newActiveStyle = showType === 'new' ? styles.exploreTopCenterTextActive : {};\n\n  return (\n    <View style={styles.containerHome}>\n      <View style={styles.top}>\n        {/* Testing spotify login in settings component */}\n        <Settings />\n        {user ? (\n          <View style={styles.exploreTopCenter}>\n            <TouchableOpacity onPress={() => {\n              if (showType !== 'recommended' && userRecommendedTracks) {\n                setShowType('recommended');\n                queueAndSkip(userRecommendedTracks[recommendedIndex].uri);\n              }\n            }}\n            >\n              <Text style={[styles.exploreTopCenterText, recommendedActiveStyle]}>\n                Recommended\n              </Text>\n            </TouchableOpacity>\n            <Text style={styles.exploreTopCenterText}>\n              |\n            </Text>\n            <TouchableOpacity onPress={() => {\n              if (showType !== 'new' && newReleases) {\n                setShowType('new');\n                queueAndSkip(newReleases[newReleasesIndex].uri);\n              }\n            }}\n            >\n              <Text style={[styles.exploreTopCenterText, newActiveStyle]}>\n                New Releases\n              </Text>\n            </TouchableOpacity>\n          </View>\n        ) : (\n          <Login />\n        )}\n        <Filters />\n      </View>\n      <CardStackHandler />\n    </View>\n  );\n}\n\nexport default Cards;\n","import React, { useContext } from 'react';\nimport { View, Platform } from 'react-native';\nimport Swiper from 'react-native-deck-swiper';\nimport DATA from '../../assets/data/dummy_data_songs';\nimport { CARD_HEIGHT, DARK_GRAY } from '../../assets/styles';\nimport useSpotifyContext from '../../hooks/useSpotifyAuth';\nimport { SwipedCardContextT } from '../../types';\nimport CardItem from './CardItem';\nimport { SwipeCardContext } from './CardProvider';\n\nfunction CardStackHandler(_style: any) {\n  const {\n    recommendedTracks: userTopItems,\n    getUserRecommendedTracks: getTopUserItems,\n    token,\n    likeSong,\n    queueAndSkip,\n    newReleases,\n    getNewReleases,\n    chosenMarket\n  } = useSpotifyContext();\n  const {\n    setRGB,\n    swiper,\n    setSwiper,\n    showType,\n    recommendedIndex,\n    setRecommendedIndex,\n    newReleasesIndex,\n    setNewReleasesIndex,\n\n  } = useContext(SwipeCardContext) as SwipedCardContextT;\n\n  const swipeColorLimit = 50;\n  function convertRGBgreen(d: number) {\n    const m = d > 110 ? 100 : d;\n    return `rgb(${54 - ((54 * d) / 300) + 20}, ${m}, ${54 - ((54 * d) / 300) + 20})`;\n  }\n  function convertRGBred(d: number) {\n    const m = d < 110 ? 110 : -d;\n    return `rgb(${m}, ${54 - ((54 * -d) / 300) + 20}, ${54 - ((54 * -d) / 300) + 20})`;\n  }\n\n  React.useEffect(() => {\n    if (userTopItems.length > 0 && newReleases.length > 0) {\n      swiper?.jumpToCardIndex(0);\n    }\n  }, [userTopItems, newReleases]);\n\n  React.useEffect(() => {\n    if (showType === 'new') {\n      queueAndSkip(newReleases[0].uri);\n      setNewReleasesIndex(0);\n      setRecommendedIndex(0);\n      \n    }\n  }, [newReleases]);\n\n  return (\n    <View style={{ borderColor: '#000', borderWidth: 3, height: CARD_HEIGHT }}>\n      {userTopItems.length > 0 && showType === 'recommended'\n        ? (\n          <Swiper\n            cards={userTopItems}\n            renderCard={(\n              card:\n              {album: any, popularity: number, artists: string[], releaseDate: string, name: string},\n              index: number,\n            ) => (\n              <CardItem\n                hasActions\n                image={{ uri: card.album.images[0].url }}\n                track={card.name}\n                releaseDate={card.releaseDate}\n                popularity={card.popularity}\n                artist={card.artists.map((artist: any) => artist.name).join(', ')}\n                id={index}\n              />\n            )}\n            useViewOverflow={Platform.OS === 'ios'}\n            onSwiped={(cardIndex) => {\n              console.log(cardIndex);\n              setRGB(DARK_GRAY);\n              // console.log(token && userTopItems[recommendedIndex + 1].uri);\n              if (token && userTopItems[recommendedIndex + 1] !== undefined) {\n                queueAndSkip(userTopItems[recommendedIndex + 1].uri);\n                setRecommendedIndex(recommendedIndex + 1);\n                setNewReleasesIndex(newReleasesIndex + 1);\n              }\n            }}\n            onSwipedAborted={() => {\n              setRGB(DARK_GRAY);\n            }}\n            onSwipedAll={() => {\n              getTopUserItems();\n              getNewReleases();\n              setNewReleasesIndex(0);\n              setRecommendedIndex(0);\n            }}\n            onSwipedRight={(index) => {\n              console.log(index);\n              if (token) {\n                likeSong(userTopItems[index].id);\n              }\n            }}\n            onSwiping={(x, _y) => {\n              if (x > swipeColorLimit) {\n                setRGB(convertRGBgreen(x));\n              } else if (x < -swipeColorLimit) {\n                setRGB(convertRGBred(x));\n              } else {\n                setRGB(DARK_GRAY);\n              }\n            }}\n            ref={(swiper) => setSwiper(swiper)}\n            cardIndex={0}\n            verticalSwipe={false}\n            backgroundColor=\"#000000\"\n            stackSize={3}\n          />\n        )\n        : newReleases && showType === 'new'\n          ? (\n            <Swiper\n              cards={newReleases}\n              renderCard={(\n                card: {images: {url: string}[], name: string, artists: any, popularity: string, releaseDate: string},\n                index: number,\n              ) => (\n                <CardItem\n                  hasActions\n                  image={{ uri: card.images[0].url }}\n                  track={card.name}\n                  releaseDate={card.releaseDate}\n                  popularity={card.popularity}\n                  artist={card.artists.map((artist: any) => artist.name).join(', ')}\n                  id={index}\n                />\n              )}\n              useViewOverflow={Platform.OS === 'ios'}\n              onSwiped={(cardIndex) => {\n                console.log(cardIndex);\n                setRGB(DARK_GRAY);\n                if (token && newReleases[newReleasesIndex + 1] !== undefined) {\n                  queueAndSkip(newReleases[newReleasesIndex + 1].uri);\n                  setRecommendedIndex(recommendedIndex + 1);\n                  setNewReleasesIndex(newReleasesIndex + 1);\n                }\n              }}\n              onSwipedAborted={() => {\n                setRGB(DARK_GRAY);\n              }}\n              onSwipedAll={() => {\n                getTopUserItems();\n                getNewReleases();\n                setNewReleasesIndex(0);\n                setRecommendedIndex(0);\n              }}\n              onSwipedRight={(index) => {\n                if (token) {\n                  likeSong(newReleases[index].id);\n                }\n              }}\n              onSwiping={(x, _y) => {\n                if (x > swipeColorLimit) {\n                  setRGB(convertRGBgreen(x));\n                } else if (x < -swipeColorLimit) {\n                  setRGB(convertRGBred(x));\n                } else {\n                  setRGB(DARK_GRAY);\n                }\n              }}\n              ref={(swiper) => setSwiper(swiper)}\n              cardIndex={0}\n              verticalSwipe={false}\n              backgroundColor=\"#000000\"\n              stackSize={3}\n              infinite\n            />\n\n          )\n\n          : null}\n\n      {!newReleases && userTopItems.length === 0 ? (\n        <Swiper\n          cards={DATA}\n          renderCard={(card) => (\n            <CardItem\n              hasActions\n              image={card.image}\n              track={card.track}\n              description={card.artist}\n              matches={card.match}\n              artist={card.artist}\n            />\n          )}\n          useViewOverflow={Platform.OS === 'ios'}\n          onSwiped={(_cardIndex) => {\n            setRGB(DARK_GRAY);\n          }}\n          onSwipedAborted={() => {\n            setRGB(DARK_GRAY);\n          }}\n          onSwipedAll={() => {\n            console.log('onSwipedAll');\n          }}\n          onSwiping={(x, _y) => {\n            if (x > swipeColorLimit) {\n              setRGB(convertRGBgreen(x));\n            } else if (x < -swipeColorLimit) {\n              setRGB(convertRGBred(x));\n            } else {\n              setRGB(DARK_GRAY);\n            }\n          }}\n          ref={(swiper) => setSwiper(swiper)}\n          cardIndex={0}\n          verticalSwipe={false}\n          backgroundColor=\"#000000\"\n          stackSize={3}\n          infinite\n        />\n      ) : null}\n\n    </View>\n  );\n}\n\nexport default CardStackHandler;\n","module.exports = __webpack_public_path__ + \"static/media/xxx.a0b6a7dc.jpg\";","module.exports = __webpack_public_path__ + \"static/media/travis.a6dcc371.jpg\";","module.exports = __webpack_public_path__ + \"static/media/banger.bb266617.jpg\";","import React from 'react';\nimport { Text, View, Image } from 'react-native';\nimport { CardItemT } from '../../types';\n\nimport styles from '../../assets/styles';\n\nfunction CardItemSmall({\n  image,\n  artist,\n  track,\n}: CardItemT) {\n  const maxLength = 20;\n  if (track.length > maxLength) {\n    track = `${track.slice(0, maxLength)}...`;\n  }\n  return (\n    <View style={styles.containerCardItemSmall}>\n      {/* IMAGE */}\n      <Image source={image} style={styles.smallImageStyle} />\n      {/* NAME */}\n      <Text style={styles.smallNameStyle}>{track}</Text>\n\n      <View style={styles.artist}>\n        <Text style={[styles.artistText, { fontSize: 10 }]}>{artist}</Text>\n      </View>\n    </View>\n  );\n}\n\nexport default CardItemSmall;\n","import {\n  StyleSheet, Switch, Text, View,\n} from 'react-native';\nimport React from 'react';\nimport { SettingItemSwitchT } from '../types';\nimport { SPOTIFY_GREEN, WHITE, GRAY } from '../assets/styles/index';\n\nfunction SettingItemSwitch({\n  text,\n  onValueChange,\n  value,\n}: SettingItemSwitchT) {\n  return (\n    <View style={styles.container}>\n      <Text style={styles.text}>{text}</Text>\n      <Switch\n        trackColor={{ false: '#767577', true: SPOTIFY_GREEN }}\n        thumbColor={value ? SPOTIFY_GREEN : '#FFFFFF'}\n        ios_backgroundColor=\"#3e3e3e\"\n        onValueChange={onValueChange}\n        value={value}\n      />\n    </View>\n  );\n}\n\nexport default SettingItemSwitch;\n\nconst styles = StyleSheet.create({\n  container: {\n    alignItems: 'center',\n    padding: 20,\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    // add border to each flex item\n    borderBottomColor: GRAY,\n    borderBottomWidth: 1,\n    marginTop: -1,\n\n  },\n  text: {\n    fontSize: 18,\n    color: WHITE,\n    borderRadius: 3,\n    borderColor: GRAY,\n  },\n});\n","import { Text, TouchableOpacity } from 'react-native';\nimport React, { useEffect, useState } from 'react';\nimport styles from '../assets/styles';\nimport useError from '../hooks/useError';\n\nfunction Error() {\n  const {\n    errorTexts, showComponent, setShowComponent, setErrorTexts, popErrorText,\n  } = useError();\n  const [currentError, setCurrentError] = useState<string[] | null>(null);\n\n  // const [showComponent, setShowComponent] = useState(false);\n\n  useEffect(() => {\n    if (errorTexts.length > 0) {\n      const toRef = setTimeout(() => {\n        setShowComponent(true);\n        clearTimeout(toRef);\n        // it is good practice to clear the timeout (but I am not sure why)\n      }, 250);\n    }\n  }, [errorTexts]);\n\n  useEffect(() => {\n    if (showComponent) {\n      const toRef = setTimeout(() => {\n        setShowComponent(false);\n        clearTimeout(toRef);\n        setErrorTexts([]);\n      }, 4000);\n    }\n  }, [showComponent]);\n\n  const componentTwo = () => (\n    <TouchableOpacity\n      style={styles.errorContainer}\n      onPress={() => {setShowComponent(!showComponent); }}\n    >\n\n      <Text style={styles.testText}>{errorTexts}</Text>\n\n    </TouchableOpacity>\n  );\n\n  return (\n\n    showComponent ? componentTwo() : null\n  );\n}\n\nexport default Error;\n","import React from 'react';\nimport {\n  View,\n  Text,\n  TouchableOpacity,\n  ImageBackground,\n  FlatList,\n} from 'react-native';\nimport { CardItemSmall } from '../components';\nimport DATA from '../assets/data/dummy_data_songs';\nimport styles from '../assets/styles';\nimport BG_IMAGE from '../assets/images/bg2.jpg';\nimport useSpotifyContext from '../hooks/useSpotifyAuth';\n\nfunction Liked() {\n  const { likedSongs, getLikedSongs, token } = useSpotifyContext();\n\n  React.useEffect(() => {\n    if (!likedSongs && token !== null) {\n      getLikedSongs();\n    }\n  }, [likedSongs, getLikedSongs, token]);\n\n  return (\n    <View>\n      <ImageBackground\n        source={BG_IMAGE}\n        style={styles.bg}\n      >\n        <View style={styles.containerLiked}>\n          <View style={styles.top}>\n            <Text style={styles.title}>Liked Songs</Text>\n          </View>\n          {/* <SafeAreaView>\n            <ScrollView> */}\n          {likedSongs ? (\n            <FlatList\n              numColumns={2}\n              data={likedSongs}\n              keyExtractor={(item, index) => index.toString()}\n              renderItem={({ item }) => (\n                <TouchableOpacity>\n                  <CardItemSmall\n                    image={{ uri: item.track.album.images[0].url }}\n                    track={item.track.name}\n                    artist={item.track.artists[0].name}\n                  />\n                </TouchableOpacity>\n              )}\n            />\n          ) : (\n            <FlatList\n              numColumns={2}\n              data={DATA}\n              keyExtractor={(item, index) => index.toString()}\n              renderItem={({ index, item }) => (\n                <TouchableOpacity>\n                  <CardItemSmall\n                    id={index}\n                    image={item.image}\n                    track={item.track}\n                    artist={item.artist}\n                  />\n                </TouchableOpacity>\n              )}\n            />\n          )}\n          {/* Ugly padding hack */}\n          <TouchableOpacity>\n            <Text>Padding</Text>\n            <Text>Padding</Text>\n            <Text>Padding</Text>\n          </TouchableOpacity>\n        </View>\n      </ImageBackground>\n    </View>\n  );\n}\n\nexport default Liked;\n","import React from 'react';\nimport {\n  Text,\n  TouchableOpacity,\n  ImageBackground,\n  View,\n  FlatList,\n} from 'react-native';\nimport { Icon, Message } from '../components';\nimport DEMO from '../assets/data/dummy_data_profiles';\nimport styles, { GRAY } from '../assets/styles';\nimport BG_IMAGE from '../assets/images/bg2.jpg';\n\nfunction Messages() {\n  return (\n    <View>\n      <ImageBackground\n        source={BG_IMAGE}\n        style={styles.bg}\n      >\n        <View style={styles.containerMessages}>\n          <View style={styles.top}>\n            <Text style={styles.title}>Messages</Text>\n            <TouchableOpacity>\n              <Icon name=\"person-add\" color={GRAY} size={20} style={styles.topIconRight} />\n            </TouchableOpacity>\n          </View>\n          <FlatList\n            data={DEMO}\n            keyExtractor={(item, index) => index.toString()}\n            renderItem={({ item }) => (\n              <TouchableOpacity>\n                <Message\n                  image={item.image}\n                  name={item.name}\n                  lastMessage={item.message}\n                />\n              </TouchableOpacity>\n            )}\n          />\n        </View>\n      </ImageBackground>\n    </View>\n  );\n}\n\nexport default Messages;\n","module.exports = __webpack_public_path__ + \"static/media/img01.a678bf12.jpeg\";","import React from 'react';\nimport {\n  ScrollView,\n  View,\n  ImageBackground,\n  TouchableOpacity,\n} from 'react-native';\nimport { countries } from 'country-data';\nimport { Icon, ProfileItem } from '../components';\nimport DEMO from '../assets/data/dummy_data_profiles';\nimport styles, { WHITE } from '../assets/styles';\nimport BG_IMAGE from '../assets/images/bg2.jpg';\nimport useSpotifyContext from '../hooks/useSpotifyAuth';\nimport { getLocation } from '../components/utils/country-utils';\n\nfunction Profile() {\n  const {\n    user, topTracks, topArtists, topGenres,\n  } = useSpotifyContext();\n  const {\n    image,\n    topGenres: mockTopGenres,\n    topArtists: mockTopArtists,\n    topTracks: mockTopTracks,\n    name,\n    location,\n  } = DEMO[7];\n\n  \n\n  return (\n\n    <View>\n      <View>\n        <ImageBackground\n          source={BG_IMAGE}\n          style={styles.bg}\n        />\n        <ScrollView style={styles.containerProfile}>\n          {user && user.images.length > 0 ? (\n            <ImageBackground source={{ uri: user.images[0].url }} style={styles.photo} />\n\n          ) : (\n            <ImageBackground source={image} style={styles.photo} />\n          )}\n\n          <View style={styles.top}>\n            <TouchableOpacity>\n              <Icon\n                name=\"swap-horizontal-outline\"\n                size={20}\n                color={WHITE}\n                style={styles.topIconLeft}\n              />\n            </TouchableOpacity>\n\n            <TouchableOpacity>\n              <Icon\n                name=\"ellipsis-vertical\"\n                size={20}\n                color={WHITE}\n                style={styles.topIconRight}\n              />\n            </TouchableOpacity>\n          </View>\n\n          {user ? (\n            <ProfileItem\n              followerCount={user.followers.total}\n              name={user.display_name}\n              location={getLocation(user.country)}\n              topTracks={topTracks}\n              topArtists={topArtists}\n              topGenres={topGenres}\n            />\n          ) : (\n            <ProfileItem\n              followerCount=\"20\"\n              name={name}\n              location={location}\n              topTracks={mockTopTracks}\n              topArtists={mockTopArtists}\n              topGenres={mockTopGenres}\n            />\n          )}\n        </ScrollView>\n      </View>\n    </View>\n  );\n}\n\nexport default Profile;\n","// create a react functional component\n\nimport React from 'react';\nimport {\n  View,\n  Text,\n} from 'react-native';\nimport useSpotifyContext from '../hooks/useSpotifyAuth';\n\nfunction LoginPage() {\n  const { likedSongs, getLikedSongs, token } = useSpotifyContext();\n\n  return (\n    <View>\n      <Text>\n        Login\n      </Text>\n      ;\n    </View>\n  );\n}\n\nexport default LoginPage;\n","import React from 'react';\nimport { Text, View } from 'react-native';\nimport Icon from './Icon';\nimport styles, { GRAY, WHITE } from '../assets/styles';\nimport { TabBarIconT } from '../types';\n\nfunction TabBarIcon({ focused, iconName, text }: TabBarIconT) {\n  const iconFocused = focused ? WHITE : GRAY;\n\n  return (\n    <View style={styles.iconMenu}>\n      <Icon name={iconName} size={16} color={iconFocused} />\n      <Text style={[styles.tabButtonText, { color: iconFocused }]}>{text}</Text>\n    </View>\n  );\n}\n\nexport default TabBarIcon;\n","import {\n  View, ImageBackground, Text,\n} from 'react-native';\nimport React, { useState } from 'react';\nimport styles from '../assets/styles';\nimport BG_IMAGE from '../assets/images/bg2.jpg';\nimport { SettingItemSwitch } from '../components';\nimport SettingItemDropdown from '../components/SettingItemDropdown';\nimport useSpotifyContext from '../hooks/useSpotifyAuth';\nimport { getLocation } from '../components/utils/country-utils';\n\nfunction MockSettingItems() {\n  const [exampleBool, setExampleBool] = useState(false);\n  return (\n    <View>\n      <SettingItemDropdown\n        header=\"Country\"\n        explanation=\"Music will be adapted to the given country. New releases will be based on the country you choose.\"\n        defaultValue={'SE' || ''}\n        options={['SE', 'US', 'GB', 'CA']}\n      />\n\n      <SettingItemDropdown\n        header=\"Default Playlist\"\n        explanation=\"The default playlist where right swiped cards apear. Please only choose playlists that you own or can add music to.\"\n        options={['Playlist 1', 'Playlist 2', 'Playlist 3']}\n      />\n\n      <SettingItemSwitch\n        text=\"An example Switch\"\n        value={exampleBool}\n        onValueChange={() => setExampleBool(!exampleBool)}\n\n      />\n\n    </View>\n  );\n}\n\nfunction SettingItems() {\n  const {\n    playlists, \n    setDefaultPlaylist, \n    availableMarkets, \n    chosenMarket, \n    setChosenMarket, \n    queueAndSkip\n  } = useSpotifyContext();\n\n  const likedSongs = 'Liked songs';\n  function getDefaultPlaylist(playlistName: string) {\n    if (playlistName === likedSongs) {\n      setDefaultPlaylist(likedSongs);\n      return;\n    }\n    const playlist = playlists.find((playlist: { name: string; }) => playlist.name === playlistName);\n    setDefaultPlaylist(playlist.id);\n  }\n\n  return (\n    <View>\n      <SettingItemDropdown\n        header=\"Country\"\n        explanation=\"Music will be adapted to the given country. New releases will be based on the country you choose.\"\n        defaultValue={getLocation(chosenMarket) || ''}\n        options={availableMarkets.map((\n          country: {\n            code: string,\n            name: string, \n            nameWithFlag: string\n          }     \n        ) => country.nameWithFlag\n        )}\n        onSelect={(value: string) => {\n          setChosenMarket(availableMarkets.find((country: {nameWithFlag: string}) => country.nameWithFlag === value).code);\n        }}\n      />\n\n      <SettingItemDropdown\n        header=\"Default Playlist\"\n        explanation=\"The default playlist where right swiped cards apear. Please only choose playlists that you own or can add music to.\"\n        options={[likedSongs, ...playlists.map((playlist: { name: string; }) => playlist.name)]}\n        defaultValue={likedSongs}\n        onSelect={(value: string) => getDefaultPlaylist(value)}\n      />\n    </View>\n  );\n}\n\nfunction Settings() {\n  const { playlists, availableMarkets } = useSpotifyContext();\n  return (\n    <View>\n\n      <ImageBackground\n        source={BG_IMAGE}\n        style={styles.bg}\n      >\n        <View style={styles.top}>\n          <Text style={styles.title}>Settings</Text>\n        </View>\n        {playlists && playlists.length > 0 && availableMarkets && availableMarkets.length > 0\n          ? <SettingItems />\n          : <MockSettingItems />}\n      </ImageBackground>\n    </View>\n  );\n}\n\nexport default Settings;\n","import {\n  StyleSheet, Text, View,\n} from 'react-native';\nimport React from 'react';\nimport ModalDropdown from 'react-native-modal-dropdown';\nimport { SettingItemDropdownT } from '../types';\nimport {\n  WHITE, GRAY, BLACK, DARKER_GRAY,\n} from '../assets/styles/index';\n\nfunction SettingItemDropdown({\n  header,\n  explanation,\n  options,\n  defaultValue,\n  onSelect,\n}: SettingItemDropdownT) {\n  return (\n    <View style={styles.container}>\n      <View style={styles.textContainer}>\n        <Text style={styles.header}>{header}</Text>\n        <Text style={styles.explanation}>{explanation}</Text>\n      </View>\n      <ModalDropdown\n        style={styles.dropdownNonpress}\n        options={options}\n        defaultValue={defaultValue || 'Select an item...'}\n        dropdownStyle={styles.dropdown}\n        dropdownTextHighlightStyle={styles.dropdownTextHighlight}\n        textStyle={styles.header}\n        showsVerticalScrollIndicator={false}\n        dropdownTextStyle={styles.dropdownText}\n        onSelect={(_index: any, value: any) => {\n          if (onSelect && value) {\n            onSelect(value);\n          }\n        }}\n      />\n    </View>\n  );\n}\n\nexport default SettingItemDropdown;\n\nconst styles = StyleSheet.create({\n  container: {\n    alignItems: 'center',\n    padding: 20,\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    borderBottomColor: GRAY,\n    borderBottomWidth: 1,\n    marginTop: -1,\n\n  },\n  header: {\n    fontSize: 18,\n    color: WHITE,\n  },\n  dropdown: {\n    width: 150,\n    height: 100,\n    borderColor: BLACK,\n    borderWidth: 1,\n    borderRadius: 3,\n  },\n  dropdownNonpress: {\n    borderBottomWidth: 1,\n    borderBottomColor: GRAY,\n    padding: 5,\n    width: '40%',\n  },\n  dropdownText: {\n    fontSize: 18,\n    color: GRAY,\n    backgroundColor: DARKER_GRAY,\n    borderColor: BLACK,\n  },\n  dropdownTextHighlight: {\n    color: WHITE,\n  },\n  explanation: {\n    fontSize: 14,\n    color: GRAY,\n  },\n  textContainer: {\n    flexDirection: 'column',\n    justifyContent: 'space-between',\n    width: '60%',\n  },\n});\n","module.exports = __webpack_public_path__ + \"static/media/bg2.a5ed1007.jpg\";"],"sourceRoot":""}