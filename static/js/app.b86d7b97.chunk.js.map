{"version":3,"sources":["hooks/useError.tsx","components/utils/country-utils.ts","assets/styles/index.ts","components/card-components/CardItem.tsx","components/Settings.tsx","components/Filters.tsx","components/Login.tsx","components/card-components/CardItemRow.tsx","assets/images/logic.jpg","assets/images/odz.jpg","assets/images/metallica.jpg","assets/images/dio.jpg","assets/images/post.jpg","assets/images/skepta.jpg","assets/data/dummy_data_songs.ts","assets/data/dummy_data_profiles.ts","hooks/useSpotifyAuth.tsx","App.tsx","components/Icon.tsx","components/index.ts","components/card-components/CardProvider.tsx","hooks/useAutoExchange.tsx","hooks/useMounted.tsx","types.ts","screens/index.ts","screens/Explore.tsx","components/Message.tsx","components/ProfileItem.tsx","components/Playlists.tsx","assets/data/dummy_data_playlists.ts","components/card-components/Cards.tsx","components/card-components/CardStackHandler.tsx","assets/images/xxx.jpg","assets/images/travis.jpg","assets/images/banger.jpg","components/card-components/CardItemSmall.tsx","components/SettingItemSwitch.tsx","components/Error.tsx","screens/Liked.tsx","screens/Messages.tsx","assets/images/img01.jpeg","screens/Profile.tsx","screens/LoginPage.tsx","components/TabBarIcon.tsx","screens/Settings.tsx","components/SettingItemDropdown.tsx","hooks/utils/auth-utils.ts","assets/images/bg2.jpg"],"names":["useContext","ErrorContext","createContext","errorTexts","addErrorText","popErrorText","setErrorTexts","showComponent","setShowComponent","children","useState","Provider","value","text","newArray","concat","length","item","slice","console","log","locationWithFlag","getCounryCode","split","countryCode","countries","name","flagEmoji","getFlagEmoji","contryName","alpha2","codePoints","toUpperCase","map","char","charCodeAt","String","fromCodePoint","WHITE","GRAY","BLACK","DIMENSION_WIDTH","Dimensions","get","width","DIMENSION_HEIGHT","height","CARD_HEIGHT","StyleSheet","create","containerCardItem","backgroundColor","borderRadius","borderWidth","alignItems","margin","elevation","shadowOpacity","shadowRadius","shadowColor","shadowOffset","justifyContent","marginTop","marginLeft","imageStyle","containerCardItemWeb","padding","containerCardItemSmall","containerCardItemRow","flexDirection","playlistText","fontSize","color","matchesCardItem","paddingVertical","paddingHorizontal","matchesTextCardItem","exploreTopCenter","textAlign","exploreTopCenterText","marginHorizontal","exploreTopCenterTextActive","volumeSlider","display","descriptionCardItem","artist","artistText","fontWeight","releaseDate","reminderText","online","marginRight","offline","actionsCardItem","button","miniButton","smallImageStyle","playlistImage","smallNameStyle","trackStyle","flexWrap","flexShrink","settings","settingsText","filters","login","loginText","containerMessage","flex","avatar","marginVertical","message","paddingTop","containerProfileItem","paddingBottom","matchesProfileItem","alignSelf","matchesTextProfileItem","messageName","descriptionProfileItem","info","iconProfile","infoContent","playlistsTopRow","bg","resizeMode","position","top","title","containerHome","zIndex","containerPlaylists","borderTopLeftRadius","borderTopRightRadius","containerLiked","containerMessages","containerProfile","photo","topIconLeft","paddingLeft","topIconRight","paddingRight","actionsProfile","textButton","circledButton","roundedButton","tabButtonText","textTransform","iconMenu","errorContainer","borderBottomWidth","borderColor","testText","hasActions","image","popularity","track","index","id","SwipeCardContext","volume","updateVolume","rgb","setPressedTrack","setShowPlaylists","showType","swiper","allowVolumeControll","recommendedIndex","setRecommendedIndex","newReleasesIndex","setNewReleasesIndex","isPlaying","user","setIsPlaying","switchPlayingState","token","setVolume","userRecommendedTracks","recommendedTracks","newReleases","isLandscape","Platform","OS","landScapeWeb","styles","styleContainer","flexDir","style","source","size","minimumValue","maximumValue","step","minimumTrackTintColor","maximumTrackTintColor","thumbTintColor","onValueChange","onSlidingComplete","ERROR","onPress","swipeLeft","FLASH_ACTIONS","swipeBack","DISLIKE_ACTIONS","SPOTIFY_GREEN","swipeRight","useSpotifyContext","DARK_GRAY","redirectUri","promptAsync","setShowType","useFontAwesome","module","exports","match","album","IMAGE_LOGIC","IMAGE_XXX","IMAGE_SKEPTA","IMAGE_BANGER","IMAGE_ODZ","IMAGE_TRAVIS","IMAGE_METALLICA","location","IMAGE_DIO","IMAGE_POST","isOnline","description","age","IMAGE_01","IMAGE_02","IMAGE_03","IMAGE_04","IMAGE_05","IMAGE_06","IMAGE_07","infoPersonal","infoMusic","lastSeen","topTracks","topArtists","topGenres","IMAGE_08","IMAGE_09","IMAGE_10","SpotifyAuthContext","WebBrowser","maybeCompleteAuthSession","getRecommendedTracks","likeSong","queueAndSkip","likedSongs","getLikedSongs","getPlaylists","playlists","addTrackToPlaylist","getNewReleases","setDefaultPlaylist","availableMarkets","setChosenMarket","chosenMarket","setUser","setRecommendedTracks","userPlaylists","setUserPlaylists","setLikedSongs","setNewReleases","setTopGenres","setTopArtists","setTopTracks","setAvailableMarkets","defaultPlaylist","config","setConfig","setAllowVolumeControll","useAuthRequest","clientId","scopes","usePKCE","clientSecret","discovery","response","type","params","code","undefined","tokenExchangeError","r","Math","floor","random","market","axios","then","res","albumUris","data","albums","items","forEach","push","sort","albumUriString","join","releases","getLocation","randomInt","tracks","images","release_date","uri","catch","err","error","filter","playlist","owner","display_name","a","b","playlistId","trackId","post","markets","getCountryName","nameWithFlag","put","ids","meEndpoint","country","getTopUserItems","allArtists","allTracks","availableGenres","otherGenres","allGenres","genres","topTracksText","topArtistsText","i","recomendationEndpoint","genre","includes","randomIndex","selectedTrack","splice","selectedArtist","seedGenres","seedArtists","seedTracks","configRecommendations","seed_artists","seed_genres","seed_tracks","limit","queueSongAndSkip","both","reason","trackUri","playNextSong","device","DeviceType","COMPUTER","SMARTPHONE","warn","React","useEffect","headers","Authorization","accessToken","getPlaybackState","getUserData","getAvailibleMarkets","getUserRecommendedTracks","pause","play","Stack","createStackNavigator","Tab","createBottomTabNavigator","ErrorProvider","SpotifyAuthProvider","NavigationContainer","Error","Navigator","screenOptions","headerStyle","cardStyle","Screen","options","headerShown","animationEnabled","tabBarOptions","showLabel","activeTintColor","PRIMARY_COLOR","inactiveTintColor","labelStyle","borderTopWidth","marginBottom","component","Explore","tabBarIcon","focused","iconName","Liked","Settings","Profile","FontAwesome","Ionicons","setRGB","pressedTrack","showPlaylists","setSwiper","useReducer","state","action","currentState","setCurrentState","isMounted","useMounted","exchangeCodeAsync","current","exchangeError","useRef","Cards","Playlists","lastMessage","followerCount","SafeAreaView","swipeTop","url","dummyDataPlaylists","require","props","recommendedActiveStyle","newActiveStyle","_style","userTopItems","convertRGBgreen","d","convertRGBred","jumpToCardIndex","cards","renderCard","card","artists","useViewOverflow","onSwiped","cardIndex","onSwipedAborted","onSwipedAll","onSwipedRight","onSwiping","x","_y","ref","verticalSwipe","stackSize","swipeBackCard","infinite","DATA","matches","_cardIndex","container","trackColor","false","true","thumbColor","ios_backgroundColor","borderBottomColor","toRef","setTimeout","clearTimeout","BG_IMAGE","numColumns","keyExtractor","toString","renderItem","CardItemSmall","Icon","DEMO","Message","mockTopGenres","mockTopArtists","mockTopTracks","ProfileItem","followers","total","iconFocused","MockSettingItems","exampleBool","setExampleBool","header","explanation","defaultValue","SettingItemSwitch","webRedirectUri","mobileRedirectUri","SettingItems","onSelect","find","playlistName","getDefaultPlaylist","textContainer","dropdownNonpress","dropdownStyle","dropdown","dropdownTextHighlightStyle","dropdownTextHighlight","textStyle","showsVerticalScrollIndicator","dropdownTextStyle","dropdownText","_index","DARKER_GRAY","makeRedirectUri","scheme","path","authorizationEndpoint","tokenEndpoint"],"mappings":"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","file":"static/js/app.b86d7b97.chunk.js","sourcesContent":["import React, { createContext, useContext, useState } from 'react';\n\nconst ErrorContext: React.Context<{\n    errorTexts: string[];\n    addErrorText: (errorText: string) => void;\n    popErrorText: () => string | undefined;\n    setErrorTexts: any;\n    showComponent: boolean | null,\n    setShowComponent: any;\n}> = createContext({\n  errorTexts: [],\n  addErrorText: () => {},\n  popErrorText: () => {},\n  setErrorTexts: () => {},\n  showComponent: null,\n  setShowComponent: () => {},\n\n});\n\ninterface Props {\n    children: React.ReactNode\n  }\n\nexport const ErrorProvider: React.ReactNode = ({ children }: Props) => {\n  const [errorTexts, setErrorTexts] = useState<string[]>([]);\n  const [showComponent, setShowComponent] = useState(false);\n\n  function addErrorText(text: string) {\n    const newArray = errorTexts.concat(text);\n    setErrorTexts(newArray);\n  }\n\n  function popErrorText() {\n    // pop item from array\n    if (errorTexts.length > 0) {\n      const item = errorTexts[0];\n      const newArray = errorTexts.slice(1);\n      setErrorTexts(newArray);\n      return item;\n    }\n    console.log('Fatal: no items');\n  }\n\n  return (\n    <ErrorContext.Provider value={{\n      errorTexts,\n      addErrorText,\n      popErrorText,\n      showComponent,\n      setShowComponent,\n      setErrorTexts,\n    }}\n    >\n      {children}\n    </ErrorContext.Provider>\n  );\n};\n\nexport default function useError() {\n  return useContext(ErrorContext);\n}\n","import { countries } from 'country-data';\n\nexport function getCountryName(countryCode: string) {\n    const country = countries[countryCode].name;\n    return country;\n}\n  \nexport function getCounryCode(contryName: string) {\n    const countryCode = countries[contryName].alpha2;\n    return countryCode;\n}\n\nexport function getCounryCodeFromLocation(locationWithFlag: string) {\n    const countryName = locationWithFlag.split(' ')[0];\n    return getCounryCode(countryName);\n}\n\n\nexport function getFlagEmoji(countryCode: string) {\n    const codePoints = countryCode\n      .toUpperCase()\n      .split('')\n      .map((char) => 127397 + char.charCodeAt(0));\n    return String.fromCodePoint(...codePoints);\n  }\n\nexport function getLocation(countryCode: string) {\n    // get flag emoji\n    const flagEmoji = getFlagEmoji(countryCode);\n    // get country name\n    const country = countries[countryCode].name;\n    return `${country} ${flagEmoji}`;\n}\n\n","import { StyleSheet, Dimensions } from \"react-native\";\n\nexport const PRIMARY_COLOR = \"#7444C0\";\nexport const SECONDARY_COLOR = \"#5636B8\";\nexport const WHITE = \"#FFFFFF\";\nexport const GRAY = \"#757E90\";\nexport const DARK_GRAY = \"#363636\"; // rgb(54, 54, 54)\nexport const BLACK = \"#000000\";\nexport const DARKER_GRAY = \"#303030\";\nexport const SPOTIFY_GREEN = \"#1DB954\";\n\nexport const ONLINE_STATUS = \"#46A575\";\nexport const OFFLINE_STATUS = \"#D04949\";\n\nexport const STAR_ACTIONS = \"#FFA200\";\nexport const LIKE_ACTIONS = \"#B644B2\";\nexport const DISLIKE_ACTIONS = \"#363636\";\nexport const FLASH_ACTIONS = \"#5028D7\";\n\nexport const ERROR = \"#770707\";\n\nexport const DIMENSION_WIDTH = Dimensions.get(\"window\").width; // window not screen\nexport const DIMENSION_HEIGHT = Dimensions.get(\"window\").height;\n\n\nexport const CARD_HEIGHT = (DIMENSION_HEIGHT - 50) * 0.8;\n\nexport default StyleSheet.create({\n  // COMPONENT - CARD ITEM\n  containerCardItem: {\n    backgroundColor: DARK_GRAY,\n    borderRadius: 20,\n    borderWidth: 1,\n    //borderColor: SPOTIFY_GREEN,\n    height: CARD_HEIGHT,\n    alignItems: \"center\",\n    margin: 5,\n    elevation: 1,\n    shadowOpacity: 0.05,\n    shadowRadius: 10,\n    shadowColor: BLACK,\n    shadowOffset: { height: 0, width: 0 },\n    // center children\n    justifyContent: \"center\",\n    marginTop: -30,\n    marginLeft: -20,\n\n  },\n\n  imageStyle: {\n    borderRadius: 8,\n    width:  DIMENSION_WIDTH - 80,\n    height: CARD_HEIGHT / 2,\n    margin: 20,\n  },\n\n  containerCardItemWeb: {\n    width: DIMENSION_WIDTH - 40,\n    height: CARD_HEIGHT,\n    padding: 0,\n\n  },\n\n  containerCardItemSmall: {\n    backgroundColor: DARK_GRAY,\n    borderRadius: 8,\n    alignItems: \"center\",\n    margin: 10,\n    elevation: 1,\n    shadowOpacity: 0.05,\n    shadowRadius: 10,\n    shadowColor: BLACK,\n    shadowOffset: { height: 0, width: 0 },\n    width: (DIMENSION_WIDTH / 2) - 30,\n    // center children\n    justifyContent: \"center\",\n  },\n\n  containerCardItemRow: {\n    backgroundColor: DARK_GRAY,\n    borderRadius: 2,\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    margin: 10,\n    elevation: 1,\n    shadowOpacity: 0.05,\n    shadowRadius: 10,\n    shadowColor: BLACK,\n    shadowOffset: { height: 0, width: 0 },\n    width: DIMENSION_WIDTH - 30,\n  },\n  playlistText: {\n    fontSize: 30,\n    color: WHITE,\n    marginLeft: \"5%\"\n  },\n\n  matchesCardItem: {\n    marginTop: -35,\n    backgroundColor: PRIMARY_COLOR,\n    paddingVertical: 7,\n    paddingHorizontal: 20,\n    borderRadius: 20,\n  },\n  matchesTextCardItem: {\n    color: WHITE,\n  },\n\n  exploreTopCenter: {\n    textAlign: \"center\",\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n   },\n\n  exploreTopCenterText: {\n    color: GRAY,\n    fontSize: 15,\n    marginHorizontal: 10,\n  },\n\n  exploreTopCenterTextActive: {\n    color: WHITE,\n  },\n\n  volumeSlider: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  descriptionCardItem: {\n    color: GRAY,\n    textAlign: \"center\",\n  },\n  artist: {\n    alignItems: \"center\",\n    textAlign: \"center\",\n  },\n  artistText: {\n    color: GRAY,\n    fontSize: 20,\n    textAlign: \"center\",\n    fontWeight: \"bold\",\n  },\n\n  releaseDate: {\n    color: GRAY,\n    fontSize: 15,\n    textAlign: \"center\",\n  },\n\n  reminderText: {\n    color: GRAY,\n    fontSize: 15,\n    textAlign: \"center\",\n  },\n  online: {\n    width: 6,\n    height: 6,\n    backgroundColor: ONLINE_STATUS,\n    borderRadius: 3,\n    marginRight: 4,\n  },\n  offline: {\n    width: 6,\n    height: 6,\n    backgroundColor: OFFLINE_STATUS,\n    borderRadius: 3,\n    marginRight: 4,\n  },\n  actionsCardItem: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    paddingVertical: 5,\n  },\n  button: {\n    width: 60,\n    height: 60,\n    borderRadius: 30,\n    backgroundColor: WHITE,\n    marginHorizontal: 7,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    elevation: 1,\n    shadowOpacity: 0.15,\n    shadowRadius: 20,\n    shadowColor: DARK_GRAY,\n    shadowOffset: { height: 10, width: 0 },\n  },\n  miniButton: {\n    width: 45,\n    height: 45,\n    borderRadius: 30,\n    backgroundColor: WHITE,\n    marginHorizontal: 7,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    elevation: 1,\n    shadowOpacity: 0.15,\n    shadowRadius: 20,\n    shadowColor: DARK_GRAY,\n    shadowOffset: { height: 10, width: 0 },\n  },\n  // SMALL CARD (CARDITEMSMALL)\n  smallImageStyle: {\n      borderRadius: 8,\n      width: DIMENSION_WIDTH / 2 - 40 ,\n      height: 170 ,\n      margin: 0,\n      flexDirection: \"column\",\n  },\n  playlistImage: {\n    borderRadius: 2,\n    height:  120,\n    width: 120,\n    margin: 0,\n  },\n\n  smallNameStyle: {\n      color: WHITE,\n      fontSize: 15,\n      textAlign: \"center\",\n    },\n  // LARGE CARD (CARDITEM)\n  \n\n  trackStyle: {\n      color: WHITE,\n      width: \"100%\",\n      textAlign: \"center\",\n      flexWrap: 'wrap',\n      flexShrink: 1,\n      fontSize: 25,\n      fontWeight: \"bold\",\n  },\n\n  // COMPONENT - SETTINGS\n  settings: {\n    backgroundColor: WHITE,\n    padding: 10,\n    borderRadius: 20,\n    width: 40,\n    elevation: 1,\n    shadowOpacity: 0.05,\n    shadowRadius: 10,\n    shadowColor: BLACK,\n    shadowOffset: { height: 0, width: 0 },\n  },\n  settingsText: {\n    color: DARK_GRAY,\n    fontSize: 13,\n    textAlign: \"center\",\n  },\n\n  // COMPONENT - FILTERS\n  filters: {\n    backgroundColor: WHITE,\n    padding: 10,\n    borderRadius: 20,\n    width: 40,\n    elevation: 1,\n    shadowOpacity: 0.05,\n    shadowRadius: 10,\n    shadowColor: BLACK,\n    shadowOffset: { height: 0, width: 0 },\n    alignItems: \"center\",\n  },\n\n  login: {\n    backgroundColor: WHITE,\n    padding: 10,\n    borderRadius: 20,\n    width: 80,\n    elevation: 1,\n    shadowOpacity: 0.05,\n    shadowRadius: 10,\n    shadowColor: BLACK,\n    shadowOffset: { height: 0, width: 0 },\n  },\n\n  loginText: {\n    color: DARK_GRAY,\n    fontSize: 13,\n    textAlign: \"center\",\n  },\n\n  // COMPONENT - MESSAGE\n  containerMessage: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"flex-start\",\n    flexDirection: \"row\",\n    paddingHorizontal: 10,\n    width: DIMENSION_WIDTH - 100,\n  },\n  avatar: {\n    borderRadius: 30,\n    width: 60,\n    height: 60,\n    marginRight: 20,\n    marginVertical: 15,\n  },\n  message: {\n    color: GRAY,\n    fontSize: 12,\n    paddingTop: 5,\n  },\n\n  // COMPONENT - PROFILE ITEM\n  containerProfileItem: {\n    backgroundColor: \"#232323\",\n    paddingHorizontal: 10,\n    paddingBottom: 25,\n    margin: 20,\n    borderRadius: 8,\n    marginTop: -65,\n    elevation: 1,\n    shadowOpacity: 0.05,\n    shadowRadius: 10,\n    shadowColor: BLACK,\n    shadowOffset: { height: 0, width: 0 },\n  },\n  matchesProfileItem: {\n    width: 135,\n    marginTop: -15,\n    backgroundColor: PRIMARY_COLOR,\n    paddingVertical: 7,\n    paddingHorizontal: 20,\n    borderRadius: 20,\n    alignSelf: \"center\",\n  },\n  matchesTextProfileItem: {\n    color: WHITE,\n    textAlign: \"center\",\n  },\n  name: {\n    paddingTop: 25,\n    paddingBottom: 5,\n    color: WHITE,\n    fontSize: 15,\n    textAlign: \"center\",\n  },\n  messageName: {\n    paddingTop: 25,\n    paddingBottom: 5,\n    color: WHITE,\n    fontSize: 15,\n    textAlign: \"left\",\n  },\n  descriptionProfileItem: {\n    color: GRAY,\n    textAlign: \"center\",\n    paddingBottom: 20,\n    fontSize: 13,\n  },\n  info: {\n    paddingVertical: 8,\n    flexDirection: \"row\",\n    alignItems: \"center\",\n  },\n  iconProfile: {\n    fontSize: 12,\n    color: DARK_GRAY,\n    paddingHorizontal: 10,\n  },\n  infoContent: {\n    color: GRAY,\n    fontSize: 13,\n  },\n\n  playlistsTopRow: {\n    flexDirection: 'row', \n    width: '90%', \n    marginLeft: '5%', \n    marginRight: '5%', \n    // vertically align items center\n    alignItems: 'center',\n  },\n\n  // CONTAINER - GENERAL\n  bg: {\n    flex: 1,\n    resizeMode: \"cover\",\n    width: DIMENSION_WIDTH,\n    height: DIMENSION_HEIGHT,\n    position: \"absolute\",\n  },\n  top: {\n    paddingTop: 50,\n    marginHorizontal: 10,\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n  },\n  title: { \n    paddingBottom: 10, \n    fontSize: 22, \n    color: WHITE,\n    fontWeight: \"bold\",\n    textAlign: \"center\",\n    width: \"100%\",\n  },\n\n  // CONTAINER - HOME\n  containerHome: {\n    marginHorizontal: 10,\n    zIndex: 1,\n    elevation: 1,\n    //display: \"none\",\n  },\n\n  containerPlaylists: { \n    flex: 1, \n    backgroundColor: WHITE, \n    marginTop: 200 - CARD_HEIGHT, \n    borderTopLeftRadius: 20, \n    borderTopRightRadius: 20,\n    borderRadius: 6,\n    zIndex: 3,\n    elevation: 3,\n    },\n\n  // CONTAINER - MATCHES\n  containerLiked: {\n    justifyContent: \"space-between\",\n    flex: 1,\n    paddingHorizontal: 10,\n  },\n\n  // CONTAINER - MESSAGES\n  containerMessages: {\n    justifyContent: \"space-between\",\n    flex: 1,\n    paddingHorizontal: 10,\n  },\n\n  // CONTAINER - PROFILE\n  containerProfile: { marginHorizontal: 0 },\n  photo: {\n    width: DIMENSION_WIDTH,\n    height: 450,\n  },\n  topIconLeft: {\n    paddingLeft: 20,\n  },\n  topIconRight: {\n    paddingRight: 20,\n  },\n  actionsProfile: {\n    justifyContent: \"center\",\n    flexDirection: \"row\",\n    alignItems: \"center\",\n  },\n  textButton: {\n    fontSize: 15,\n    color: WHITE,\n    paddingLeft: 5,\n  },\n  circledButton: {\n    width: 50,\n    height: 50,\n    borderRadius: 25,\n    backgroundColor: PRIMARY_COLOR,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginRight: 10,\n  },\n  roundedButton: {\n    justifyContent: \"center\",\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    marginLeft: 10,\n    height: 50,\n    borderRadius: 25,\n    backgroundColor: SECONDARY_COLOR,\n    paddingHorizontal: 20,\n  },\n\n  // MENU\n  tabButtonText: {\n    textTransform: \"uppercase\",\n  },\n  iconMenu: {\n    alignItems: \"center\",\n  },\n  errorContainer: {\n    flex: 1, flexDirection: 'row', justifyContent: 'center', alignItems: 'center',\n    zIndex: 1,\n    elevation: 1,\n    height: 100,\n    position: \"absolute\",\n    backgroundColor: ERROR,\n    borderBottomWidth: 1,\n    borderColor: 'red',\n    width: '100%'\n  },\n  \n  testText: {\n    color: 'red',\n    fontSize: 15,\n    textAlign: 'center',\n    width: '100%'\n  },\n\n\n});\n","import React, { useContext } from 'react';\nimport {\n  Text, View, Image, TouchableOpacity, Platform,\n} from 'react-native';\nimport Slider from '@react-native-community/slider';\nimport Icon from '../Icon';\nimport { CardItemT, SwipedCardContextT } from '../../types';\n\nimport styles, {\n  DIMENSION_HEIGHT,\n  DIMENSION_WIDTH,\n  DISLIKE_ACTIONS,\n  ERROR,\n  FLASH_ACTIONS,\n  SPOTIFY_GREEN,\n  WHITE,\n} from '../../assets/styles';\nimport { SwipeCardContext } from './CardProvider';\nimport useSpotifyContext from '../../hooks/useSpotifyAuth';\n\nfunction CardItem({\n  hasActions,\n  image,\n  artist,\n  popularity,\n  track,\n  releaseDate,\n  id: index,\n\n}: CardItemT) {\n  const {\n    volume, updateVolume, rgb, setPressedTrack, setShowPlaylists, showType,\n    swiper, allowVolumeControll,\n    recommendedIndex,\n    setRecommendedIndex,\n    newReleasesIndex,\n    setNewReleasesIndex,\n  } = useContext(SwipeCardContext) as SwipedCardContextT;\n  const {\n    user,\n    isPlaying,\n    setIsPlaying,\n    switchPlayingState,\n    token,\n    setVolume,\n    recommendedTracks: userRecommendedTracks,\n    newReleases,\n    \n  } = useSpotifyContext();\n\n  if (track.length > 25) {\n    track = `${track.slice(0, 25)}...`;\n  }\n\n  const isLandscape = () => DIMENSION_WIDTH >= DIMENSION_HEIGHT && Platform.OS === 'web';\n\n  const landScapeWeb = isLandscape() ? styles.containerCardItemWeb : {};\n\n  const styleContainer = [styles.containerCardItem, { backgroundColor: rgb }, landScapeWeb];\n  const flexDir = isLandscape() ? 'row' : 'column';\n  return (\n    <View style={styleContainer}>\n      {/* IMAGE */}\n      <View style={{ flexDirection: flexDir }}>\n        <Image source={image} style={styles.imageStyle} />\n      </View>\n      <View style={styles.matchesCardItem}>\n        <Text style={styles.matchesTextCardItem}>\n          <Icon name=\"heart\" color={WHITE} size={13} />\n          {' '}\n          {popularity || '0'}\n          % Popularity\n        </Text>\n      </View>\n\n      {/* NAME */}\n\n      <Text style={styles.trackStyle}>{track}</Text>\n\n      <View style={styles.artist}>\n        <Text style={styles.artistText}>{artist}</Text>\n        {releaseDate && (\n          <Text style={styles.releaseDate}>{releaseDate}</Text>\n        )}\n      </View>\n      <View style={{ flexDirection: flexDir }}>\n        {allowVolumeControll && (\n        <View style={styles.volumeSlider}>\n          <Icon name=\"md-volume-low\" color={WHITE} size={20} />\n          <Slider\n            style={{ width: 200, height: 10 }}\n            minimumValue={0}\n            maximumValue={100}\n            step={1}\n            minimumTrackTintColor=\"#FFFFFF\"\n            maximumTrackTintColor=\"#000000\"\n            thumbTintColor=\"#FFFFFF\"\n            value={volume}\n            onValueChange={(value: number) => {\n              updateVolume(value);\n            // Cant set volume here due to exceeding API rate limit\n            }}\n            onSlidingComplete={(value: number) => {\n              if (token) {\n                setVolume(value);\n              }\n            }}\n          />\n          <Icon name=\"md-volume-high\" color={WHITE} size={20} />\n        </View>\n        )}\n\n        {/* ACTIONS */}\n        {hasActions && (\n        <View style={styles.actionsCardItem}>\n\n          <TouchableOpacity style={styles.miniButton}>\n            <Icon\n              name=\"close\"\n              color={ERROR}\n              size={20}\n              onPress={() => {\n                swiper?.swipeLeft();\n              }}\n\n            />\n          </TouchableOpacity>\n          <TouchableOpacity style={styles.miniButton}>\n            <Icon\n              name=\"reload\"            \n              color={FLASH_ACTIONS}\n              size={20}\n              onPress={() => {\n                swiper?.swipeBack();\n                setRecommendedIndex(recommendedIndex - 2);\n                setNewReleasesIndex(newReleasesIndex - 2);\n              }}\n\n            />\n          </TouchableOpacity>\n\n          <TouchableOpacity style={styles.button}>\n            {isPlaying\n              ? (\n                <Icon\n                  name=\"pause\"\n                  color={DISLIKE_ACTIONS}\n                  size={30}\n                  onPress={() => {\n                    if (token) { // user is logged in\n                      switchPlayingState();\n                    } else { // user is not logged in switch icon for mock page\n                      setIsPlaying(!isPlaying);\n                    }\n                  }}\n                />\n              )\n              : (\n                <Icon\n                  name=\"play\"\n                  color={DISLIKE_ACTIONS}\n                  size={30}\n                  onPress={() => {\n                    if (token) {\n                      switchPlayingState();\n                    } else { // user is not logged in switch icon for mock page\n                      setIsPlaying(!isPlaying);\n                    }\n                  }}\n                />\n              )}\n\n          </TouchableOpacity>\n          <TouchableOpacity style={styles.miniButton}>\n            <Icon\n              name=\"add\"\n              color={FLASH_ACTIONS}\n              size={20}\n              onPress={() => {\n                if (token) {\n                  if (showType === 'recommended') {\n                    setPressedTrack(userRecommendedTracks[index]);\n                  } else if (showType === 'new') {\n                    setPressedTrack(newReleases[index]);\n                  } else {\n                    console.log('invalid showType');\n                  }\n                }\n\n                setShowPlaylists(true);\n              }}\n            />\n\n          </TouchableOpacity>\n          <TouchableOpacity style={styles.miniButton}>\n            <Icon\n              name=\"checkmark\"\n              color={SPOTIFY_GREEN}\n              size={20}\n              onPress={() => {\n                swiper?.swipeRight();\n              }}\n\n            />\n          </TouchableOpacity>\n\n        </View>\n        )}\n      </View>\n      <View style={{ flexDirection: flexDir }}>\n          <Text style={[styles.reminderText, { fontSize: 15 }]}>\n            You need to have the spotify app active to use this application.\n            Try playing and pausing your current song, and make sure your queue is empty.\n          </Text>\n      </View>\n    </View>\n  );\n}\n\nexport default CardItem;\n","import React from 'react';\nimport { Text, TouchableOpacity } from 'react-native';\nimport Icon from './Icon';\nimport styles, { DARK_GRAY } from '../assets/styles';\nimport useSpotifyContext from '../hooks/useSpotifyAuth';\n\nfunction Settings() {\n  const { token } = useSpotifyContext();\n\n  return (\n    <TouchableOpacity style={styles.settings}>\n      <Text style={styles.settingsText}>\n        <Icon name=\"settings-sharp\" size={15} color={DARK_GRAY} onPress={() => console.log(token)} />\n      </Text>\n      {/* console.log(response) */}\n    </TouchableOpacity>\n  );\n}\n\nexport default Settings;\n","import React from 'react';\nimport { TouchableOpacity } from 'react-native';\nimport Icon from './Icon';\nimport styles, { DARK_GRAY } from '../assets/styles';\nimport useSpotifyContext from '../hooks/useSpotifyAuth';\nimport { redirectUri } from '../hooks/utils/auth-utils';\n\nfunction Filters() {\n  const { newReleases } = useSpotifyContext();\n  return (\n    <TouchableOpacity style={styles.filters}>\n      <Icon name=\"options\" size={15} color={DARK_GRAY} onPress={() => console.log(redirectUri)} />\n    </TouchableOpacity>\n  );\n}\n\nexport default Filters;\n","import React, { useContext } from 'react';\nimport { Text, TouchableOpacity, View } from 'react-native';\nimport Icon from './Icon';\nimport styles, { DARK_GRAY } from '../assets/styles';\nimport useSpotifyContext from '../hooks/useSpotifyAuth';\nimport { SwipeCardContext } from './card-components/CardProvider';\nimport { SwipedCardContextT } from '../types';\n\nfunction Login() {\n  const { promptAsync } = useSpotifyContext();\n  const { setShowType } = useContext(SwipeCardContext) as SwipedCardContextT;\n\n  async function awaitPromptAsync() {\n    setShowType('recommended');\n    await promptAsync();\n  }\n\n  return (\n    <View style={{ flexDirection: 'row' }}>\n      <TouchableOpacity style={styles.login} onPress={awaitPromptAsync}>\n        <Text style={styles.loginText}>\n          <Icon name=\"spotify\" size={13} color={DARK_GRAY} useFontAwesome />\n          {' Login'}\n        </Text>\n      </TouchableOpacity>\n\n      {/* <TouchableOpacity style={styles.login} onPress={awaitPromptAsync}>\n        <Text style={styles.loginText}>\n          <Icon name=\"soundcloud\" size={13} color={DARK_GRAY} useFontAwesome />\n          {' Login'}\n        </Text>\n      </TouchableOpacity> */}\n    </View>\n  );\n}\n\nexport default Login;\n","import React from 'react';\nimport { Text, View, Image } from 'react-native';\nimport { CardItemRowT } from '../../types';\n\nimport styles from '../../assets/styles';\n\nfunction CardItemRow({\n  image,\n  name,\n}: CardItemRowT) {\n  return (\n    <View style={styles.containerCardItemRow}>\n      {/* IMAGE */}\n      <Image source={image} style={styles.playlistImage} />\n      {/* NAME */}\n      <Text style={styles.playlistText}>{name}</Text>\n    </View>\n  );\n}\n\nexport default CardItemRow;\n","module.exports = __webpack_public_path__ + \"static/media/logic.e98d400e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/odz.a48909a6.jpg\";","module.exports = __webpack_public_path__ + \"static/media/metallica.3bad5394.jpg\";","module.exports = __webpack_public_path__ + \"static/media/dio.6a2fb57d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/post.61b3850d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/skepta.f0f62bb2.jpg\";","import { DataSong } from \"../../types\";\nimport IMAGE_LOGIC from \"../images/logic.jpg\";\nimport IMAGE_XXX from \"../images/xxx.jpg\";\nimport IMAGE_SKEPTA from \"../images/skepta.jpg\";\nimport IMAGE_ODZ from \"../images/odz.jpg\";\nimport IMAGE_DIO from \"../images/dio.jpg\";\nimport IMAGE_POST from \"../images/post.jpg\";\nimport IMAGE_METALLICA from \"../images/metallica.jpg\";\n//import IMAGE_TYLER from  \".../images/tyler.jpg\";\nimport IMAGE_TRAVIS from \"../images/travis.jpg\";\nimport IMAGE_BANGER from \"../images/banger.jpg\";\n\n\nconst data: DataSong[] = [\n  {\n    id: 1,\n    track: \"The Return\",\n    match: \"78\",\n    artist: \"Logic\",\n    album: \"The Return\",\n    image: IMAGE_LOGIC,\n\n  },\n  {\n    id: 2,\n    track: \"SAD!\",\n    match: \"93\",\n    artist: \"XXXTentacion\",\n    album: \"?\",\n    image: IMAGE_XXX,\n  },\n  {\n    id: 3,\n    track: \"Bullet From A Gun\",\n    match: \"45\",\n    artist: \"skepta\",\n    album: \"Ignorance is bliss\",\n    image: IMAGE_SKEPTA,\n  },\n  {\n    id: 4,\n    track: \"Summer of Our Lives\",\n    match: \"88\",\n    artist: \"waykap, Emmi\",\n    album: \"Summer of Our Lives\",\n    image: IMAGE_BANGER,\n  },\n  {\n    id: 5,\n    track: \"Ostron\",\n    match: \"76\",\n    artist: \"Frej Larsson, ODZ, Canto\",\n    album: \"Bland streckgubbar och linjemän\",\n    image: IMAGE_ODZ,\n  },\n  {\n    id: 6,\n    track: \"SICKO MODE\",\n    match: \"95\",\n    artist: \"Travis Scott\",\n    album: \"ASTROWORLD\",\n    image: IMAGE_TRAVIS,\n  },\n  {\n    id: 7,\n    track: \"ONE\",\n    match: \"67\",\n    artist: \"Metallica\",\n    album: \"...And Justice for None\",\n    image: IMAGE_METALLICA,\n  },\n  {\n    id: 8,\n    track: \"Holy Diver\",\n    match: \"85\",\n    artist: \"Dio\",\n    location: \"Irvine, CA\",\n    album: \"Holy Diver\",\n    image: IMAGE_DIO,\n  },\n  {\n    id: 9,\n    track: \"EARFQUACK\",\n    match: \"74\",\n    artist: \"Tyler, The Creator\",\n    album: \"IGOR\",\n    image: IMAGE_DIO,\n  },\n  {\n    id: 10,\n    track: \"Congratulations\",\n    match: \"98\",\n    artist: \"Post Malone\",\n    album: \"Stoney\",\n    image: IMAGE_POST,\n  },\n];\n\nexport default data;\n","import { DataProfile } from \"../../types\";\nimport IMAGE_01 from \"../images/img01.jpeg\";\nimport IMAGE_02 from \"../images/img01.jpeg\";\nimport IMAGE_03 from \"../images/img01.jpeg\";\nimport IMAGE_04 from \"../images/img01.jpeg\";\nimport IMAGE_05 from \"../images/img01.jpeg\";\nimport IMAGE_06 from \"../images/img01.jpeg\";\nimport IMAGE_07 from \"../images/img01.jpeg\";\nimport IMAGE_08 from \"../images/img01.jpeg\";\nimport IMAGE_09 from \"../images/img01.jpeg\";\nimport IMAGE_10 from \"../images/img01.jpeg\";\n\nconst data: DataProfile[] = [\n  {\n    id: 1,\n    name: \"Fredrik Juvet\",\n    isOnline: true,\n    match: \"78\",\n    description: \"Indek Grindset\",\n    message: \"Forza Ferrari, Grande Machina, The Witcher 3, Bella Ciao\",\n    age: \"19\",\n    image: IMAGE_01,\n  },\n  {\n    id: 2,\n    name: \"Tom Rehnström\",\n    match: \"93\",\n    description: \"I am a Huge F1 fan\",\n    isOnline: true,\n    message: \"Wassup, I'm Fredrik, I'm a software developer, and I'm looking for a job.\",\n    image: IMAGE_02,\n  },\n  {\n    id: 3,\n    name: \"Isac Hassle\",\n    match: \"45\",\n    description: \"Part time Singer/Dancer.\",\n    isOnline: false,\n    message: \"Oh, hee-hee, aha. Ha, ooh, hee, ha-ha, ha-ha. And I thought my jokes were bad.\",\n    image: IMAGE_03,\n  },\n  {\n    id: 4,\n    name: \"Alexander Holmberg\",\n    match: \"88\",\n    description: \"Crypto Guru and HV71 fan\",\n    isOnline: true,\n    message: \"Crypto is up Today! Did you see Alice in Wonderland?, At least I think I did.\",\n    image: IMAGE_04,\n  },\n  {\n    id: 5,\n    name: \"Marcus Bardvall\",\n    match: \"76\",\n    description: \"It's not who I am underneath but what I do that defines me.\",\n    isOnline: false,\n    message: \"Buy my stupid NFTs\",\n    image: IMAGE_05,\n  },\n  {\n    id: 6,\n    name: \"Max Claesson\",\n    match: \"95\",\n    description: \"Guitar player, Hair like a Golden Retriever\",\n    isOnline: true,\n    message: \"I just ate two entire pizzas. I'm not sure if I'm hungry or if I'm just really, really hungry.\",\n    image: IMAGE_06,\n  },\n  {\n    id: 7,\n    name: \"Lisa Kvist\",\n    match: \"67\",\n    description:\n      \"Fulvinia, a.k.a. The Queen of the Night, a Swedish-American singer, songwriter, and actress.\",\n    isOnline: true,\n    message:\n      \"Coffee, tea, and cake. I'm not sure what else to put here.\",\n    image: IMAGE_07,\n  },\n  {\n    id: 8,\n    name: \"Olle Jernström\",\n    match: \"85\",\n    description: \"Music lover. Globe Trotter. Occasional Photographer.\",\n    age: \"19\",\n    location: \"Stockholm, Sweden\",\n    infoPersonal: 'Loves programming',\n    infoMusic: \"Loves Rock, Pop and Hiphop/Rap\",\n    lastSeen: \"Last seen: 23h ago\",\n    isOnline: true,\n    topTracks: \"Track 1, Track 2, Track 3, Track 4, Track 5\",\n    topArtists: \"Artist 1, Artist 2, Artist 3, Artist 4, Artist 5\",\n    topGenres: \"Genre 1, Genre 2, Genre 3, Genre 4, Genre 5\",\n    message:\n      \"And as for the television's so-called plan, Batman has no jurisdiction.\",\n    image: IMAGE_08,\n  },\n  {\n    id: 9,\n    name: \"Marina Bremmander\",\n    match: \"74\",\n    description:\n      \"Swedish Rapper with the artist name MarreB\",\n    isOnline: true,\n    message: \"Rap music is love\",\n    image: IMAGE_09,\n  },\n  {\n    id: 10,\n    name: \"Pepsi Man\",\n    match: \"98\",\n    description:\n      \"Pepsi da number one\",\n    isOnline: false,\n    message:\n      \"You want order in Gotham. Batman must stop drinking coke.\",\n    image: IMAGE_10,\n  },\n];\n\nexport default data;\n","import React, { createContext, useContext, useState } from 'react';\nimport { useAuthRequest } from 'expo-auth-session';\nimport * as WebBrowser from 'expo-web-browser';\nimport { CLIENT_ID, CLIENT_SECRET } from '@env';\nimport axios from 'axios';\nimport useAutoExchange from './useAutoExchange';\nimport { discovery, redirectUri, meEndpoint, recomendationEndpoint } from './utils/auth-utils';\nimport useError from './useError';\nimport { getCountryName, getLocation } from '../components/utils/country-utils';\nimport { DeviceType } from '../types';\n\nWebBrowser.maybeCompleteAuthSession();\n\nconst SpotifyAuthContext: React.Context<{\n  promptAsync: any\n  token: any,\n  user: any,\n  recommendedTracks: any,\n  getUserRecommendedTracks: any,\n  likeSong: any,\n  info: any,\n  queueAndSkip: any,\n  isPlaying: any,\n  setIsPlaying: any,\n  switchPlayingState: any,\n  setVolume: any,\n  likedSongs: any,\n  getLikedSongs: any,\n  getPlaylists: any,\n  playlists: any,\n  addTrackToPlaylist: any,\n  newReleases: any,\n  getNewReleases: any,\n  topGenres: string,\n  topArtists: string,\n  topTracks: string,\n  setDefaultPlaylist: any,\n  availableMarkets: any,\n  setChosenMarket: any,\n  chosenMarket: any,\n  allowVolumeControll: any,\n\n}> = createContext({\n  promptAsync: null,\n  token: null,\n  user: null,\n  recommendedTracks: null,\n  getRecommendedTracks: null,\n  likeSong: null,\n  info: null,\n  queueAndSkip: null,\n  isPlaying: null,\n  setIsPlaying: null,\n  switchPlayingState: null,\n  setVolume: null,\n  likedSongs: null,\n  getLikedSongs: null,\n  getPlaylists: null,\n  playlists: null,\n  addTrackToPlaylist: null,\n  newReleases: null,\n  getNewReleases: null,\n  topGenres: '',\n  topArtists: '',\n  topTracks: '',\n  setDefaultPlaylist: null,\n  availableMarkets: null,\n  setChosenMarket: null,\n  chosenMarket: null,\n  allowVolumeControll: true,\n});\n\nWebBrowser.maybeCompleteAuthSession();\n\ninterface Props {\n  children: React.ReactNode\n}\n\nexport const SpotifyAuthProvider: React.ReactNode = ({ children }: Props) => {\n  const [user, setUser] = useState(null);\n  const [recommendedTracks, setRecommendedTracks] = useState([]);\n  const [userPlaylists, setUserPlaylists] = useState(null);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [likedSongs, setLikedSongs] = useState(null);\n  const [newReleases, setNewReleases] = useState<any[] | null>(null);\n  const [topGenres, setTopGenres] = useState<string>('Genre 1, Genre 2, Genre 3');\n  const [topArtists, setTopArtists] = useState<string>('Artist 1, Artist 2, Artist 3');\n  const [topTracks, setTopTracks] = useState<string>('Track 1, Track 2, Track 3');\n  const [availableMarkets, setAvailableMarkets] = useState(null);\n  const [chosenMarket, setChosenMarket] = useState<string | null>(null);\n  const likeSongString = 'Liked songs';\n  const [defaultPlaylist, setDefaultPlaylist] = useState<string>(likeSongString); // Either equal to liked songs or a playlist uri\n  const [config, setConfig] = useState<any>(null);\n  const [allowVolumeControll, setAllowVolumeControll] = useState<boolean>(true);\n\n  // Error handling\n  const { addErrorText } = useError();\n  const [request, response, promptAsync] = useAuthRequest({\n    clientId: CLIENT_ID,\n    scopes: ['user-read-email', 'user-read-private', 'user-top-read', 'user-library-read',\n      'user-library-modify', 'playlist-read-private', 'playlist-read-collaborative',\n      'user-read-playback-state', 'user-modify-playback-state',\n      'app-remote-control', 'playlist-modify-private', 'playlist-modify-public',\n    ],\n    /*\n      In order to follow the 'Authorization Code Flow',\n      to fetch token after authorizationEndpoint,\n      this must be set to false\n    */\n    usePKCE: false,\n    redirectUri,\n    clientSecret: CLIENT_SECRET,\n  }, discovery);\n\n  const songCount = 20; // has to be 20 due to /albums/{ids} can only have 20 ids\n\n  // Token will be auto exchanged after auth completes.\n  const { token, tokenExchangeError: exchangeError } = useAutoExchange(\n    response?.type === 'success' ? response.params.code : undefined,\n  );\n\n  async function getNewReleases() {\n    const r = Math.floor(Math.random() * 100);\n    const market = chosenMarket || 'US';\n    await axios.get(`https://api.spotify.com/v1/browse/new-releases?limit=${songCount}&country=${chosenMarket}&offset${r}`, config)\n      .then((res) => {\n        const albumUris: string[] = [];\n        res.data.albums.items.forEach((item: any) => {\n          albumUris.push(item.id);\n        });\n        albumUris.sort(() => 0.5 - Math.random());\n        const reducedAlbumUris = albumUris.slice(0, 20);\n\n        const albumUriString = reducedAlbumUris.join();\n        const releases: any[] = [];\n        axios.get(`https://api.spotify.com/v1/albums?ids=${albumUriString}`, config)\n          .then((res) => {\n            console.log('New releases in', getLocation(market), res.data);\n            res.data.albums.forEach((album: any) => {\n              const randomInt = Math.floor(Math.random() * album.tracks.items.length);\n              const item = album.tracks.items[randomInt];\n              item.images = album.images;\n              item.releaseDate = album.release_date;\n              item.id = album.tracks.items[randomInt].uri.split(':')[2]; // WATNING SHAKY\n              releases.push(item);\n            });\n            releases.sort(() => Math.random() - 0.5);\n\n            setNewReleases(releases);\n          })\n          .catch((err) => {\n            console.log(err);\n            addErrorText(err.response.data.error.message);\n          });\n      })\n      .catch((err) => {\n        console.log(err);\n        addErrorText(err.response.data.error.message);\n      });\n  }\n\n  async function getPlaylists() {\n    await axios.get(`https://api.spotify.com/v1/me/playlists?limit=${50}`, config)\n      .then((res) => {\n        // Todo improve this to filter on user id aswell\n        const playlists = res.data.items.filter((playlist: any) => playlist.owner.display_name !== 'Spotify');\n\n        playlists.sort((a: any, b: any) => {\n          if (a.name < b.name) {\n            return -1;\n          }\n          if (a.name > b.name) {\n            return 1;\n          }\n          return 0;\n        });\n        // console.log('Playlists: ', playlists);\n        setUserPlaylists(playlists);\n      })\n      .catch((err) => {\n        console.log('Error Playlist: ', err);\n        addErrorText(err.response.data.error.message);\n      });\n  }\n\n  async function addTrackToPlaylist(playlistId: string, trackId: string) {\n    // console.log('OOO', accessToken, playlistId, trackId);\n    // If this is set to .put instead of .post it will erase the whole playlist\n    // Soooo... dont do that\n    await axios.post(`https://api.spotify.com/v1/playlists/${playlistId}/tracks?uris=${trackId}`, {}, config)\n      .then((res) => {\n        console.log('Added track to playlist: ', res.data);\n      })\n      .catch((err) => {\n        console.log('Error adding track to playlist: ', err);\n        addErrorText(err.response.data.error.message);\n      });\n  }\n\n  async function getAvailibleMarkets() {\n    await axios.get('https://api.spotify.com/v1/markets', config)\n      .then((res) => {\n        const countryCodes = res.data.markets;\n        // map each country code to its country name\n        let countries = countryCodes.map((countryCode: string) => ({\n          code: countryCode,\n          name: getCountryName(countryCode),\n          nameWithFlag: getLocation(countryCode),\n        }));\n        // sort countries alphabetically\n        countries = countries.sort((a: {code: string, name: string}, b: {code: string, name: string}) => {\n          if (a.name < b.name) {\n            return -1;\n          }\n          return 1;\n        });\n        setAvailableMarkets(countries);\n      })\n      .catch((err) => {\n        console.log('Error getting availible markets: ', err);\n        addErrorText(err.response.data.error.message);\n      });\n  }\n\n  async function playerInfo() {\n    // config\n    if (token) {\n      await axios.get('https://api.spotify.com/v1/me/player/devices', config)\n        .then((res) => {\n          // console.log('Device:', res);\n        }).catch((err) => {\n          console.log('Device Error:', err);\n          addErrorText(err.response.data.error.message);\n        });\n    }\n  }\n\n  async function likeSong(trackId: string) {\n    // config\n    console.log(defaultPlaylist, likeSongString, defaultPlaylist === likeSongString);\n    if (defaultPlaylist === likeSongString) {\n      await axios.put(\n        'https://api.spotify.com/v1/me/tracks',\n        // send trackid as \"ids\" parameter\n        { ids: [trackId] },\n        config,\n      ).then((res) => {\n        // console.log('Saved track to user library');\n        getLikedSongs();\n      }).catch((err) => {\n        console.log(err);\n        addErrorText(err.response.data.error.message);\n      });\n    } else {\n      console.log(defaultPlaylist, trackId);\n      const trackUri = `spotify:track:${trackId}`;\n      addTrackToPlaylist(defaultPlaylist, trackUri);\n    }\n  }\n\n  async function getUserData() {\n    return axios.get(meEndpoint, config)\n      .then((res) => {\n        console.log('User data: ', res.data);\n        setUser(res.data);\n        setChosenMarket(res.data.country);\n      })\n      .catch((err) => {\n        addErrorText(err.response.data.error.message);\n        console.log('E1: ', err);\n      });\n  }\n\n  async function getTopUserItems() {\n    const allArtists: any = [];\n    const allTracks: any = [];\n    const availableGenres: any = [];\n    const otherGenres: any = [];\n    const allGenres: any = [];\n    const genres: any = [];\n    const artist: any = [];\n    const tracks: any = [];\n\n    const topTracksText: any = [];\n    const topArtistsText: any = [];\n\n    const count = 5;\n\n    await axios.get(`${meEndpoint}/top/tracks`, config)\n      .then((res) => {\n        // setUserTopItems(res.data);\n        for (let i = 0; i < res.data.items.length; i += 1) {\n          allTracks.push(res.data.items[i].id);\n          topTracksText.push(res.data.items[i].name);\n        }\n      })\n      .catch((err) => {\n        console.log('E2: ', err); addErrorText(err.response.data.error.message);\n      });\n\n    await axios.get(`${recomendationEndpoint}/available-genre-seeds`, config)\n      .then((res: any) => {\n        // loop over the genres and add them to the available genres\n        res.data.genres.forEach((genre: any) => {\n          availableGenres.push(genre);\n        });\n      })\n      .catch((err) => {\n        console.log('E3: ', err); addErrorText(err.response.data.error.message);\n      });\n\n    await axios.get(`${meEndpoint}/top/artists`, config)\n      .then((res) => {\n        for (let i = 0; i < res.data.items.length; i += 1) {\n          allArtists.push(res.data.items[i].id);\n          topArtistsText.push(res.data.items[i].name);\n        }\n        res.data.items.forEach((item: any) => {\n        // loop over the genres and push them to genres\n          for (let i = 0; i < item.genres.length; i += 1) {\n            const genre = item.genres[i];\n            if (availableGenres.includes(genre) && !allGenres.includes(genre)) {\n              allGenres.push(genre);\n            } else {\n              otherGenres.push(genre);\n            }\n          }\n        });\n      })\n      .catch((err) => {\n        console.log('E: ', err); addErrorText(err.response.data.error.message);\n      });\n\n    // Get 1 random items in allGenres and place them in genres\n    for (let i = 0; i < 1; i += 1) {\n      const randomIndex = Math.floor(Math.random() * allGenres.length);\n      genres.push(allGenres[randomIndex]);\n    }\n\n    // Get two random items from allTracks and place them in tracks\n    for (let i = 0; i < 2; i += 1) {\n      if (allTracks.length !== 0) {\n        const random = Math.floor(Math.random() * allTracks.length);\n        const selectedTrack = allTracks[random];\n        tracks.push(selectedTrack);\n        allTracks.splice(random, 1); // remove selectedTrack from allTracks\n      }\n    }\n\n    // Get two random items from allArtists and place them in artists\n    for (let i = 0; i < 2; i += 1) {\n      if (allArtists.length !== 0) {\n        const random = Math.floor(Math.random() * allArtists.length);\n        const selectedArtist = allArtists[random];\n        artist.push(selectedArtist);\n        allArtists.splice(random, 1); // remove selectedArtist from allArtists\n      }\n    }\n\n    // WARNING: the length of seed genres + seed artists + seed tracks <= 5 (MAX 5)\n    const seedGenres = genres[0];\n    const seedArtists = allArtists[1] ? `${allArtists[0]},${allArtists[1]}` : '';\n    const seedTracks = allTracks[1] ? `${allTracks[0]},${allTracks[1]}` : '';\n\n    // Copy the config add modyfy it.\n    // setting config2 = config and updating config2 also updates config\n    const configRecommendations = { ...config };\n    configRecommendations.params = {\n      seed_artists: seedArtists,\n      seed_genres: seedGenres,\n      seed_tracks: seedTracks,\n      limit: songCount,\n    };\n\n    await axios.get(recomendationEndpoint, configRecommendations)\n      .then((res) => {\n        // console.log('Recomendations: ', res.data);\n        const { tracks } = res.data;\n        setRecommendedTracks(tracks);\n        const firstTrackUri = tracks[0].uri;\n        queueSongAndSkip(firstTrackUri);\n        console.log(tracks[0].name);\n      })\n      .catch((res) => console.log('Erec: ', res));\n\n    if (recommendedTracks.length === 0) {\n      const n = 10;\n      topArtistsText.sort(() => 0.5 - Math.random());\n      topTracksText.sort(() => 0.5 - Math.random());\n      const both = allGenres.concat(otherGenres);\n      both.sort(() => 0.5 - Math.random());\n      setTopArtists(topArtistsText.slice(0, n).sort().join(', '));\n      setTopTracks(topTracksText.slice(0, n).sort().join(', '));\n      setTopGenres(both.slice(0, n).sort().join(', '));\n    }\n  }\n\n  async function getLikedSongs() {\n    await axios.get(`${meEndpoint}/tracks`, config)\n      .then((res) => {\n        const tracks = res.data.items;\n        setLikedSongs(tracks);\n      })\n      .catch((err) => {\n        console.log('Error getting liked songs: ', err);\n        addErrorText(err.response.data.error.message);\n      });\n  }\n\n  async function pause() {\n    await axios.put('https://api.spotify.com/v1/me/player/pause', null, config)\n      .then((res) => {\n        // console.log('Paused');\n        setIsPlaying(false);\n      })\n      .catch((err) => {\n        addErrorText(err.response.data.error.message);\n        console.log('Error Pausing: ', err);\n      });\n  }\n\n  async function setVolume(volume: number) {\n    await axios.put(`https://api.spotify.com/v1/me/player/volume?volume_percent=${volume}`, null, config)\n      .then((res) => {\n        console.log('Volume Set to: ', volume);\n      })\n      .catch((err) => {\n        console.log('Error Setting Volume: ', err);\n        const { message } = err.response.data.error;\n        const { reason } = err.response.data.error;\n        addErrorText(`${message}. ${reason}`);\n      });\n  }\n\n  async function play() {\n    await axios.put('https://api.spotify.com/v1/me/player/play', null, config)\n      .then((res) => {\n        // console.log('Playing');\n        setIsPlaying(true);\n      })\n      .catch((err) => {\n        console.log('Error Playing: ', err); addErrorText(err.response.data.error.message);\n      });\n  }\n\n  async function queueSongAndSkip(trackUri: string) {\n    // TODO: Figure out how to send the query nicely with axios\n    axios.post(\n      `https://api.spotify.com/v1/me/player/queue?uri=${trackUri}`,\n      {},\n      config,\n    ).then(() => {\n      playNextSong();\n    }).catch((err) => {\n      console.log('Error Queue: ', err);\n      addErrorText(err.response.data.error.message);\n    });\n  }\n\n  async function playNextSong() {\n    axios.post(\n      'https://api.spotify.com/v1/me/player/next',\n      {},\n      config,\n    ).catch((err) => { console.log('Error Next: ', err); addErrorText(err.response.data.error.message); });\n    setIsPlaying(true);\n  }\n\n  function switchPlayingState() {\n    if (isPlaying) {\n      pause();\n    } else {\n      play();\n    }\n  }\n\n  async function getPlaybackState() {\n    await axios.get('https://api.spotify.com/v1/me/player', config)\n      .then((res) => {\n         if (res.data !== \"\") {\n          if (res.data.device.type === DeviceType.COMPUTER) {\n            setAllowVolumeControll(true);\n            setVolume(50);\n          } else if (res.data.device.type === DeviceType.SMARTPHONE) {\n            setAllowVolumeControll(false);\n          } else {\n            console.warn(`Could not match device type: ${res.data.device.type}`);\n            setAllowVolumeControll(false);\n          }\n        }\n      })\n      .catch((err) => {\n        console.log('Error getting playback state: ', err);\n        addErrorText(err.response.data.error.message);\n      });\n  }\n\n  React.useEffect(() => {\n    if (token) {\n      const config = {\n        headers: {\n          Authorization: `Bearer ${token.accessToken}`,\n        },\n      };\n      setConfig(config);\n    }\n  }, [token]);\n\n  React.useEffect(() => {\n    if (config && token) {\n      getPlaybackState();\n      getUserData();\n    }\n  }, [config, token]);\n\n  React.useEffect(() => {\n    if (user) {\n      getTopUserItems();\n      getLikedSongs();\n      getPlaylists();\n      getAvailibleMarkets();    \n    }\n  }, [user]);\n\n  React.useEffect(() => {\n    if (chosenMarket) {\n      getNewReleases();\n    }\n  }, [chosenMarket]);\n  return (\n    <SpotifyAuthContext.Provider\n      value={{\n        promptAsync,\n        token,\n        user,\n        recommendedTracks,\n        getUserRecommendedTracks: getTopUserItems,\n        likeSong,\n        info: playerInfo,\n        queueAndSkip: queueSongAndSkip,\n        isPlaying,\n        setIsPlaying,\n        switchPlayingState,\n        setVolume,\n        likedSongs,\n        getLikedSongs,\n        getPlaylists: () => {},\n        playlists: userPlaylists,\n        addTrackToPlaylist,\n        newReleases,\n        getNewReleases,\n        topTracks,\n        topArtists,\n        topGenres,\n        setDefaultPlaylist,\n        availableMarkets,\n        setChosenMarket,\n        chosenMarket,\n        allowVolumeControll,\n      }}\n    >\n      {children}\n    </SpotifyAuthContext.Provider>\n  );\n};\n\nexport default function useSpotifyContext() {\n  return useContext(SpotifyAuthContext);\n}\n","import React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { SpotifyAuthProvider } from './hooks/useSpotifyAuth';\nimport { ErrorProvider } from './hooks/useError';\nimport {\n  Explore, Liked, Profile,\n} from './screens';\nimport {\n  PRIMARY_COLOR, DARK_GRAY, BLACK,\n} from './assets/styles';\nimport TabBarIcon from './components/TabBarIcon';\nimport Settings from './screens/Settings';\nimport { Error } from './components';\n\nconst Stack = createStackNavigator();\nconst Tab = createBottomTabNavigator();\n\nfunction App() {\n  return (\n    <ErrorProvider>\n      <SpotifyAuthProvider>\n        <NavigationContainer>\n\n          <Error />\n          <Stack.Navigator\n            screenOptions={{\n              headerStyle: { elevation: 0 },\n              cardStyle: { backgroundColor: BLACK },\n            }}\n          >\n\n            <Stack.Screen\n              name=\"Tab\"\n              options={{ headerShown: false, animationEnabled: false }}\n            >\n              {() => (\n                <Tab.Navigator\n                  tabBarOptions={{\n                    showLabel: false,\n                    activeTintColor: PRIMARY_COLOR,\n                    inactiveTintColor: DARK_GRAY,\n                    labelStyle: {\n                      fontSize: 14,\n                      textTransform: 'uppercase',\n                      paddingTop: 10,\n                    },\n                    style: {\n                      backgroundColor: BLACK,\n                      borderTopWidth: 0,\n                      marginBottom: 0,\n                      shadowOpacity: 0.05,\n                      shadowRadius: 10,\n                      shadowColor: BLACK,\n                      shadowOffset: { height: 0, width: 0 },\n                    },\n                  }}\n                >\n\n                  <Tab.Screen\n                    name=\"Explore\"\n                    component={Explore}\n                    options={{\n                      tabBarIcon: ({ focused }) => (\n                        <TabBarIcon\n                          focused={focused}\n                          iconName=\"musical-notes\"\n                          text=\"Explore\"\n                        />\n                      ),\n                    }}\n                  />\n\n                  <Tab.Screen\n                    name=\"Liked\"\n                    component={Liked}\n                    options={{\n                      tabBarIcon: ({ focused }) => (\n                        <TabBarIcon\n                          focused={focused}\n                          iconName=\"heart\"\n                          text=\"Liked\"\n                        />\n                      ),\n                    }}\n                  />\n\n                  {/* <Tab.Screen\n                  name=\"Chat\"\n                  component={Messages}\n                  options={{\n                    tabBarIcon: ({ focused }) => (\n                      <TabBarIcon\n                        focused={focused}\n                        iconName=\"chatbubble\"\n                        text=\"Chat\"\n                      />\n                    ),\n                  }}\n                /> */}\n\n                  <Tab.Screen\n                    name=\"Settings\"\n                    component={Settings}\n                    options={{\n                      tabBarIcon: ({ focused }) => (\n                        <TabBarIcon\n                          focused={focused}\n                          iconName=\"settings-sharp\"\n                          text=\"Settings\"\n                        />\n                      ),\n                    }}\n                  />\n\n                  <Tab.Screen\n                    name=\"Profile\"\n                    component={Profile}\n                    options={{\n                      tabBarIcon: ({ focused }) => (\n                        <TabBarIcon\n                          focused={focused}\n                          iconName=\"person\"\n                          text=\"Profile\"\n                        />\n                      ),\n                    }}\n                  />\n                </Tab.Navigator>\n              )}\n            </Stack.Screen>\n          </Stack.Navigator>\n        </NavigationContainer>\n      </SpotifyAuthProvider>\n    </ErrorProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport { Ionicons, FontAwesome } from '@expo/vector-icons';\nimport { IconT } from '../types';\n\nfunction Icon({\n  color, name, size, style, onPress, useFontAwesome,\n}: IconT) {\n  if (!useFontAwesome) {\n    return <Ionicons name={name} size={size} color={color} style={style} onPress={onPress} />;\n  }\n  return <FontAwesome name={name} size={size} color={color} style={style} onPress={onPress} />;\n}\n\nexport default Icon;\n","export { default as CardItem } from './card-components/CardItem';\nexport { default as Settings } from './Settings';\nexport { default as Filters } from './Filters';\nexport { default as Icon } from './Icon';\nexport { default as Message } from './Message';\nexport { default as ProfileItem } from './ProfileItem';\nexport { default as Login } from './Login';\nexport { default as CardItemRow } from './card-components/CardItemRow';\nexport { default as Playlists } from './Playlists';\nexport { default as Cards } from './card-components/Cards';\nexport { default as CardItemSmall } from './card-components/CardItemSmall';\nexport { default as SettingItemSwitch } from './SettingItemSwitch';\nexport { default as Error } from './Error';\n","import { createContext, FC, useState } from 'react';\nimport Swiper from 'react-native-deck-swiper';\nimport useSpotifyAuth from '../../hooks/useSpotifyAuth';\nimport useSpotifyContext from '../../hooks/useSpotifyAuth';\nimport { DataSong, SwipedCardContextT } from '../../types';\n\nexport const SwipeCardContext = createContext<SwipedCardContextT | null>(null);\n\nconst SwipeCardProvider: FC<React.ReactNode> = ({ children }) => {\n  const { recommendedTracks: userRecommendedTracks } = useSpotifyContext();\n  const [volume, setVolume] = useState<number>(50);\n  const [rgb, setRGB] = useState<string>('rgb(54, 54, 54)');\n  const [pressedTrack, setPressedTrack] = useState<any>(userRecommendedTracks ? userRecommendedTracks[0] : null);\n  const [showPlaylists, setShowPlaylists] = useState<boolean>(false);\n  const [swiper, setSwiper] = useState<Swiper<DataSong> | null>(null);\n\n  const [showType, setShowType] = useState<string>('mock');\n  const [recommendedIndex, setRecommendedIndex] = useState(0);\n  const [newReleasesIndex, setNewReleasesIndex] = useState(0);\n\n  const updateVolume = (value: number) => {\n    setVolume(value);\n  };\n\n  const { allowVolumeControll } = useSpotifyAuth();\n\n  return (\n    <SwipeCardContext.Provider value={{\n      volume,\n      updateVolume,\n      rgb,\n      setRGB,\n      pressedTrack,\n      setPressedTrack,\n      showPlaylists,\n      setShowPlaylists,\n      swiper,\n      setSwiper,\n      showType,\n      setShowType,\n      recommendedIndex,\n      setRecommendedIndex,\n      newReleasesIndex,\n      setNewReleasesIndex,\n      allowVolumeControll,\n    }}\n    >\n      {children}\n    </SwipeCardContext.Provider>\n  );\n};\n\nexport default SwipeCardProvider;\n","import { exchangeCodeAsync, TokenResponse } from 'expo-auth-session';\nimport React from 'react';\nimport { CLIENT_ID, CLIENT_SECRET } from '@env';\nimport useMounted from './useMounted';\nimport { discovery, redirectUri } from './utils/auth-utils';\n\ntype State = {\n  token: TokenResponse | null;\n  tokenExchangeError: Error | null;\n};\n\n// A hook to automatically exchange the auth token for an access token.\n// I think this should be performed on server and not in the application.\nfunction useAutoExchange(code?: string): State {\n  const [currentState, setCurrentState] = React.useReducer(\n    (state: State, action: Partial<State>) => ({ ...state, ...action }),\n    { token: null, tokenExchangeError: null },\n  );\n  const isMounted = useMounted();\n\n  React.useEffect(() => {\n    if (!code) {\n      setCurrentState({ token: null, tokenExchangeError: null });\n      return;\n    }\n\n    exchangeCodeAsync(\n      {\n        clientId: CLIENT_ID,\n        clientSecret: CLIENT_SECRET,\n        code,\n        redirectUri,\n      },\n      discovery,\n    )\n      .then((token) => {\n        if (isMounted.current) {\n          setCurrentState({ token, tokenExchangeError: null });\n        }\n      })\n      .catch((exchangeError) => {\n        if (isMounted.current) {\n          setCurrentState({ tokenExchangeError: exchangeError, token: null });\n        }\n      });\n  }, [code]);\n\n  return currentState;\n}\n\nexport default useAutoExchange;\n","import React from 'react';\n\nfunction useMounted() {\n  const isMounted = React.useRef(true);\n  React.useEffect(() => () => {\n    isMounted.current = false;\n  }, []);\n  return isMounted;\n}\n\nexport default useMounted;\n","import CardStack from \"react-native-card-stack-swiper\";\nimport Swiper from \"react-native-deck-swiper\";\n\nexport type CardItemT = {\n  description?: string;\n  hasActions?: boolean;\n  hasVariant?: boolean;\n  image: any;\n  artist: string;\n  popularity?: string;\n  track: string;\n  previousVolume?: number;\n  setVolume?: (val: number) => void;\n  color?: string;\n  id: number,\n  releaseDate?: string;\n};\n\nexport type CardItemRowT = {\n  name: string;\n  image: any;\n}\n\n\nexport type SwipedCardContextT = {\n  volume: number;\n  updateVolume: (value: number) => void;\n  rgb: string;\n  setRGB: (value: string) => void;\n  pressedTrack: any;\n  setPressedTrack: (value: any) => void;\n  showPlaylists: boolean;\n  setShowPlaylists: (value: boolean) => void;\n  swiper: Swiper<DataSong> | null;\n  setSwiper: (value: Swiper<DataSong> | null) => void;\n  showType: string;\n  setShowType: (value: string) => void;\n  recommendedIndex: number;\n  setRecommendedIndex: (value: number) => void;\n  newReleasesIndex: number;\n  setNewReleasesIndex: (value: number) => void;\n  allowVolumeControll: boolean;\n}\n\n\nexport type IconT = {\n  name: any;\n  size: number;\n  color: string;\n  style?: any;\n  onPress?: (e: any) => void;\n  useFontAwesome?: boolean;\n};\n\nexport type MessageT = {\n  image: any;\n  lastMessage: string;\n  name: string;\n};\n\nexport type ProfileItemT = {\n  followerCount?: string;\n  topTracks?: string;\n  topArtists?: string;\n  topGenres?: string;\n  location?: string;\n  name: string;\n};\n\nexport type TabBarIconT = {\n  focused: boolean;\n  iconName: any;\n  text: string;\n};\n\nexport type DataSong = {\n  id: number;\n  track: string;\n  match: string;\n  artist: string;\n  album: string;\n  image: any;\n  location?: string;  \n};\n\n\nexport type DataProfile = {\n  id: number;\n  name: string;\n  isOnline: boolean;\n  match: string; // . How similiar is this person to you musically?\n  description: string;\n  message: string;\n  image: any;\n  age?: string;\n  infoPersonal?: string;\n  infoMusic?: string;\n  lastSeen?: string;\n  location?: string;\n  topTracks?: string;\n  topArtists?: string;\n  topGenres?: string;\n};\n\nexport type SettingItemSwitchT = {\n  text: string;\n  onValueChange: (value: boolean) => void;\n  value: boolean;\n  icon?: any;\n};\n\nexport type SettingItemDropdownT = {\n  header: string;\n  explanation?: string;\n  options: string[];\n  defaultValue?: string;\n  onSelect?: (value: any) => void;\n}\n\nexport enum DeviceType {\n  COMPUTER = \"Computer\",\n  SMARTPHONE = \"Smartphone\",\n  SPEAKER = \"speaker\",\n}","export { default as Explore } from './Explore';\nexport { default as Liked } from './Liked';\nexport { default as Messages } from './Messages';\nexport { default as Profile } from './Profile';\nexport { default as LoginPage } from './LoginPage';\n","import React from 'react';\nimport {\n  View, ImageBackground,\n} from 'react-native';\nimport { Playlists, Cards } from '../components';\nimport styles from '../assets/styles';\nimport SwipeCardProvider from '../components/card-components/CardProvider';\nimport useSpotifyContext from '../hooks/useSpotifyAuth';\n\nfunction Explore() {\n  const backgroundLink = 'https://ollisco.se/assets/bg2.jpg'; // To avoid bg dissapearing after API call\n  const { user, playlists, addTrackToPlaylist } = useSpotifyContext();\n\n  return (\n    <View>\n      <ImageBackground\n        source={{ uri: backgroundLink }} // To avoid bg dissapearing after API call\n        style={styles.bg}\n        resizeMode=\"cover\"\n      >\n        <SwipeCardProvider>\n          <Cards />\n          <Playlists />\n        </SwipeCardProvider>\n      </ImageBackground>\n    </View>\n  );\n}\n\nexport default Explore;\n","import React from 'react';\nimport { Text, View, Image } from 'react-native';\nimport { MessageT } from '../types';\nimport styles from '../assets/styles';\n\nfunction Message({ image, lastMessage, name }: MessageT) {\n  return (\n    <View style={styles.containerMessage}>\n      <Image source={image} style={styles.avatar} />\n      <View>\n        <Text style={styles.messageName}>{name}</Text>\n        <Text style={styles.message}>{lastMessage}</Text>\n      </View>\n    </View>\n  );\n}\n\nexport default Message;\n","import React from 'react';\nimport { Text, View } from 'react-native';\nimport Icon from './Icon';\nimport { ProfileItemT } from '../types';\nimport styles, { WHITE } from '../assets/styles';\n\nfunction ProfileItem({\n  followerCount,\n  location,\n  name,\n  topTracks,\n  topArtists,\n  topGenres,\n}: ProfileItemT) {\n  return (\n    <View style={styles.containerProfileItem}>\n\n      <Text style={styles.name}>{name}</Text>\n\n      <Text style={styles.descriptionProfileItem}>\n        {followerCount}\n        {' followers '}\n        -\n        {' '}\n        {location}\n      </Text>\n\n      <View style={styles.info}>\n        <Text style={styles.iconProfile}>\n          <Icon name=\"person\" size={12} color={WHITE} />\n        </Text>\n        <Text style={styles.infoContent}>{topArtists}</Text>\n      </View>\n\n      <View style={styles.info}>\n        <Text style={styles.iconProfile}>\n          <Icon name=\"musical-notes\" size={12} color={WHITE} />\n        </Text>\n        <Text style={styles.infoContent}>{topTracks}</Text>\n      </View>\n\n      <View style={styles.info}>\n        <Text style={styles.iconProfile}>\n          <Icon name=\"albums-outline\" size={12} color={WHITE} />\n        </Text>\n        <Text style={styles.infoContent}>{topGenres}</Text>\n      </View>\n\n      <View style={styles.info}>\n        <Text style={styles.iconProfile}>\n          <Icon name=\"location\" size={12} color={WHITE} />\n        </Text>\n        <Text style={styles.infoContent}>{location}</Text>\n      </View>\n\n    </View>\n  );\n}\n\nexport default ProfileItem;\n","import { useContext } from 'react';\nimport React, {\n  TouchableOpacity, View, ScrollView, Text,\n} from 'react-native';\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport styles, { DARK_GRAY, WHITE } from '../assets/styles';\nimport useSpotifyContext from '../hooks/useSpotifyAuth';\nimport CardItemRow from './card-components/CardItemRow';\nimport { SwipeCardContext } from './card-components/CardProvider';\n// import swipcardcontext from types\nimport { SwipedCardContextT } from '../types';\nimport Icon from './Icon';\nimport { dummyDataPlaylists } from '../assets/data/dummy_data_playlists';\n\nfunction Playlists() {\n  const { playlists, addTrackToPlaylist, token, \n    queueAndSkip,\n    recommendedTracks,\n    newReleases,\n  } = useSpotifyContext();\n\n  const {\n    pressedTrack,\n    showPlaylists,\n    setShowPlaylists,\n    swiper,\n    newReleasesIndex,\n    setNewReleasesIndex,\n    recommendedIndex,\n    setRecommendedIndex,\n    showType,\n  } = useContext(SwipeCardContext) as SwipedCardContextT;\n\n  if (showPlaylists) {\n    return (\n      <View style={styles.containerPlaylists}>\n        <View style={styles.playlistsTopRow}>\n          <Text style={{ color: '#000000', fontSize: 15 }}>\n            Only select a playlist where you can add songs\n          </Text>\n          <Icon\n            name=\"close\"\n            size={30}\n            color=\"#000000\"\n            style={{ marginLeft: 'auto', color: DARK_GRAY }}\n            onPress={() => setShowPlaylists(false)}\n          />\n        </View>\n        <SafeAreaView style={{ flex: 1 }}>\n          <ScrollView>\n            {playlists ? (\n              playlists.map((item: any) => (\n                <TouchableOpacity\n                  key={item.id}\n                  onPress={() => {\n                    addTrackToPlaylist(item.id, pressedTrack.uri);\n                    setShowPlaylists(false);\n                    swiper?.swipeTop();\n                    // if (showType === 'new' && newReleases[newReleasesIndex + 1] !== undefined) {\n                    //   queueAndSkip(newReleases[newReleasesIndex + 1].uri);\n                    //   setRecommendedIndex(recommendedIndex + 1);\n                    //   setNewReleasesIndex(newReleasesIndex + 1);\n                      \n                    // } else if (showType === 'recommended') {\n                    //   queueAndSkip(recommendedTracks[recommendedIndex + 1].uri);\n                    //   setRecommendedIndex(recommendedIndex + 1);\n                    //   setNewReleasesIndex(newReleasesIndex + 1);\n                    // }\n                  }}\n                >\n                  <CardItemRow\n                    image={item.images.length > 0 ? { uri: item.images[0].url } : dummyDataPlaylists[0].image}\n                    name={item.name}\n                  />\n                </TouchableOpacity>\n              ))\n\n            ) : (\n\n              dummyDataPlaylists.map((item: any) => (\n                <TouchableOpacity\n                  key={item.id}\n                  onPress={() => {\n                    setShowPlaylists(false);\n                    swiper?.swipeRight();\n                  }}\n                >\n                  <CardItemRow\n                    image={item.image}\n                    name={item.name}\n                  />\n                </TouchableOpacity>\n              ))\n            )}\n            {/* Ugly padding hack */}\n            <TouchableOpacity>\n              <Text style={{ color: WHITE }}>Hello World!</Text>\n              <Text style={{ color: WHITE }}>Hello World!</Text>\n              <Text style={{ color: WHITE }}>Hello World!</Text>\n              <Text style={{ color: WHITE }}>Hello World!</Text>\n            </TouchableOpacity>\n          </ScrollView>\n        </SafeAreaView>\n      </View>\n    );\n  }\n  return (<></>);\n}\nexport default Playlists;\nfunction newReleasesIndex(newReleasesIndex: any) {\n  throw new Error('Function not implemented.');\n}\n\n","\n\n\n\n\nexport const dummyDataPlaylists = [\n    {\n        id: '1',\n        name: 'Playlist 1',\n        image: require('../../assets/images/logic.jpg'),\n    },\n    {\n        id: '2',\n        name: 'Playlist 2',\n        image: require('../../assets/images/odz.jpg'),\n    },\n    {\n        id: '3',\n        name: 'Playlist 3',\n        image: require('../../assets/images/metallica.jpg'),\n    },\n    // make 5 more object like that\n    {\n        id: '4',\n        name: 'Playlist 4',\n        image: require('../../assets/images/dio.jpg'),\n    },\n    {\n        id: '5',\n        name: 'Playlist 5',\n        image: require('../../assets/images/post.jpg'),\n    },\n    {\n        id: '6',\n        name: 'Playlist 6',\n        image: require('../../assets/images/skepta.jpg'),\n    }\n];","import { View, Text, TouchableOpacity } from 'react-native';\nimport React, { useContext } from 'react';\nimport styles from '../../assets/styles';\nimport Settings from '../Settings';\nimport Filters from '../Filters';\nimport Login from '../Login';\nimport useSpotifyContext from '../../hooks/useSpotifyAuth';\nimport CardStackHandler from './CardStackHandler';\nimport { SwipeCardContext } from './CardProvider';\nimport { SwipedCardContextT } from '../../types';\n\ntype Props = {}\n\nfunction Cards(props: Props) {\n  const {\n    user, queueAndSkip, recommendedTracks: userRecommendedTracks, newReleases,\n\n  } = useSpotifyContext();\n  const {\n    showType, setShowType, recommendedIndex, newReleasesIndex,\n  } = useContext(SwipeCardContext) as SwipedCardContextT;\n\n  const recommendedActiveStyle = showType === 'recommended' ? styles.exploreTopCenterTextActive : {};\n  const newActiveStyle = showType === 'new' ? styles.exploreTopCenterTextActive : {};\n\n  return (\n    <View style={styles.containerHome}>\n      <View style={styles.top}>\n        {/* Testing spotify login in settings component */}\n        <Settings />\n        {user ? (\n          <View style={styles.exploreTopCenter}>\n            <TouchableOpacity onPress={() => {\n              if (showType !== 'recommended' && userRecommendedTracks) {\n                setShowType('recommended');\n                queueAndSkip(userRecommendedTracks[recommendedIndex].uri);\n              }\n            }}\n            >\n              <Text style={[styles.exploreTopCenterText, recommendedActiveStyle]}>\n                Recommended\n              </Text>\n            </TouchableOpacity>\n            <Text style={styles.exploreTopCenterText}>\n              |\n            </Text>\n            <TouchableOpacity onPress={() => {\n              if (showType !== 'new' && newReleases) {\n                setShowType('new');\n                queueAndSkip(newReleases[newReleasesIndex].uri);\n              }\n            }}\n            >\n              <Text style={[styles.exploreTopCenterText, newActiveStyle]}>\n                New Releases\n              </Text>\n            </TouchableOpacity>\n          </View>\n        ) : (\n          <Login />\n        )}\n        <Filters />\n      </View>\n      <CardStackHandler />\n    </View>\n  );\n}\n\nexport default Cards;\n","import React, { useContext } from 'react';\nimport { View, Platform } from 'react-native';\nimport Swiper from 'react-native-deck-swiper';\nimport DATA from '../../assets/data/dummy_data_songs';\nimport { CARD_HEIGHT, DARK_GRAY } from '../../assets/styles';\nimport useSpotifyContext from '../../hooks/useSpotifyAuth';\nimport { SwipedCardContextT } from '../../types';\nimport CardItem from './CardItem';\nimport { SwipeCardContext } from './CardProvider';\n\nfunction CardStackHandler(_style: any) {\n  const {\n    recommendedTracks: userTopItems,\n    getUserRecommendedTracks: getTopUserItems,\n    token,\n    likeSong,\n    queueAndSkip,\n    newReleases,\n    getNewReleases,\n    chosenMarket\n  } = useSpotifyContext();\n\n  const {\n    setRGB,\n    swiper,\n    setSwiper,\n    showType,\n    recommendedIndex,\n    setRecommendedIndex,\n    newReleasesIndex,\n    setNewReleasesIndex,\n  } = useContext(SwipeCardContext) as SwipedCardContextT;\n\n  const swipeColorLimit = 50;\n  function convertRGBgreen(d: number) {\n    const m = d > 110 ? 100 : d;\n    return `rgb(${54 - ((54 * d) / 300) + 20}, ${m}, ${54 - ((54 * d) / 300) + 20})`;\n  }\n  function convertRGBred(d: number) {\n    const m = d < 110 ? 110 : -d;\n    return `rgb(${m}, ${54 - ((54 * -d) / 300) + 20}, ${54 - ((54 * -d) / 300) + 20})`;\n  }\n\n  React.useEffect(() => {\n    if (userTopItems.length > 0 && newReleases.length > 0) {\n      swiper?.jumpToCardIndex(0);\n    }\n  }, [userTopItems, newReleases]);\n\n  React.useEffect(() => {\n    if (showType === 'new') {\n      queueAndSkip(newReleases[0].uri);\n      setNewReleasesIndex(0);\n      setRecommendedIndex(0);\n      \n    }\n  }, [newReleases]);\n\n  return (\n    <View style={{ borderColor: '#000', borderWidth: 3, height: CARD_HEIGHT }}>\n      {userTopItems.length > 0 && showType === 'recommended'\n        ? (\n          <Swiper\n            cards={userTopItems}\n            renderCard={(\n              card:\n              {album: any, popularity: number, artists: string[], releaseDate: string, name: string},\n              index: number,\n            ) => (\n              <CardItem\n                hasActions\n                image={{ uri: card.album.images[0].url }}\n                track={card.name}\n                releaseDate={card.releaseDate}\n                popularity={card.popularity}\n                artist={card.artists.map((artist: any) => artist.name).join(', ')}\n                id={index}\n              />\n            )}\n            useViewOverflow={Platform.OS === 'ios'}\n            onSwiped={(cardIndex) => {\n              console.log(cardIndex);\n              setRGB(DARK_GRAY);\n              // console.log(token && userTopItems[recommendedIndex + 1].uri);\n              if (token && userTopItems[recommendedIndex + 1] !== undefined) {\n                queueAndSkip(userTopItems[recommendedIndex + 1].uri);\n                setRecommendedIndex(recommendedIndex + 1);\n                setNewReleasesIndex(newReleasesIndex + 1);\n              }\n            }}\n            onSwipedAborted={() => {\n              setRGB(DARK_GRAY);\n            }}\n            onSwipedAll={() => {\n              getTopUserItems();\n              getNewReleases();\n              setNewReleasesIndex(0);\n              setRecommendedIndex(0);\n            }}\n            onSwipedRight={(index) => {\n              console.log(index);\n              if (token) {\n                likeSong(userTopItems[index].id);\n              }\n            }}\n            onSwiping={(x, _y) => {\n              if (x > swipeColorLimit) {\n                setRGB(convertRGBgreen(x));\n              } else if (x < -swipeColorLimit) {\n                setRGB(convertRGBred(x));\n              } else {\n                setRGB(DARK_GRAY);\n              }\n            }}\n            ref={(swiper) => setSwiper(swiper)}\n            cardIndex={0}\n            verticalSwipe={false}\n            backgroundColor=\"#000000\"\n            stackSize={3}\n            swipeBackCard\n          />\n        )\n        : newReleases && showType === 'new'\n          ? (\n            <Swiper\n              cards={newReleases}\n              renderCard={(\n                card: {images: {url: string}[], name: string, artists: any, popularity: string, releaseDate: string},\n                index: number,\n              ) => (\n                <CardItem\n                  hasActions\n                  image={{ uri: card.images[0].url }}\n                  track={card.name}\n                  releaseDate={card.releaseDate}\n                  popularity={card.popularity}\n                  artist={card.artists.map((artist: any) => artist.name).join(', ')}\n                  id={index}\n                />\n              )}\n              useViewOverflow={Platform.OS === 'ios'}\n              onSwiped={(cardIndex) => {\n                console.log(cardIndex);\n                setRGB(DARK_GRAY);\n                if (token && newReleases[newReleasesIndex + 1] !== undefined) {\n                  queueAndSkip(newReleases[newReleasesIndex + 1].uri);\n                  setRecommendedIndex(recommendedIndex + 1);\n                  setNewReleasesIndex(newReleasesIndex + 1);\n                }\n              }}\n              onSwipedAborted={() => {\n                setRGB(DARK_GRAY);\n              }}\n              onSwipedAll={() => {\n                getTopUserItems();\n                getNewReleases();\n                setNewReleasesIndex(0);\n                setRecommendedIndex(0);\n              }}\n              onSwipedRight={(index) => {\n                if (token) {\n                  likeSong(newReleases[index].id);\n                }\n              }}\n              onSwiping={(x, _y) => {\n                if (x > swipeColorLimit) {\n                  setRGB(convertRGBgreen(x));\n                } else if (x < -swipeColorLimit) {\n                  setRGB(convertRGBred(x));\n                } else {\n                  setRGB(DARK_GRAY);\n                }\n              }}\n              ref={(swiper) => setSwiper(swiper)}\n              cardIndex={0}\n              verticalSwipe={false}\n              backgroundColor=\"#000000\"\n              stackSize={3}\n              infinite\n              swipeBackCard\n            />\n\n          )\n\n          : null}\n\n      {!newReleases && userTopItems.length === 0 ? (\n        <Swiper\n          cards={DATA}\n          renderCard={(card) => (\n            <CardItem\n              hasActions\n              image={card.image}\n              track={card.track}\n              description={card.artist}\n              matches={card.match}\n              artist={card.artist}\n            />\n          )}\n          useViewOverflow={Platform.OS === 'ios'}\n          onSwiped={(_cardIndex) => {\n            setRGB(DARK_GRAY);\n          }}\n          onSwipedAborted={() => {\n            setRGB(DARK_GRAY);\n          }}\n          onSwipedAll={() => {\n            console.log('onSwipedAll');\n          }}\n          onSwiping={(x, _y) => {\n            if (x > swipeColorLimit) {\n              setRGB(convertRGBgreen(x));\n            } else if (x < -swipeColorLimit) {\n              setRGB(convertRGBred(x));\n            } else {\n              setRGB(DARK_GRAY);\n            }\n          }}\n          ref={(swiper) => setSwiper(swiper)}\n          cardIndex={0}\n          verticalSwipe={false}\n          backgroundColor=\"#000000\"\n          stackSize={3}\n          infinite\n          swipeBackCard\n        />\n      ) : null}\n\n    </View>\n  );\n}\n\nexport default CardStackHandler;\n","module.exports = __webpack_public_path__ + \"static/media/xxx.a0b6a7dc.jpg\";","module.exports = __webpack_public_path__ + \"static/media/travis.a6dcc371.jpg\";","module.exports = __webpack_public_path__ + \"static/media/banger.bb266617.jpg\";","import React from 'react';\nimport { Text, View, Image } from 'react-native';\nimport { CardItemT } from '../../types';\n\nimport styles from '../../assets/styles';\n\nfunction CardItemSmall({\n  image,\n  artist,\n  track,\n}: CardItemT) {\n  const maxLength = 20;\n  if (track.length > maxLength) {\n    track = `${track.slice(0, maxLength)}...`;\n  }\n  return (\n    <View style={styles.containerCardItemSmall}>\n      {/* IMAGE */}\n      <Image source={image} style={styles.smallImageStyle} />\n      {/* NAME */}\n      <Text style={styles.smallNameStyle}>{track}</Text>\n\n      <View style={styles.artist}>\n        <Text style={[styles.artistText, { fontSize: 10 }]}>{artist}</Text>\n      </View>\n    </View>\n  );\n}\n\nexport default CardItemSmall;\n","import {\n  StyleSheet, Switch, Text, View,\n} from 'react-native';\nimport React from 'react';\nimport { SettingItemSwitchT } from '../types';\nimport { SPOTIFY_GREEN, WHITE, GRAY } from '../assets/styles/index';\n\nfunction SettingItemSwitch({\n  text,\n  onValueChange,\n  value,\n}: SettingItemSwitchT) {\n  return (\n    <View style={styles.container}>\n      <Text style={styles.text}>{text}</Text>\n      <Switch\n        trackColor={{ false: '#767577', true: SPOTIFY_GREEN }}\n        thumbColor={value ? SPOTIFY_GREEN : '#FFFFFF'}\n        ios_backgroundColor=\"#3e3e3e\"\n        onValueChange={onValueChange}\n        value={value}\n      />\n    </View>\n  );\n}\n\nexport default SettingItemSwitch;\n\nconst styles = StyleSheet.create({\n  container: {\n    alignItems: 'center',\n    padding: 20,\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    // add border to each flex item\n    borderBottomColor: GRAY,\n    borderBottomWidth: 1,\n    marginTop: -1,\n\n  },\n  text: {\n    fontSize: 18,\n    color: WHITE,\n    borderRadius: 3,\n    borderColor: GRAY,\n  },\n});\n","import { Text, TouchableOpacity } from 'react-native';\nimport React, { useEffect, useState } from 'react';\nimport styles from '../assets/styles';\nimport useError from '../hooks/useError';\n\nfunction Error() {\n  const {\n    errorTexts, showComponent, setShowComponent, setErrorTexts, popErrorText,\n  } = useError();\n  const [currentError, setCurrentError] = useState<string[] | null>(null);\n\n  // const [showComponent, setShowComponent] = useState(false);\n\n  useEffect(() => {\n    if (errorTexts.length > 0) {\n      const toRef = setTimeout(() => {\n        setShowComponent(true);\n        clearTimeout(toRef);\n        // it is good practice to clear the timeout (but I am not sure why)\n      }, 250);\n    }\n  }, [errorTexts]);\n\n  useEffect(() => {\n    if (showComponent) {\n      const toRef = setTimeout(() => {\n        setShowComponent(false);\n        clearTimeout(toRef);\n        setErrorTexts([]);\n      }, 4000);\n    }\n  }, [showComponent]);\n\n  const componentTwo = () => (\n    <TouchableOpacity\n      style={styles.errorContainer}\n      onPress={() => {setShowComponent(!showComponent); }}\n    >\n\n      <Text style={styles.testText}>{errorTexts}</Text>\n\n    </TouchableOpacity>\n  );\n\n  return (\n\n    showComponent ? componentTwo() : null\n  );\n}\n\nexport default Error;\n","import React from 'react';\nimport {\n  View,\n  Text,\n  TouchableOpacity,\n  ImageBackground,\n  FlatList,\n} from 'react-native';\nimport { CardItemSmall } from '../components';\nimport DATA from '../assets/data/dummy_data_songs';\nimport styles from '../assets/styles';\nimport BG_IMAGE from '../assets/images/bg2.jpg';\nimport useSpotifyContext from '../hooks/useSpotifyAuth';\n\nfunction Liked() {\n  const { likedSongs, getLikedSongs, token } = useSpotifyContext();\n\n  React.useEffect(() => {\n    if (!likedSongs && token !== null) {\n      getLikedSongs();\n    }\n  }, [likedSongs, getLikedSongs, token]);\n\n  return (\n    <View>\n      <ImageBackground\n        source={BG_IMAGE}\n        style={styles.bg}\n      >\n        <View style={styles.containerLiked}>\n          <View style={styles.top}>\n            <Text style={styles.title}>Liked Songs</Text>\n          </View>\n          {/* <SafeAreaView>\n            <ScrollView> */}\n          {likedSongs ? (\n            <FlatList\n              numColumns={2}\n              data={likedSongs}\n              keyExtractor={(item, index) => index.toString()}\n              renderItem={({ item }) => (\n                <TouchableOpacity>\n                  <CardItemSmall\n                    image={{ uri: item.track.album.images[0].url }}\n                    track={item.track.name}\n                    artist={item.track.artists[0].name}\n                  />\n                </TouchableOpacity>\n              )}\n            />\n          ) : (\n            <FlatList\n              numColumns={2}\n              data={DATA}\n              keyExtractor={(item, index) => index.toString()}\n              renderItem={({ index, item }) => (\n                <TouchableOpacity>\n                  <CardItemSmall\n                    id={index}\n                    image={item.image}\n                    track={item.track}\n                    artist={item.artist}\n                  />\n                </TouchableOpacity>\n              )}\n            />\n          )}\n          {/* Ugly padding hack */}\n          <TouchableOpacity>\n            <Text>Padding</Text>\n            <Text>Padding</Text>\n            <Text>Padding</Text>\n          </TouchableOpacity>\n        </View>\n      </ImageBackground>\n    </View>\n  );\n}\n\nexport default Liked;\n","import React from 'react';\nimport {\n  Text,\n  TouchableOpacity,\n  ImageBackground,\n  View,\n  FlatList,\n} from 'react-native';\nimport { Icon, Message } from '../components';\nimport DEMO from '../assets/data/dummy_data_profiles';\nimport styles, { GRAY } from '../assets/styles';\nimport BG_IMAGE from '../assets/images/bg2.jpg';\n\nfunction Messages() {\n  return (\n    <View>\n      <ImageBackground\n        source={BG_IMAGE}\n        style={styles.bg}\n      >\n        <View style={styles.containerMessages}>\n          <View style={styles.top}>\n            <Text style={styles.title}>Messages</Text>\n            <TouchableOpacity>\n              <Icon name=\"person-add\" color={GRAY} size={20} style={styles.topIconRight} />\n            </TouchableOpacity>\n          </View>\n          <FlatList\n            data={DEMO}\n            keyExtractor={(item, index) => index.toString()}\n            renderItem={({ item }) => (\n              <TouchableOpacity>\n                <Message\n                  image={item.image}\n                  name={item.name}\n                  lastMessage={item.message}\n                />\n              </TouchableOpacity>\n            )}\n          />\n        </View>\n      </ImageBackground>\n    </View>\n  );\n}\n\nexport default Messages;\n","module.exports = __webpack_public_path__ + \"static/media/img01.a678bf12.jpeg\";","import React from 'react';\nimport {\n  ScrollView,\n  View,\n  ImageBackground,\n  TouchableOpacity,\n} from 'react-native';\nimport { countries } from 'country-data';\nimport { Icon, ProfileItem } from '../components';\nimport DEMO from '../assets/data/dummy_data_profiles';\nimport styles, { WHITE } from '../assets/styles';\nimport BG_IMAGE from '../assets/images/bg2.jpg';\nimport useSpotifyContext from '../hooks/useSpotifyAuth';\nimport { getLocation } from '../components/utils/country-utils';\n\nfunction Profile() {\n  const {\n    user, topTracks, topArtists, topGenres,\n  } = useSpotifyContext();\n  const {\n    image,\n    topGenres: mockTopGenres,\n    topArtists: mockTopArtists,\n    topTracks: mockTopTracks,\n    name,\n    location,\n  } = DEMO[7];\n\n  \n\n  return (\n\n    <View>\n      <View>\n        <ImageBackground\n          source={BG_IMAGE}\n          style={styles.bg}\n        />\n        <ScrollView style={styles.containerProfile}>\n          {user && user.images.length > 0 ? (\n            <ImageBackground source={{ uri: user.images[0].url }} style={styles.photo} />\n\n          ) : (\n            <ImageBackground source={image} style={styles.photo} />\n          )}\n\n          <View style={styles.top}>\n            <TouchableOpacity>\n              <Icon\n                name=\"swap-horizontal-outline\"\n                size={20}\n                color={WHITE}\n                style={styles.topIconLeft}\n              />\n            </TouchableOpacity>\n\n            <TouchableOpacity>\n              <Icon\n                name=\"ellipsis-vertical\"\n                size={20}\n                color={WHITE}\n                style={styles.topIconRight}\n              />\n            </TouchableOpacity>\n          </View>\n\n          {user ? (\n            <ProfileItem\n              followerCount={user.followers.total}\n              name={user.display_name}\n              location={getLocation(user.country)}\n              topTracks={topTracks}\n              topArtists={topArtists}\n              topGenres={topGenres}\n            />\n          ) : (\n            <ProfileItem\n              followerCount=\"20\"\n              name={name}\n              location={location}\n              topTracks={mockTopTracks}\n              topArtists={mockTopArtists}\n              topGenres={mockTopGenres}\n            />\n          )}\n        </ScrollView>\n      </View>\n    </View>\n  );\n}\n\nexport default Profile;\n","// create a react functional component\n\nimport React from 'react';\nimport {\n  View,\n  Text,\n} from 'react-native';\nimport useSpotifyContext from '../hooks/useSpotifyAuth';\n\nfunction LoginPage() {\n  const { likedSongs, getLikedSongs, token } = useSpotifyContext();\n\n  return (\n    <View>\n      <Text>\n        Login\n      </Text>\n      ;\n    </View>\n  );\n}\n\nexport default LoginPage;\n","import React from 'react';\nimport { Text, View } from 'react-native';\nimport Icon from './Icon';\nimport styles, { GRAY, WHITE } from '../assets/styles';\nimport { TabBarIconT } from '../types';\n\nfunction TabBarIcon({ focused, iconName, text }: TabBarIconT) {\n  const iconFocused = focused ? WHITE : GRAY;\n\n  return (\n    <View style={styles.iconMenu}>\n      <Icon name={iconName} size={16} color={iconFocused} />\n      <Text style={[styles.tabButtonText, { color: iconFocused }]}>{text}</Text>\n    </View>\n  );\n}\n\nexport default TabBarIcon;\n","import {\n  View, ImageBackground, Text,\n} from 'react-native';\nimport React, { useState } from 'react';\nimport styles from '../assets/styles';\nimport BG_IMAGE from '../assets/images/bg2.jpg';\nimport { SettingItemSwitch } from '../components';\nimport SettingItemDropdown from '../components/SettingItemDropdown';\nimport useSpotifyContext from '../hooks/useSpotifyAuth';\nimport { getLocation } from '../components/utils/country-utils';\nimport { mobileRedirectUri, redirectUri, webRedirectUri } from '../hooks/utils/auth-utils';\n\nfunction MockSettingItems() {\n  const [exampleBool, setExampleBool] = useState(false);\n  return (\n    <View>\n      <SettingItemDropdown\n        header=\"Country\"\n        explanation=\"Music will be adapted to the given country. New releases will be based on the country you choose.\"\n        defaultValue={'SE' || ''}\n        options={['SE', 'US', 'GB', 'CA']}\n      />\n\n      <SettingItemDropdown\n        header=\"Default Playlist\"\n        explanation=\"The default playlist where right swiped cards apear. Please only choose playlists that you own or can add music to.\"\n        options={['Playlist 1', 'Playlist 2', 'Playlist 3']}\n      />\n\n      <SettingItemSwitch\n        text=\"An example Switch\"\n        value={exampleBool}\n        onValueChange={() => setExampleBool(!exampleBool)}\n      />\n\n      <SettingItemDropdown\n        header=\"Debug info\"\n        explanation=\"This is debug info for development resons. If you are testing you can ignore this dropdown.\"\n        options={[redirectUri, webRedirectUri, mobileRedirectUri]}\n      />\n\n    </View>\n  );\n}\n\nfunction SettingItems() {\n  const {\n    playlists, \n    setDefaultPlaylist, \n    availableMarkets, \n    chosenMarket, \n    setChosenMarket, \n    queueAndSkip\n  } = useSpotifyContext();\n\n  const likedSongs = 'Liked songs';\n  function getDefaultPlaylist(playlistName: string) {\n    if (playlistName === likedSongs) {\n      setDefaultPlaylist(likedSongs);\n      return;\n    }\n    const playlist = playlists.find((playlist: { name: string; }) => playlist.name === playlistName);\n    setDefaultPlaylist(playlist.id);\n  }\n\n  return (\n    <View>\n      <SettingItemDropdown\n        header=\"Country\"\n        explanation=\"Music will be adapted to the given country. New releases will be based on the country you choose.\"\n        defaultValue={getLocation(chosenMarket) || ''}\n        options={availableMarkets.map((\n          country: {\n            code: string,\n            name: string, \n            nameWithFlag: string\n          }     \n        ) => country.nameWithFlag\n        )}\n        onSelect={(value: string) => {\n          setChosenMarket(availableMarkets.find((country: {nameWithFlag: string}) => country.nameWithFlag === value).code);\n        }}\n      />\n\n      <SettingItemDropdown\n        header=\"Default Playlist\"\n        explanation=\"The default playlist where right swiped cards apear. Please only choose playlists that you own or can add music to.\"\n        options={[likedSongs, ...playlists.map((playlist: { name: string; }) => playlist.name)]}\n        defaultValue={likedSongs}\n        onSelect={(value: string) => getDefaultPlaylist(value)}\n      />\n    </View>\n  );\n}\n\nfunction Settings() {\n  const { playlists, availableMarkets } = useSpotifyContext();\n  return (\n    <View>\n\n      <ImageBackground\n        source={BG_IMAGE}\n        style={styles.bg}\n      >\n        <View style={styles.top}>\n          <Text style={styles.title}>Settings</Text>\n        </View>\n        {playlists && playlists.length > 0 && availableMarkets && availableMarkets.length > 0\n          ? <SettingItems />\n          : <MockSettingItems />}\n      </ImageBackground>\n    </View>\n  );\n}\n\nexport default Settings;\n","import {\n  StyleSheet, Text, View,\n} from 'react-native';\nimport React from 'react';\nimport ModalDropdown from 'react-native-modal-dropdown';\nimport { SettingItemDropdownT } from '../types';\nimport {\n  WHITE, GRAY, BLACK, DARKER_GRAY,\n} from '../assets/styles/index';\n\nfunction SettingItemDropdown({\n  header,\n  explanation,\n  options,\n  defaultValue,\n  onSelect,\n}: SettingItemDropdownT) {\n  return (\n    <View style={styles.container}>\n      <View style={styles.textContainer}>\n        <Text style={styles.header}>{header}</Text>\n        <Text style={styles.explanation}>{explanation}</Text>\n      </View>\n      <ModalDropdown\n        style={styles.dropdownNonpress}\n        options={options}\n        defaultValue={defaultValue || 'Select an item...'}\n        dropdownStyle={styles.dropdown}\n        dropdownTextHighlightStyle={styles.dropdownTextHighlight}\n        textStyle={styles.header}\n        showsVerticalScrollIndicator={false}\n        dropdownTextStyle={styles.dropdownText}\n        onSelect={(_index: any, value: any) => {\n          if (onSelect && value) {\n            onSelect(value);\n          }\n        }}\n      />\n    </View>\n  );\n}\n\nexport default SettingItemDropdown;\n\nconst styles = StyleSheet.create({\n  container: {\n    alignItems: 'center',\n    padding: 20,\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    borderBottomColor: GRAY,\n    borderBottomWidth: 1,\n    marginTop: -1,\n\n  },\n  header: {\n    fontSize: 18,\n    color: WHITE,\n  },\n  dropdown: {\n    width: 150,\n    height: 100,\n    borderColor: BLACK,\n    borderWidth: 1,\n    borderRadius: 3,\n  },\n  dropdownNonpress: {\n    borderBottomWidth: 1,\n    borderBottomColor: GRAY,\n    padding: 5,\n    width: '40%',\n  },\n  dropdownText: {\n    fontSize: 18,\n    color: GRAY,\n    backgroundColor: DARKER_GRAY,\n    borderColor: BLACK,\n  },\n  dropdownTextHighlight: {\n    color: WHITE,\n  },\n  explanation: {\n    fontSize: 14,\n    color: GRAY,\n  },\n  textContainer: {\n    flexDirection: 'column',\n    justifyContent: 'space-between',\n    width: '60%',\n  },\n});\n","import { Platform } from 'react-native';\nimport { REDIRECT_URI, REDIRECT_URI_WEB } from '@env';\nimport { makeRedirectUri } from 'expo-auth-session';\n\n// TODO: can maybe be replaced with: getRedirectUrl from expo auth session\n\n//const redirectUri = Platform.OS === 'web' ? REDIRECT_URI_WEB : REDIRECT_URI;\nconst webRedirectUri = makeRedirectUri({scheme: 'swiperr', path: 'swiperr'}) ;\nconst mobileRedirectUri = makeRedirectUri({scheme: 'swiperr'}) ;\n\nconst redirectUri = Platform.OS === \"web\" \n  ? webRedirectUri\n  : mobileRedirectUri;\nconsole.log(redirectUri);\n// TODO: add all endpoints to here instead of useSpotifyAuth\nconst authorizationEndpoint = 'https://accounts.spotify.com/authorize';\nconst tokenEndpoint = 'https://accounts.spotify.com/api/token';\nconst meEndpoint = 'https://api.spotify.com/v1/me';\nconst recomendationEndpoint = 'https://api.spotify.com/v1/recommendations';\n\nconst discovery = {\n  authorizationEndpoint,\n  tokenEndpoint,\n};\n\nexport {\n  redirectUri, webRedirectUri, mobileRedirectUri, discovery, meEndpoint, recomendationEndpoint,\n};\n","module.exports = __webpack_public_path__ + \"static/media/bg2.a5ed1007.jpg\";"],"sourceRoot":""}