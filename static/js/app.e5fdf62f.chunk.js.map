{"version":3,"sources":["hooks/utils/auth-utils.ts","components/utils/country-utils.ts","types.ts","hooks/useSnippet.tsx","assets/styles/index.ts","components/card-components/CardItem.tsx","components/card-components/Cards.tsx","assets/data/dummy_data_songs.ts","assets/images/logic.jpg","assets/images/skepta.jpg","assets/images/odz.jpg","assets/images/dio.jpg","hooks/useSpotifyAuth.tsx","assets/images/post.jpg","assets/images/metallica.jpg","components/Login.tsx","components/card-components/CardItemRow.tsx","assets/data/dummy_data_profiles.ts","App.tsx","components/Icon.tsx","components/index.ts","components/card-components/CardProvider.tsx","hooks/useAutoExchange.tsx","hooks/useMounted.tsx","screens/index.ts","screens/Explore.tsx","components/card-components/CardStackHandler.tsx","assets/images/xxx.jpg","assets/images/travis.jpg","assets/images/banger.jpg","components/Settings.tsx","components/Filters.tsx","components/Message.tsx","components/ProfileItem.tsx","components/Playlists.tsx","assets/data/dummy_data_playlists.ts","components/card-components/CardItemSmall.tsx","components/SettingItemSwitch.tsx","components/Error.tsx","screens/Liked.tsx","screens/Messages.tsx","assets/images/img01.jpeg","screens/Profile.tsx","screens/LoginPage.tsx","assets/swiperr-splash.png","components/TabBarIcon.tsx","screens/Settings.tsx","components/SettingItemDropdown.tsx","hooks/useError.tsx","assets/images/bg2.jpg"],"names":["webRedirectUri","makeRedirectUri","scheme","path","mobileRedirectUri","redirectUri","Platform","OS","console","log","discovery","authorizationEndpoint","tokenEndpoint","locationWithFlag","getCounryCode","split","countryCode","countries","name","flagEmoji","getFlagEmoji","contryName","alpha2","codePoints","toUpperCase","map","char","charCodeAt","String","fromCodePoint","dropdownSize","DeviceType","useContext","snippetContext","React","createContext","addTrackAndPlay","url","Promise","pause","play","replay","children","useState","audio","setAudio","addErrorText","useError","Audio","Sound","createAsync","uri","shouldPlay","isLooping","isMuted","volume","sound","playAsync","message","pauseAsync","stopAsync","useEffect","unloadAsync","undefined","Provider","value","WHITE","GRAY","BLACK","DIMENSION_WIDTH","Dimensions","get","width","DIMENSION_HEIGHT","height","CARD_HEIGHT","StyleSheet","create","containerCardItem","backgroundColor","borderRadius","borderWidth","alignItems","elevation","shadowOpacity","shadowRadius","shadowColor","shadowOffset","justifyContent","marginTop","marginLeft","imageStyle","margin","loginImageStyle","containerCardItemWeb","padding","containerCardItemSmall","containerCardItemRow","flexDirection","playlistText","fontSize","color","matchesCardItem","paddingVertical","paddingHorizontal","matchesTextCardItem","exploreTopCenter","textAlign","exploreTopCenterText","marginHorizontal","fontWeight","lighterBar","exploreTopCenterTextActive","volumeSlider","display","descriptionCardItem","artist","artistText","releaseDate","reminderText","online","marginRight","offline","actionsCardItem","button","miniButton","smallImageStyle","playlistImage","smallNameStyle","trackStyle","flexWrap","flexShrink","settings","settingsText","filters","login","loginText","containerMessage","flex","avatar","marginVertical","paddingTop","containerProfileItem","paddingBottom","matchesProfileItem","alignSelf","matchesTextProfileItem","messageName","descriptionProfileItem","info","iconProfile","infoContent","playlistsTopRow","bg","resizeMode","position","top","title","containerHome","zIndex","containerPlaylists","borderTopLeftRadius","borderTopRightRadius","containerLiked","containerMessages","containerProfile","photo","topIconLeft","paddingLeft","topIconRight","paddingRight","actionsProfile","textButton","circledButton","roundedButton","tabButtonText","textTransform","iconMenu","errorContainer","borderBottomWidth","borderColor","testText","hasActions","image","popularity","track","index","id","SwipeCardContext","updateVolume","rgb","setPressedTrack","setShowPlaylists","showType","swiper","allowVolumeControll","recommendedIndex","setRecommendedIndex","newReleasesIndex","setNewReleasesIndex","useSpotifyContext","isPlaying","user","setIsPlaying","switchPlayingState","token","setVolume","userRecommendedTracks","recommendedTracks","newReleases","playSnippets","useSnippetContext","length","slice","isLandscape","landScapeWeb","styles","styleContainer","flexDir","style","TopRow","onPress","source","size","minimumValue","maximumValue","step","minimumTrackTintColor","maximumTrackTintColor","thumbTintColor","onValueChange","onSlidingComplete","ERROR","swipeLeft","FLASH_ACTIONS","swipeBack","DISLIKE_ACTIONS","SPOTIFY_GREEN","swipeRight","useFontAwesome","queueAndSkip","setShowType","recommendedActiveStyle","newActiveStyle","props","match","album","IMAGE_LOGIC","IMAGE_XXX","IMAGE_SKEPTA","IMAGE_BANGER","IMAGE_ODZ","IMAGE_TRAVIS","IMAGE_METALLICA","location","IMAGE_DIO","IMAGE_POST","module","exports","SpotifyAuthContext","WebBrowser","maybeCompleteAuthSession","promptAsync","getRecommendedTracks","likeSong","likedSongs","getLikedSongs","getPlaylists","playlists","addTrackToPlaylist","getNewReleases","topGenres","topArtists","topTracks","defaultPlaylist","storeDefaultPlaylist","availableMarkets","setChosenMarket","chosenMarket","setPlaySnippets","storeData","key","jsonValue","JSON","stringify","AsyncStorage","setItem","getData","getItem","parse","then","setDefaultPlaylist","getDefaultPlaylist","val","setUser","setRecommendedTracks","userPlaylists","setUserPlaylists","setLikedSongs","setNewReleases","setTopGenres","setTopArtists","setTopTracks","setAvailableMarkets","loadedDefaultPlaylist","config","setConfig","setAllowVolumeControll","pauseSnippet","playSnippet","useAuthRequest","clientId","scopes","usePKCE","clientSecret","response","useAutoExchange","type","params","code","tokenExchangeError","r","Math","floor","random","market","axios","res","albumUris","data","albums","items","forEach","item","push","sort","albumUriString","join","releases","getLocation","randomInt","tracks","images","release_date","filter","preview_url","catch","err","error","playlist","owner","display_name","a","b","playlistId","trackId","post","markets","getCountryName","nameWithFlag","put","ids","trackUri","meEndpoint","country","getTopUserItems","allArtists","allTracks","availableGenres","otherGenres","allGenres","genres","topTracksText","topArtistsText","i","recomendationEndpoint","genre","includes","randomIndex","selectedTrack","splice","selectedArtist","seedGenres","seedArtists","seedTracks","configRecommendations","seed_artists","seed_genres","seed_tracks","limit","queueSongAndSkip","both","concat","reason","playNextSong","device","COMPUTER","SMARTPHONE","warn","headers","Authorization","accessToken","getPlaybackState","getUserData","getAvailibleMarkets","getUserRecommendedTracks","navigation","navigate","DARK_GRAY","isOnline","description","age","IMAGE_01","IMAGE_02","IMAGE_03","IMAGE_04","IMAGE_05","IMAGE_06","IMAGE_07","infoPersonal","infoMusic","lastSeen","IMAGE_08","IMAGE_09","IMAGE_10","Stack","createStackNavigator","Tab","createBottomTabNavigator","ErrorProvider","SnippetProvider","SpotifyAuthProvider","NavigationContainer","Error","Navigator","screenOptions","headerStyle","cardStyle","Screen","options","headerShown","animationEnabled","component","LoginPage","tabBarOptions","showLabel","activeTintColor","PRIMARY_COLOR","inactiveTintColor","labelStyle","borderTopWidth","marginBottom","Explore","tabBarIcon","focused","iconName","text","Liked","Settings","Profile","FontAwesome","Ionicons","setRGB","pressedTrack","showPlaylists","setSwiper","useReducer","state","action","currentState","setCurrentState","isMounted","useMounted","exchangeCodeAsync","current","exchangeError","useRef","Cards","Playlists","_style","userTopItems","convertRGBgreen","d","convertRGBred","jumpToCardIndex","e","cards","renderCard","card","artists","useViewOverflow","onSwiped","cardIndex","onSwipedAborted","onSwipedAll","onSwipedRight","onSwiping","x","_y","ref","verticalSwipe","stackSize","swipeBackCard","DATA","matches","_cardIndex","infinite","lastMessage","followerCount","SafeAreaView","swipeTop","dummyDataPlaylists","require","explanation","container","textContainer","trackColor","false","true","thumbColor","ios_backgroundColor","borderBottomColor","errorTexts","showComponent","setShowComponent","setErrorTexts","popErrorText","toRef","setTimeout","clearTimeout","BG_IMAGE","numColumns","keyExtractor","toString","renderItem","CardItemSmall","Icon","DEMO","Message","mockTopGenres","mockTopArtists","mockTopTracks","ProfileItem","followers","total","BACKGROUND_IMAGE","Login","LoginMock","iconFocused","likedSongString","MockSettingItems","exampleBool","setExampleBool","header","defaultValue","SettingItemSwitch","MEDIUM","SettingItems","playlistShowValue","setPlaylistShowValue","resolve","LARGE","onSelect","find","playlistName","ddSize","dropdownNonpress","dropdownStyle","dropdown","dropdownTextHighlightStyle","dropdownTextHighlight","textStyle","showsVerticalScrollIndicator","dropdownTextStyle","dropdownText","_index","DARKER_GRAY","ErrorContext","newArray"],"mappings":"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","file":"static/js/app.e5fdf62f.chunk.js","sourcesContent":["import { Platform } from 'react-native';\nimport { makeRedirectUri } from 'expo-auth-session';\n\n// TODO: can maybe be replaced with: getRedirectUrl from expo auth session\n\n// const redirectUri = Platform.OS === 'web' ? REDIRECT_URI_WEB : REDIRECT_URI;\nconst webRedirectUri = makeRedirectUri({ scheme: 'swiperr', path: 'swiperr' });\nconst mobileRedirectUri = makeRedirectUri({ scheme: 'swiperr' });\n\nconst redirectUri = Platform.OS === 'web'\n  ? webRedirectUri\n  : mobileRedirectUri;\nconsole.log(redirectUri);\n// TODO: add all endpoints to here instead of useSpotifyAuth\nconst authorizationEndpoint = 'https://accounts.spotify.com/authorize';\nconst tokenEndpoint = 'https://accounts.spotify.com/api/token';\nconst meEndpoint = 'https://api.spotify.com/v1/me';\nconst recomendationEndpoint = 'https://api.spotify.com/v1/recommendations';\n\nconst discovery = {\n  authorizationEndpoint,\n  tokenEndpoint,\n};\n\nexport {\n  redirectUri, webRedirectUri, mobileRedirectUri, discovery, meEndpoint, recomendationEndpoint,\n};\n","import { countries } from 'country-data';\n\nexport function getCountryName(countryCode: string) {\n  const country = countries[countryCode].name;\n  return country;\n}\n\nexport function getCounryCode(contryName: string) {\n  const countryCode = countries[contryName].alpha2;\n  return countryCode;\n}\n\nexport function getCounryCodeFromLocation(locationWithFlag: string) {\n  const countryName = locationWithFlag.split(' ')[0];\n  return getCounryCode(countryName);\n}\n\nexport function getFlagEmoji(countryCode: string) {\n  const codePoints = countryCode\n    .toUpperCase()\n    .split('')\n    .map((char) => 127397 + char.charCodeAt(0));\n  return String.fromCodePoint(...codePoints);\n}\n\nexport function getLocation(countryCode: string) {\n  // get flag emoji\n  const flagEmoji = getFlagEmoji(countryCode);\n  // get country name\n  const country = countries[countryCode].name;\n  return `${country} ${flagEmoji}`;\n}\n","import CardStack from \"react-native-card-stack-swiper\";\nimport Swiper from \"react-native-deck-swiper\";\n\nexport type CardItemT = {\n  description?: string;\n  hasActions?: boolean;\n  hasVariant?: boolean;\n  image: any;\n  artist: string;\n  popularity?: string;\n  track: string;\n  previousVolume?: number;\n  setVolume?: (val: number) => void;\n  color?: string;\n  id: number,\n  releaseDate?: string;\n};\n\nexport type CardItemRowT = {\n  name: string;\n  image: any;\n}\n\n\nexport type SwipedCardContextT = {\n  volume: number;\n  updateVolume: (value: number) => void;\n  rgb: string;\n  setRGB: (value: string) => void;\n  pressedTrack: any;\n  setPressedTrack: (value: any) => void;\n  showPlaylists: boolean;\n  setShowPlaylists: (value: boolean) => void;\n  swiper: Swiper<DataSong> | null;\n  setSwiper: (value: Swiper<DataSong> | null) => void;\n  showType: string;\n  setShowType: (value: string) => void;\n  recommendedIndex: number;\n  setRecommendedIndex: (value: number) => void;\n  newReleasesIndex: number;\n  setNewReleasesIndex: (value: number) => void;\n  allowVolumeControll: boolean;\n}\n\n\nexport type IconT = {\n  name: any;\n  size: number;\n  color: string;\n  style?: any;\n  onPress?: (e: any) => void;\n  useFontAwesome?: boolean;\n};\n\nexport type MessageT = {\n  image: any;\n  lastMessage: string;\n  name: string;\n};\n\nexport type ProfileItemT = {\n  followerCount?: string;\n  topTracks?: string;\n  topArtists?: string;\n  topGenres?: string;\n  location?: string;\n  name: string;\n};\n\nexport type TabBarIconT = {\n  focused: boolean;\n  iconName: any;\n  text: string;\n};\n\nexport type DataSong = {\n  id: number;\n  track: string;\n  match: string;\n  artist: string;\n  album: string;\n  image: any;\n  location?: string;  \n};\n\n\nexport type DataProfile = {\n  id: number;\n  name: string;\n  isOnline: boolean;\n  match: string; // . How similiar is this person to you musically?\n  description: string;\n  message: string;\n  image: any;\n  age?: string;\n  infoPersonal?: string;\n  infoMusic?: string;\n  lastSeen?: string;\n  location?: string;\n  topTracks?: string;\n  topArtists?: string;\n  topGenres?: string;\n};\n\nexport type SettingItemSwitchT = {\n  text: string;\n  onValueChange: (value: boolean) => void;\n  value: boolean;\n  icon?: any;\n  explanation?: string;\n};\n\nexport type SettingItemDropdownT = {\n  header: string;\n  explanation?: string;\n  options: string[];\n  defaultValue?: string;\n  onSelect?: (value: any) => void;\n  dropdownSize?: dropdownSize;\n}\n\nexport enum dropdownSize {\n  SMALL = \"small\",\n  MEDIUM = \"medium\",\n  LARGE = \"large\",\n}\n\nexport enum DeviceType {\n  COMPUTER = \"Computer\",\n  SMARTPHONE = \"Smartphone\",\n  SPEAKER = \"speaker\",\n}","import React, { useContext, useEffect, useState } from 'react';\nimport { Audio } from 'expo-av';\nimport useError from './useError';\n\nconst snippetContext: React.Context<{\n  addTrackAndPlay: (url: string) => Promise<void>,\n  pause: () => Promise<void>,\n  play: () => Promise<void>,\n  replay: () => Promise<void>\n}> = React.createContext({\n  addTrackAndPlay: (url: string) => new Promise<void>(() => {}),\n  pause: () => new Promise<void>(() => {}),\n  play: () => new Promise<void>(() => {}),\n  replay: () => new Promise<void>(() => {}),\n});\n\ninterface Props {\n  children: React.ReactNode\n}\n\nexport const SnippetProvider: React.ReactNode = ({ children }: Props) => {\n  const [audio, setAudio] = useState<Audio.Sound | null>(null);\n\n  // useErrorContext\n  const { addErrorText } = useError();\n\n\n  const addTrackAndPlay = async (url: string) => {\n    // console.log('Loading Sound');\n\n    // wait for pause then play\n    const { sound } = await Audio.Sound.createAsync(\n      { uri: url },\n      {\n        shouldPlay: true,\n        isLooping: false,\n        isMuted: false,\n        volume: 1,\n      },\n    );\n    setAudio(sound);  \n  };\n  const play = async () => {\n    try{\n      if (audio) {\n        await audio.playAsync();\n      }\n    }\n    catch(e){\n      addErrorText(e.message);\n    }\n  };\n\n  const pause = async () => {\n    try{\n      if (audio) {\n        await audio.pauseAsync();\n      }\n    }\n    catch(e){\n      addErrorText(e.message);\n    } \n  };\n\n  const replay = async () => {\n    if (audio) {\n      await audio.stopAsync();\n      await audio.playAsync();\n    } \n  }\n\n  useEffect(() => (audio\n    ? () => {\n      // console.log('Unloading audio');\n      audio.unloadAsync();\n    }\n    : undefined), [audio]);\n\n  return (\n    <snippetContext.Provider value={{\n      addTrackAndPlay,\n      pause,\n      play,\n      replay,\n    }}\n    >\n      {children}\n    </snippetContext.Provider>\n  );\n};\n\nexport default function useSnippetContext() {\n  // console.log('Using Native snippets');\n  return useContext(snippetContext);\n}\n","import { StyleSheet, Dimensions } from 'react-native';\n\nexport const PRIMARY_COLOR = '#7444C0';\nexport const SECONDARY_COLOR = '#5636B8';\nexport const WHITE = '#FFFFFF';\nexport const GRAY = '#757E90';\nexport const DARK_GRAY = '#363636'; // rgb(54, 54, 54)\nexport const BLACK = '#000000';\nexport const DARKER_GRAY = '#303030';\nexport const SPOTIFY_GREEN = '#1DB954';\n\nexport const ONLINE_STATUS = '#46A575';\nexport const OFFLINE_STATUS = '#D04949';\n\nexport const STAR_ACTIONS = '#FFA200';\nexport const LIKE_ACTIONS = '#B644B2';\nexport const DISLIKE_ACTIONS = '#363636';\nexport const FLASH_ACTIONS = '#5028D7';\n\nexport const ERROR = '#770707';\n\nexport const DIMENSION_WIDTH = Dimensions.get('window').width; // window not screen\nexport const DIMENSION_HEIGHT = Dimensions.get('window').height;\n\nexport const CARD_HEIGHT = (DIMENSION_HEIGHT - 50) * 0.9;\n\nexport default StyleSheet.create({\n  // COMPONENT - CARD ITEM\n  containerCardItem: {\n    backgroundColor: DARK_GRAY,\n    borderRadius: 20,\n    borderWidth: 1,\n    // borderColor: SPOTIFY_GREEN,\n    height: CARD_HEIGHT,\n    alignItems: 'center',\n    elevation: 1,\n    shadowOpacity: 0.05,\n    shadowRadius: 10,\n    shadowColor: BLACK,\n    shadowOffset: { height: 0, width: 0 },\n    // center children\n    justifyContent: 'center',\n    marginTop: -30,\n    marginLeft: -25,\n\n  },\n\n  imageStyle: {\n    borderRadius: 8,\n    width: DIMENSION_WIDTH - 80,\n    height: CARD_HEIGHT / 2,\n    margin: 20,\n  },\n\n  loginImageStyle: {\n    width: '90%',\n    height: 400,\n  },\n\n  containerCardItemWeb: {\n    width: DIMENSION_WIDTH - 40,\n    height: CARD_HEIGHT,\n    padding: 0,\n\n  },\n\n  containerCardItemSmall: {\n    backgroundColor: DARK_GRAY,\n    borderRadius: 8,\n    alignItems: 'center',\n    margin: 10,\n    elevation: 1,\n    shadowOpacity: 0.05,\n    shadowRadius: 10,\n    shadowColor: BLACK,\n    shadowOffset: { height: 0, width: 0 },\n    width: (DIMENSION_WIDTH / 2) - 30,\n    // center children\n    justifyContent: 'center',\n  },\n\n  containerCardItemRow: {\n    backgroundColor: DARK_GRAY,\n    borderRadius: 2,\n    flexDirection: 'row',\n    alignItems: 'center',\n    margin: 10,\n    elevation: 1,\n    shadowOpacity: 0.05,\n    shadowRadius: 10,\n    shadowColor: BLACK,\n    shadowOffset: { height: 0, width: 0 },\n    width: DIMENSION_WIDTH - 30,\n  },\n  playlistText: {\n    fontSize: 30,\n    color: WHITE,\n    marginLeft: '5%',\n  },\n\n  matchesCardItem: {\n    marginTop: -35,\n    backgroundColor: PRIMARY_COLOR,\n    paddingVertical: 7,\n    paddingHorizontal: 20,\n    borderRadius: 20,\n  },\n  matchesTextCardItem: {\n    color: WHITE,\n  },\n\n  exploreTopCenter: {\n    textAlign: 'center',\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n\n  exploreTopCenterText: {\n    color: GRAY,\n    fontSize: 20,\n    marginHorizontal: 10,\n    fontWeight: 'bold',\n  },\n\n  lighterBar: {\n    fontWeight: 'normal',\n  },\n\n  exploreTopCenterTextActive: {\n    color: WHITE,\n  },\n\n  volumeSlider: {\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  descriptionCardItem: {\n    color: GRAY,\n    textAlign: 'center',\n  },\n  artist: {\n    alignItems: 'center',\n    textAlign: 'center',\n  },\n  artistText: {\n    color: GRAY,\n    fontSize: 20,\n    textAlign: 'center',\n    fontWeight: 'bold',\n  },\n\n  releaseDate: {\n    color: GRAY,\n    fontSize: 15,\n    textAlign: 'center',\n  },\n\n  reminderText: {\n    color: GRAY,\n    fontSize: 15,\n    textAlign: 'center',\n  },\n  online: {\n    width: 6,\n    height: 6,\n    backgroundColor: ONLINE_STATUS,\n    borderRadius: 3,\n    marginRight: 4,\n  },\n  offline: {\n    width: 6,\n    height: 6,\n    backgroundColor: OFFLINE_STATUS,\n    borderRadius: 3,\n    marginRight: 4,\n  },\n  actionsCardItem: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingVertical: 5,\n  },\n  button: {\n    width: 60,\n    height: 60,\n    borderRadius: 30,\n    backgroundColor: WHITE,\n    marginHorizontal: 7,\n    alignItems: 'center',\n    justifyContent: 'center',\n    elevation: 1,\n    shadowOpacity: 0.15,\n    shadowRadius: 20,\n    shadowColor: DARK_GRAY,\n    shadowOffset: { height: 10, width: 0 },\n  },\n  miniButton: {\n    width: 45,\n    height: 45,\n    borderRadius: 30,\n    backgroundColor: WHITE,\n    marginHorizontal: 7,\n    alignItems: 'center',\n    justifyContent: 'center',\n    elevation: 1,\n    shadowOpacity: 0.15,\n    shadowRadius: 20,\n    shadowColor: DARK_GRAY,\n    shadowOffset: { height: 10, width: 0 },\n  },\n  // SMALL CARD (CARDITEMSMALL)\n  smallImageStyle: {\n    borderRadius: 8,\n    // width: DIMENSION_WIDTH / 2 - 40 ,\n    width: '100%',\n    height: 170,\n    margin: 0,\n    flexDirection: 'column',\n  },\n  playlistImage: {\n    borderRadius: 2,\n    height: 120,\n    width: 120,\n    margin: 0,\n  },\n\n  smallNameStyle: {\n    color: WHITE,\n    fontSize: 15,\n    textAlign: 'center',\n    fontWeight: 'bold',\n  },\n  // LARGE CARD (CARDITEM)\n\n  trackStyle: {\n    color: WHITE,\n    width: '100%',\n    textAlign: 'center',\n    flexWrap: 'wrap',\n    flexShrink: 1,\n    fontSize: 25,\n    fontWeight: 'bold',\n  },\n\n  // COMPONENT - SETTINGS\n  settings: {\n    backgroundColor: WHITE,\n    padding: 10,\n    borderRadius: 20,\n    width: 40,\n    elevation: 1,\n    shadowOpacity: 0.05,\n    shadowRadius: 10,\n    shadowColor: BLACK,\n    shadowOffset: { height: 0, width: 0 },\n  },\n  settingsText: {\n    color: DARK_GRAY,\n    fontSize: 13,\n    textAlign: 'center',\n  },\n\n  // COMPONENT - FILTERS\n  filters: {\n    backgroundColor: WHITE,\n    padding: 10,\n    borderRadius: 20,\n    width: 40,\n    elevation: 1,\n    shadowOpacity: 0.05,\n    shadowRadius: 10,\n    shadowColor: BLACK,\n    shadowOffset: { height: 0, width: 0 },\n    alignItems: 'center',\n  },\n\n  login: {\n    backgroundColor: WHITE,\n    padding: 10,\n    borderRadius: 20,\n    width: 160,\n    height: 50,\n    elevation: 1,\n    shadowOpacity: 0.05,\n    shadowRadius: 10,\n    shadowColor: BLACK,\n    shadowOffset: { height: 0, width: 0 },\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n\n  loginText: {\n    // center the text\n    color: DARK_GRAY,\n    fontSize: 30,\n    textAlign: 'center',\n    // bold\n    fontWeight: 'bold',\n  },\n\n  // COMPONENT - MESSAGE\n  containerMessage: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    flexDirection: 'row',\n    paddingHorizontal: 10,\n    width: DIMENSION_WIDTH - 100,\n  },\n  avatar: {\n    borderRadius: 30,\n    width: 60,\n    height: 60,\n    marginRight: 20,\n    marginVertical: 15,\n  },\n  message: {\n    color: GRAY,\n    fontSize: 12,\n    paddingTop: 5,\n  },\n\n  // COMPONENT - PROFILE ITEM\n  containerProfileItem: {\n    backgroundColor: '#232323',\n    paddingHorizontal: 10,\n    paddingBottom: 25,\n    margin: 20,\n    borderRadius: 8,\n    marginTop: -65,\n    elevation: 1,\n    shadowOpacity: 0.05,\n    shadowRadius: 10,\n    shadowColor: BLACK,\n    shadowOffset: { height: 0, width: 0 },\n  },\n  matchesProfileItem: {\n    width: 135,\n    marginTop: -15,\n    backgroundColor: PRIMARY_COLOR,\n    paddingVertical: 7,\n    paddingHorizontal: 20,\n    borderRadius: 20,\n    alignSelf: 'center',\n  },\n  matchesTextProfileItem: {\n    color: WHITE,\n    textAlign: 'center',\n  },\n  name: {\n    paddingTop: 25,\n    paddingBottom: 5,\n    color: WHITE,\n    fontSize: 15,\n    textAlign: 'center',\n  },\n  messageName: {\n    paddingTop: 25,\n    paddingBottom: 5,\n    color: WHITE,\n    fontSize: 15,\n    textAlign: 'left',\n  },\n  descriptionProfileItem: {\n    color: GRAY,\n    textAlign: 'center',\n    paddingBottom: 20,\n    fontSize: 13,\n  },\n  info: {\n    paddingVertical: 8,\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  iconProfile: {\n    fontSize: 12,\n    color: DARK_GRAY,\n    paddingHorizontal: 10,\n  },\n  infoContent: {\n    color: GRAY,\n    fontSize: 13,\n  },\n\n  playlistsTopRow: {\n    flexDirection: 'row',\n    width: '90%',\n    marginLeft: '5%',\n    marginRight: '5%',\n    // vertically align items center\n    alignItems: 'center',\n  },\n\n  // CONTAINER - GENERAL\n  bg: {\n    flex: 1,\n    resizeMode: 'cover',\n    width: DIMENSION_WIDTH,\n    height: DIMENSION_HEIGHT,\n    position: 'absolute',\n  },\n  top: {\n    paddingTop: 50,\n    marginHorizontal: 10,\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    textAlign: 'center',\n    // text size 20\n\n  },\n  title: {\n    paddingBottom: 10,\n    fontSize: 22,\n    color: WHITE,\n    fontWeight: 'bold',\n    textAlign: 'center',\n    width: '100%',\n  },\n\n  // CONTAINER - HOME\n  containerHome: {\n    marginHorizontal: 10,\n    zIndex: 1,\n    elevation: 1,\n    // display: \"none\",\n  },\n\n  containerPlaylists: {\n    flex: 1,\n    backgroundColor: WHITE,\n    marginTop: 200 - CARD_HEIGHT,\n    borderTopLeftRadius: 20,\n    borderTopRightRadius: 20,\n    borderRadius: 6,\n    zIndex: 3,\n    elevation: 3,\n  },\n\n  // CONTAINER - MATCHES\n  containerLiked: {\n    justifyContent: 'space-between',\n    flex: 1,\n    paddingHorizontal: 10,\n  },\n\n  // CONTAINER - MESSAGES\n  containerMessages: {\n    justifyContent: 'space-between',\n    flex: 1,\n    paddingHorizontal: 10,\n  },\n\n  // CONTAINER - PROFILE\n  containerProfile: { marginHorizontal: 0 },\n  photo: {\n    width: DIMENSION_WIDTH,\n    height: 450,\n  },\n  topIconLeft: {\n    paddingLeft: 20,\n  },\n  topIconRight: {\n    paddingRight: 20,\n  },\n  actionsProfile: {\n    justifyContent: 'center',\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  textButton: {\n    fontSize: 15,\n    color: WHITE,\n    paddingLeft: 5,\n  },\n  circledButton: {\n    width: 50,\n    height: 50,\n    borderRadius: 25,\n    backgroundColor: PRIMARY_COLOR,\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginRight: 10,\n  },\n  roundedButton: {\n    justifyContent: 'center',\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginLeft: 10,\n    height: 50,\n    borderRadius: 25,\n    backgroundColor: SECONDARY_COLOR,\n    paddingHorizontal: 20,\n  },\n\n  // MENU\n  tabButtonText: {\n    textTransform: 'uppercase',\n  },\n  iconMenu: {\n    alignItems: 'center',\n  },\n  errorContainer: {\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n    zIndex: 1,\n    elevation: 1,\n    height: 100,\n    position: 'absolute',\n    backgroundColor: ERROR,\n    borderBottomWidth: 1,\n    borderColor: 'red',\n    width: '100%',\n  },\n\n  testText: {\n    color: 'red',\n    fontSize: 15,\n    textAlign: 'center',\n    width: '100%',\n  },\n\n});\n","import React, { useContext } from 'react';\nimport {\n  Text, View, Image, TouchableOpacity, Platform,\n} from 'react-native';\nimport Slider from '@react-native-community/slider';\nimport Icon from '../Icon';\nimport { CardItemT, SwipedCardContextT } from '../../types';\n\nimport styles, {\n  DIMENSION_HEIGHT,\n  DIMENSION_WIDTH,\n  DISLIKE_ACTIONS,\n  ERROR,\n  FLASH_ACTIONS,\n  SPOTIFY_GREEN,\n  WHITE,\n} from '../../assets/styles';\nimport { SwipeCardContext } from './CardProvider';\nimport useSpotifyContext from '../../hooks/useSpotifyAuth';\nimport { TopRow } from './Cards';\nimport useSnippetContext from '../../hooks/useSnippet';\n\nfunction CardItem({\n  hasActions,\n  image,\n  artist,\n  popularity,\n  track,\n  releaseDate,\n  id: index,\n\n}: CardItemT) {\n  const {\n    volume, updateVolume, rgb, setPressedTrack, setShowPlaylists, showType,\n    swiper, allowVolumeControll,\n    recommendedIndex,\n    setRecommendedIndex,\n    newReleasesIndex,\n    setNewReleasesIndex,\n  } = useContext(SwipeCardContext) as SwipedCardContextT;\n  const {\n    user,\n    isPlaying,\n    setIsPlaying,\n    switchPlayingState,\n    token,\n    setVolume,\n    recommendedTracks: userRecommendedTracks,\n    newReleases,\n    playSnippets,\n\n  } = useSpotifyContext();\n\n  const { replay } = useSnippetContext();\n\n  if (track.length > 25) {\n    track = `${track.slice(0, 25)}...`;\n  }\n\n  const isLandscape = () => DIMENSION_WIDTH >= DIMENSION_HEIGHT && Platform.OS === 'web';\n\n  const landScapeWeb = isLandscape() ? styles.containerCardItemWeb : {};\n\n  const styleContainer = [styles.containerCardItem, { backgroundColor: rgb }, landScapeWeb];\n  const flexDir = isLandscape() ? 'row' : 'column';\n  return (\n    <View style={styleContainer}>\n      {/* IMAGE */}\n      <TopRow />\n      <TouchableOpacity style={{ flexDirection: flexDir }} onPress={replay}>\n        <Image source={image} style={styles.imageStyle} />\n      </TouchableOpacity>\n      <View style={styles.matchesCardItem}>\n        <Text style={styles.matchesTextCardItem}>\n          <Icon name=\"heart\" color={WHITE} size={13} />\n          {' '}\n          {popularity || '0'}\n          % Popularity\n        </Text>\n      </View>\n\n      {/* NAME */}\n\n      <Text style={styles.trackStyle}>{track}</Text>\n\n      <View style={styles.artist}>\n        <Text style={styles.artistText}>{artist}</Text>\n        {releaseDate && (\n          <Text style={styles.releaseDate}>{releaseDate}</Text>\n        )}\n      </View>\n      <View style={{ flexDirection: flexDir }}>\n        {(allowVolumeControll && !playSnippets) || showType == 'mock' && (\n        <View style={styles.volumeSlider}>\n          <Icon name=\"md-volume-low\" color={WHITE} size={20} />\n          <Slider\n            style={{ width: 200, height: 10 }}\n            minimumValue={0}\n            maximumValue={100}\n            step={1}\n            minimumTrackTintColor=\"#FFFFFF\"\n            maximumTrackTintColor=\"#000000\"\n            thumbTintColor=\"#FFFFFF\"\n            value={volume}\n            onValueChange={(value: number) => {\n              updateVolume(value);\n            // Cant set volume here due to exceeding API rate limit\n            }}\n            onSlidingComplete={(value: number) => {\n              if (token) {\n                setVolume(value);\n              }\n            }}\n          />\n          <Icon name=\"md-volume-high\" color={WHITE} size={20} />\n        </View>\n        )}\n\n        {/* ACTIONS */}\n        {hasActions && (\n        <View style={styles.actionsCardItem}>\n\n          <TouchableOpacity style={styles.miniButton}>\n            <Icon\n              name=\"close\"\n              color={ERROR}\n              size={20}\n              onPress={() => {\n                swiper?.swipeLeft();\n              }}\n\n            />\n          </TouchableOpacity>\n          <TouchableOpacity style={styles.miniButton}>\n            <Icon\n              name=\"reload\"\n              color={FLASH_ACTIONS}\n              size={20}\n              onPress={() => {\n                swiper?.swipeBack();\n                setRecommendedIndex(recommendedIndex - 2);\n                setNewReleasesIndex(newReleasesIndex - 2);\n              }}\n\n            />\n          </TouchableOpacity>\n\n          <TouchableOpacity style={styles.button}>\n            {isPlaying\n              ? (\n                <Icon\n                  name=\"pause\"\n                  color={DISLIKE_ACTIONS}\n                  size={30}\n                  onPress={() => {\n                    if (token) { // user is logged in\n                      switchPlayingState();\n                    } else { // user is not logged in switch icon for mock page\n                      setIsPlaying(!isPlaying);\n                    }\n                  }}\n                />\n              )\n              : (\n                <Icon\n                  name=\"play\"\n                  color={DISLIKE_ACTIONS}\n                  size={30}\n                  onPress={() => {\n                    if (token) {\n                      switchPlayingState();\n                    } else { // user is not logged in switch icon for mock page\n                      setIsPlaying(!isPlaying);\n                    }\n                  }}\n                />\n              )}\n\n          </TouchableOpacity>\n          <TouchableOpacity style={styles.miniButton}>\n            <Icon\n              name=\"add\"\n              color={FLASH_ACTIONS}\n              size={20}\n              onPress={() => {\n                if (token) {\n                  if (showType === 'recommended') {\n                    setPressedTrack(userRecommendedTracks[index]);\n                  } else if (showType === 'new') {\n                    setPressedTrack(newReleases[index]);\n                  } else {\n                    console.log('invalid showType');\n                  }\n                }\n\n                setShowPlaylists(true);\n              }}\n            />\n\n          </TouchableOpacity>\n          <TouchableOpacity style={styles.miniButton}>\n            <Icon\n              name=\"heart-o\"\n              color={SPOTIFY_GREEN}\n              size={20}\n              onPress={() => {\n                swiper?.swipeRight();\n              }}\n              useFontAwesome\n            />\n          </TouchableOpacity>\n\n        </View>\n        )}\n      </View>\n      {playSnippets ? (\n        <View style={{ flexDirection: flexDir }}>\n          <Text style={[styles.reminderText, { fontSize: 15 }]}>\n            You are currently playing snippets. Theese are 30 second snippets of songs.\n            Pausing the snippet may cause issues.\n          </Text>\n        </View>\n      ) : (\n        <View style={{ flexDirection: flexDir }}>\n          <Text style={[styles.reminderText, { fontSize: 15 }]}>\n            You need to have the spotify app active to use this mode.\n            Try playing and pausing your current spotify song, and make sure your queue is empty.\n          </Text>\n        </View>\n      )}\n    </View>\n  );\n}\n\nexport default CardItem;\n","import { View, Text, TouchableOpacity } from 'react-native';\nimport React, { useContext } from 'react';\nimport styles from '../../assets/styles';\nimport useSpotifyContext from '../../hooks/useSpotifyAuth';\nimport CardStackHandler from './CardStackHandler';\nimport { SwipeCardContext } from './CardProvider';\nimport { SwipedCardContextT } from '../../types';\n\ntype Props = {}\n\nexport function TopRow() {\n  const {\n    user, queueAndSkip, recommendedTracks: userRecommendedTracks, newReleases,\n  } = useSpotifyContext();\n\n  const {\n    showType, setShowType, recommendedIndex, newReleasesIndex,\n  } = useContext(SwipeCardContext) as SwipedCardContextT;\n\n  const recommendedActiveStyle = showType === 'recommended' ? styles.exploreTopCenterTextActive : {};\n  const newActiveStyle = showType === 'new' ? styles.exploreTopCenterTextActive : {};\n\n  return (\n    <View>\n      {user ? (\n        <View style={styles.exploreTopCenter}>\n          <TouchableOpacity onPress={() => {\n            if (showType !== 'recommended' && userRecommendedTracks) {\n              setShowType('recommended');\n              queueAndSkip(userRecommendedTracks[recommendedIndex]);\n            }\n          }}\n          >\n            <Text style={[styles.exploreTopCenterText, recommendedActiveStyle]}>\n              Recommended\n            </Text>\n          </TouchableOpacity>\n          <Text style={[styles.exploreTopCenterText]}>\n            |\n          </Text>\n          <TouchableOpacity onPress={() => {\n            if (showType !== 'new' && newReleases) {\n              setShowType('new');\n              queueAndSkip(newReleases[newReleasesIndex]);\n            }\n          }}\n          >\n            <Text style={[styles.exploreTopCenterText, newActiveStyle]}>\n              New Releases\n            </Text>\n          </TouchableOpacity>\n        </View>\n      ) : (\n        <View style={styles.exploreTopCenter}>\n          <TouchableOpacity onPress={() => {\n            setShowType('recommended');\n          }}\n          >\n            <Text style={[styles.exploreTopCenterText, recommendedActiveStyle]}>\n              Recommended\n            </Text>\n          </TouchableOpacity>\n          <Text style={[styles.exploreTopCenterText, styles.lighterBar]}>\n            |\n          </Text>\n          <TouchableOpacity\n            onPress={() => { setShowType('new'); }}\n          >\n            <Text style={[styles.exploreTopCenterText, newActiveStyle]}>\n              New Releases\n            </Text>\n          </TouchableOpacity>\n        </View>\n      )}\n    </View>\n  );\n}\n\nfunction Cards(props: Props) {\n  return (\n    <View style={styles.containerHome}>\n      {/* <View style={styles.top}> */}\n      {/* <Settings /> */}\n      {/* <TopRow /> */}\n      {/* <Filters /> */}\n      {/* </View> */}\n      <CardStackHandler />\n    </View>\n  );\n}\n\nexport default Cards;\n","import { DataSong } from \"../../types\";\nimport IMAGE_LOGIC from \"../images/logic.jpg\";\nimport IMAGE_XXX from \"../images/xxx.jpg\";\nimport IMAGE_SKEPTA from \"../images/skepta.jpg\";\nimport IMAGE_ODZ from \"../images/odz.jpg\";\nimport IMAGE_DIO from \"../images/dio.jpg\";\nimport IMAGE_POST from \"../images/post.jpg\";\nimport IMAGE_METALLICA from \"../images/metallica.jpg\";\n//import IMAGE_TYLER from  \".../images/tyler.jpg\";\nimport IMAGE_TRAVIS from \"../images/travis.jpg\";\nimport IMAGE_BANGER from \"../images/banger.jpg\";\n\n\nconst data: DataSong[] = [\n  {\n    id: 1,\n    track: \"The Return\",\n    match: \"78\",\n    artist: \"Logic\",\n    album: \"The Return\",\n    image: IMAGE_LOGIC,\n\n  },\n  {\n    id: 2,\n    track: \"SAD!\",\n    match: \"93\",\n    artist: \"XXXTentacion\",\n    album: \"?\",\n    image: IMAGE_XXX,\n  },\n  {\n    id: 3,\n    track: \"Bullet From A Gun\",\n    match: \"45\",\n    artist: \"skepta\",\n    album: \"Ignorance is bliss\",\n    image: IMAGE_SKEPTA,\n  },\n  {\n    id: 4,\n    track: \"Summer of Our Lives\",\n    match: \"88\",\n    artist: \"waykap, Emmi\",\n    album: \"Summer of Our Lives\",\n    image: IMAGE_BANGER,\n  },\n  {\n    id: 5,\n    track: \"Ostron\",\n    match: \"76\",\n    artist: \"Frej Larsson, ODZ, Canto\",\n    album: \"Bland streckgubbar och linjemän\",\n    image: IMAGE_ODZ,\n  },\n  {\n    id: 6,\n    track: \"SICKO MODE\",\n    match: \"95\",\n    artist: \"Travis Scott\",\n    album: \"ASTROWORLD\",\n    image: IMAGE_TRAVIS,\n  },\n  {\n    id: 7,\n    track: \"ONE\",\n    match: \"67\",\n    artist: \"Metallica\",\n    album: \"...And Justice for None\",\n    image: IMAGE_METALLICA,\n  },\n  {\n    id: 8,\n    track: \"Holy Diver\",\n    match: \"85\",\n    artist: \"Dio\",\n    location: \"Irvine, CA\",\n    album: \"Holy Diver\",\n    image: IMAGE_DIO,\n  },\n  {\n    id: 9,\n    track: \"EARFQUACK\",\n    match: \"74\",\n    artist: \"Tyler, The Creator\",\n    album: \"IGOR\",\n    image: IMAGE_DIO,\n  },\n  {\n    id: 10,\n    track: \"Congratulations\",\n    match: \"98\",\n    artist: \"Post Malone\",\n    album: \"Stoney\",\n    image: IMAGE_POST,\n  },\n];\n\nexport default data;\n","module.exports = __webpack_public_path__ + \"static/media/logic.e98d400e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/skepta.f0f62bb2.jpg\";","module.exports = __webpack_public_path__ + \"static/media/odz.a48909a6.jpg\";","module.exports = __webpack_public_path__ + \"static/media/dio.6a2fb57d.jpg\";","import React, { createContext, useContext, useState } from 'react';\nimport { useAuthRequest } from 'expo-auth-session';\nimport * as WebBrowser from 'expo-web-browser';\nimport { CLIENT_ID, CLIENT_SECRET } from '@env';\nimport axios from 'axios';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport useAutoExchange from './useAutoExchange';\nimport {\n  discovery, redirectUri, meEndpoint, recomendationEndpoint,\n} from './utils/auth-utils';\nimport useError from './useError';\nimport { getCountryName, getLocation } from '../components/utils/country-utils';\nimport { DeviceType } from '../types';\nimport useSnippetContext from './useSnippet';\n\nWebBrowser.maybeCompleteAuthSession();\n\nconst SpotifyAuthContext: React.Context<{\n  promptAsync: any\n  token: any,\n  user: any,\n  recommendedTracks: any,\n  getUserRecommendedTracks: any,\n  likeSong: any,\n  info: any,\n  queueAndSkip: any,\n  isPlaying: any,\n  setIsPlaying: any,\n  switchPlayingState: any,\n  setVolume: any,\n  likedSongs: any,\n  getLikedSongs: any,\n  getPlaylists: any,\n  playlists: any,\n  addTrackToPlaylist: any,\n  newReleases: any,\n  getNewReleases: any,\n  topGenres: string,\n  topArtists: string,\n  topTracks: string,\n  defaultPlaylist: any,\n  storeDefaultPlaylist: any,\n  availableMarkets: any,\n  setChosenMarket: any,\n  chosenMarket: any,\n  allowVolumeControll: any,\n  playSnippets: any,\n  setPlaySnippets: any,\n  pause: any,\n}> = createContext({\n  promptAsync: null,\n  token: null,\n  user: null,\n  recommendedTracks: null,\n  getRecommendedTracks: null,\n  likeSong: null,\n  info: null,\n  queueAndSkip: null,\n  isPlaying: null,\n  setIsPlaying: null,\n  switchPlayingState: null,\n  setVolume: null,\n  likedSongs: null,\n  getLikedSongs: null,\n  getPlaylists: null,\n  playlists: null,\n  addTrackToPlaylist: null,\n  newReleases: null,\n  getNewReleases: null,\n  topGenres: '',\n  topArtists: '',\n  topTracks: '',\n  defaultPlaylist: null,\n  storeDefaultPlaylist: null,\n  availableMarkets: null,\n  setChosenMarket: null,\n  chosenMarket: null,\n  allowVolumeControll: true,\n  playSnippets: true,\n  setPlaySnippets: null,\n  pause: null,\n});\n\nWebBrowser.maybeCompleteAuthSession();\n\nconst likeSongString = 'Liked songs';\n\ninterface Props {\n  children: React.ReactNode\n}\n\nconst storeData = async (key: string, value: string) => {\n  try {\n    const jsonValue = JSON.stringify(value);\n    await AsyncStorage.setItem(key, jsonValue);\n  } catch (e) {\n    console.log('failed to store data:', e);\n  }\n};\n\nconst getData = async (key: string) => {\n  try {\n    const jsonValue = await AsyncStorage.getItem(key);\n    return jsonValue != null ? JSON.parse(jsonValue) : null;\n  } catch (e) {\n    // error reading value\n    console.log('failed to get data:', e);\n  }\n};\n\nexport const SpotifyAuthProvider: React.ReactNode = ({ children }: Props) => {\n  const storeDefaultPlaylist = async (value: string) => {\n    const key = '@defaultPlaylist';\n    storeData(key, value).then();\n    setDefaultPlaylist(value);\n  };\n  const getDefaultPlaylist = async () => {\n    const key = '@defaultPlaylist';\n    const val = getData(key);\n    return val;\n  };\n\n  const [user, setUser] = useState(null);\n  const [recommendedTracks, setRecommendedTracks] = useState([]);\n  const [userPlaylists, setUserPlaylists] = useState(null);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [likedSongs, setLikedSongs] = useState(null);\n  const [newReleases, setNewReleases] = useState<any[] | null>(null);\n  const [topGenres, setTopGenres] = useState<string>('Genre 1, Genre 2, Genre 3');\n  const [topArtists, setTopArtists] = useState<string>('Artist 1, Artist 2, Artist 3');\n  const [topTracks, setTopTracks] = useState<string>('Track 1, Track 2, Track 3');\n  const [availableMarkets, setAvailableMarkets] = useState(null);\n  const [chosenMarket, setChosenMarket] = useState<string | null>(null);\n\n  const loadedDefaultPlaylist = getDefaultPlaylist().then((val: any) => {return val}) || likeSongString;\n  const [defaultPlaylist, setDefaultPlaylist] = useState<any>(loadedDefaultPlaylist); // Either equal to liked songs or a playlist uri\n  \n  const [config, setConfig] = useState<any>(null);\n  const [allowVolumeControll, setAllowVolumeControll] = useState<boolean>(true);\n  const [playSnippets, setPlaySnippets] = useState<boolean>(true);\n\n  const { addTrackAndPlay, pause: pauseSnippet, play: playSnippet } = useSnippetContext();\n  const { addErrorText } = useError();\n\n  const [request, response, promptAsync] = useAuthRequest({\n    clientId: CLIENT_ID,\n    scopes: ['user-read-email', 'user-read-private', 'user-top-read', 'user-library-read',\n      'user-library-modify', 'playlist-read-private', 'playlist-read-collaborative',\n      'user-read-playback-state', 'user-modify-playback-state',\n      'app-remote-control', 'playlist-modify-private', 'playlist-modify-public',\n    ],\n    /*\n      In order to follow the 'Authorization Code Flow',\n      to fetch token after authorizationEndpoint,\n      this must be set to false\n    */\n    usePKCE: false,\n    redirectUri,\n    clientSecret: CLIENT_SECRET,\n  }, discovery);\n\n  const songCount = 20; // has to be 20 due to /albums/{ids} can only have 20 ids\n\n  // Token will be auto exchanged after auth completes.\n  const { token, tokenExchangeError: exchangeError } = useAutoExchange(\n    response?.type === 'success' ? response.params.code : undefined,\n  );\n\n  async function getNewReleases() {\n    const r = Math.floor(Math.random() * 100);\n    const market = chosenMarket || 'US';\n    await axios.get(`https://api.spotify.com/v1/browse/new-releases?limit=${songCount}&country=${chosenMarket}&offset${r}`, config)\n      .then((res) => {\n        const albumUris: string[] = [];\n        res.data.albums.items.forEach((item: any) => {\n          albumUris.push(item.id);\n        });\n        albumUris.sort(() => 0.5 - Math.random());\n        const reducedAlbumUris = albumUris.slice(0, 20);\n\n        const albumUriString = reducedAlbumUris.join();\n        let releases: any[] = [];\n        axios.get(`https://api.spotify.com/v1/albums?ids=${albumUriString}`, config)\n          .then((res) => {\n            console.log('New releases in', getLocation(market), res.data);\n            res.data.albums.forEach((album: any) => {\n              const randomInt = Math.floor(Math.random() * album.tracks.items.length);\n              const item = album.tracks.items[randomInt];\n              item.images = album.images;\n              item.releaseDate = album.release_date;\n              item.id = album.tracks.items[randomInt].uri.split(':')[2]; // WATNING SHAKY\n              releases.push(item);\n            });\n            releases.sort(() => Math.random() - 0.5);\n            if (playSnippets) {\n              releases = releases.filter((\n                track: { preview_url: string | null ; },\n              ) => track.preview_url !== null);\n            }\n            setNewReleases(releases);\n          })\n          .catch((err) => {\n            console.log(err);\n            addErrorText(err.response.data.error.message);\n          });\n      })\n      .catch((err) => {\n        console.log(err);\n        addErrorText(err.response.data.error.message);\n      });\n  }\n\n  async function getPlaylists() {\n    await axios.get(`https://api.spotify.com/v1/me/playlists?limit=${50}`, config)\n      .then((res) => {\n        // Todo improve this to filter on user id aswell\n        const playlists = res.data.items.filter((playlist: any) => playlist.owner.display_name !== 'Spotify');\n\n        playlists.sort((a: any, b: any) => {\n          if (a.name < b.name) {\n            return -1;\n          }\n          if (a.name > b.name) {\n            return 1;\n          }\n          return 0;\n        });\n        // console.log('Playlists: ', playlists);\n        setUserPlaylists(playlists);\n      })\n      .catch((err) => {\n        console.log('Error Playlist: ', err);\n        addErrorText(err.response.data.error.message);\n      });\n  }\n\n  async function addTrackToPlaylist(playlistId: string, trackId: string) {\n    // console.log('OOO', accessToken, playlistId, trackId);\n    // If this is set to .put instead of .post it will erase the whole playlist\n    // Soooo... dont do that\n    await axios.post(`https://api.spotify.com/v1/playlists/${playlistId}/tracks?uris=${trackId}`, {}, config)\n      .then((res) => {\n        console.log('Added track to playlist: ', res.data);\n      })\n      .catch((err) => {\n        console.log('Error adding track to playlist: ', err);\n        addErrorText(err.response.data.error.message);\n      });\n  }\n\n  async function getAvailibleMarkets() {\n    await axios.get('https://api.spotify.com/v1/markets', config)\n      .then((res) => {\n        const countryCodes = res.data.markets;\n        // map each country code to its country name\n        let countries = countryCodes.map((countryCode: string) => ({\n          code: countryCode,\n          name: getCountryName(countryCode),\n          nameWithFlag: getLocation(countryCode),\n        }));\n        // sort countries alphabetically\n        countries = countries.sort((a: {code: string, name: string}, b: {code: string, name: string}) => {\n          if (a.name < b.name) {\n            return -1;\n          }\n          return 1;\n        });\n        setAvailableMarkets(countries);\n      })\n      .catch((err) => {\n        console.log('Error getting availible markets: ', err);\n        addErrorText(err.response.data.error.message);\n      });\n  }\n\n  async function playerInfo() {\n    // config\n    if (token) {\n      await axios.get('https://api.spotify.com/v1/me/player/devices', config)\n        .then((res) => {\n          // console.log('Device:', res);\n        }).catch((err) => {\n          console.log('Device Error:', err);\n          addErrorText(err.response.data.error.message);\n        });\n    }\n  }\n\n  async function likeSong(trackId: string) {\n    // config\n    console.log(defaultPlaylist, likeSongString, defaultPlaylist === likeSongString);\n    if (defaultPlaylist === likeSongString) {\n      await axios.put(\n        'https://api.spotify.com/v1/me/tracks',\n        // send trackid as \"ids\" parameter\n        { ids: [trackId] },\n        config,\n      ).then((res) => {\n        // console.log('Saved track to user library');\n        getLikedSongs();\n      }).catch((err) => {\n        console.log(err);\n        addErrorText(err.response.data.error.message);\n      });\n    } else {\n      const playlist = await defaultPlaylist;\n      const trackUri = `spotify:track:${trackId}`;\n      addTrackToPlaylist(playlist.id, trackUri);\n    }\n  }\n\n  async function getUserData() {\n    return axios.get(meEndpoint, config)\n      .then((res) => {\n        console.log('User data: ', res.data);\n        setUser(res.data);\n        setChosenMarket(res.data.country);\n      })\n      .catch((err) => {\n        addErrorText(err.response.data.error.message);\n        console.log('E1: ', err);\n      });\n  }\n\n  async function getTopUserItems() {\n    const allArtists: any = [];\n    const allTracks: any = [];\n    const availableGenres: any = [];\n    const otherGenres: any = [];\n    const allGenres: any = [];\n    const genres: any = [];\n    const artist: any = [];\n    const tracks: any = [];\n\n    const topTracksText: any = [];\n    const topArtistsText: any = [];\n\n    const count = 5;\n\n    await axios.get(`${meEndpoint}/top/tracks`, config)\n      .then((res) => {\n        // setUserTopItems(res.data);\n        for (let i = 0; i < res.data.items.length; i += 1) {\n          allTracks.push(res.data.items[i].id);\n          topTracksText.push(res.data.items[i].name);\n        }\n      })\n      .catch((err) => {\n        console.log('E2: ', err); addErrorText(err.response.data.error.message);\n      });\n\n    await axios.get(`${recomendationEndpoint}/available-genre-seeds`, config)\n      .then((res: any) => {\n        // loop over the genres and add them to the available genres\n        res.data.genres.forEach((genre: any) => {\n          availableGenres.push(genre);\n        });\n      })\n      .catch((err) => {\n        console.log('E3: ', err); addErrorText(err.response.data.error.message);\n      });\n\n    await axios.get(`${meEndpoint}/top/artists`, config)\n      .then((res) => {\n        for (let i = 0; i < res.data.items.length; i += 1) {\n          allArtists.push(res.data.items[i].id);\n          topArtistsText.push(res.data.items[i].name);\n        }\n        res.data.items.forEach((item: any) => {\n        // loop over the genres and push them to genres\n          for (let i = 0; i < item.genres.length; i += 1) {\n            const genre = item.genres[i];\n            if (availableGenres.includes(genre) && !allGenres.includes(genre)) {\n              allGenres.push(genre);\n            } else {\n              otherGenres.push(genre);\n            }\n          }\n        });\n      })\n      .catch((err) => {\n        console.log('E: ', err); addErrorText(err.response.data.error.message);\n      });\n\n    // Get 1 random items in allGenres and place them in genres\n    for (let i = 0; i < 1; i += 1) {\n      const randomIndex = Math.floor(Math.random() * allGenres.length);\n      genres.push(allGenres[randomIndex]);\n    }\n\n    // Get two random items from allTracks and place them in tracks\n    for (let i = 0; i < 2; i += 1) {\n      if (allTracks.length !== 0) {\n        const random = Math.floor(Math.random() * allTracks.length);\n        const selectedTrack = allTracks[random];\n        tracks.push(selectedTrack);\n        allTracks.splice(random, 1); // remove selectedTrack from allTracks\n      }\n    }\n\n    // Get two random items from allArtists and place them in artists\n    for (let i = 0; i < 2; i += 1) {\n      if (allArtists.length !== 0) {\n        const random = Math.floor(Math.random() * allArtists.length);\n        const selectedArtist = allArtists[random];\n        artist.push(selectedArtist);\n        allArtists.splice(random, 1); // remove selectedArtist from allArtists\n      }\n    }\n\n    // WARNING: the length of seed genres + seed artists + seed tracks <= 5 (MAX 5)\n    const seedGenres = genres[0];\n    const seedArtists = allArtists[1] ? `${allArtists[0]},${allArtists[1]}` : '';\n    const seedTracks = allTracks[1] ? `${allTracks[0]},${allTracks[1]}` : '';\n\n    // Copy the config add modyfy it.\n    // setting config2 = config and updating config2 also updates config\n    const configRecommendations = { ...config };\n    configRecommendations.params = {\n      seed_artists: seedArtists,\n      seed_genres: seedGenres,\n      seed_tracks: seedTracks,\n      limit: songCount,\n    };\n\n    await axios.get(recomendationEndpoint, configRecommendations)\n      .then((res) => {\n        console.log('Recomendations: ', res.data);\n        let { tracks } = res.data;\n        if (playSnippets) {\n          tracks = tracks.filter((\n            track: { preview_url: string | null ; },\n          ) => track.preview_url !== null);\n        }\n        setRecommendedTracks(tracks);\n        const firstTrackUri = tracks[0];\n        queueSongAndSkip(firstTrackUri);\n        console.log(tracks[0].name);\n      })\n      .catch((res) => console.log('Erec: ', res));\n\n    if (recommendedTracks.length === 0) {\n      const n = 10;\n      topArtistsText.sort(() => 0.5 - Math.random());\n      topTracksText.sort(() => 0.5 - Math.random());\n      const both = allGenres.concat(otherGenres);\n      both.sort(() => 0.5 - Math.random());\n      setTopArtists(topArtistsText.slice(0, n).sort().join(', '));\n      setTopTracks(topTracksText.slice(0, n).sort().join(', '));\n      setTopGenres(both.slice(0, n).sort().join(', '));\n    }\n  }\n\n  async function getLikedSongs() {\n    await axios.get(`${meEndpoint}/tracks`, config)\n      .then((res) => {\n        const tracks = res.data.items;\n        setLikedSongs(tracks);\n      })\n      .catch((err) => {\n        console.log('Error getting liked songs: ', err);\n        addErrorText(err.response.data.error.message);\n      });\n  }\n\n  async function pause() {\n    await axios.put('https://api.spotify.com/v1/me/player/pause', null, config)\n      .then((res) => {\n        // console.log('Paused');\n        setIsPlaying(false);\n      })\n      .catch((err) => {\n        addErrorText(err.response.data.error.message);\n        console.log('Error Pausing: ', err);\n      });\n  }\n\n  async function setVolume(volume: number) {\n    await axios.put(`https://api.spotify.com/v1/me/player/volume?volume_percent=${volume}`, null, config)\n      .then((res) => {\n        console.log('Volume Set to: ', volume);\n      })\n      .catch((err) => {\n        console.log('Error Setting Volume: ', err);\n        const { message } = err.response.data.error;\n        const { reason } = err.response.data.error;\n        addErrorText(`${message}. ${reason}`);\n      });\n  }\n\n  async function play() {\n    await axios.put('https://api.spotify.com/v1/me/player/play', null, config)\n      .then((res) => {\n        // console.log('Playing');\n        setIsPlaying(true);\n      })\n      .catch((err) => {\n        console.log('Error Playing: ', err); addErrorText(err.response.data.error.message);\n      });\n  }\n\n  async function queueSongAndSkip(track: any) {\n    if (playSnippets) {\n      console.log('Snippet:', track.name);\n      addTrackAndPlay(track.preview_url);\n      setIsPlaying(true);\n    } else {\n      console.log('Full track:', track.name);\n      // TODO: Figure out how to send the query nicely with axios\n\n      axios.post(\n        `https://api.spotify.com/v1/me/player/queue?uri=${track.uri}`,\n        {},\n        config,\n      ).then(() => {\n        playNextSong();\n      }).catch((err) => {\n        console.log('Error Queue: ', err);\n        addErrorText(err.response.data.error.message);\n      });\n    }\n  }\n\n  async function playNextSong() {\n    axios.post(\n      'https://api.spotify.com/v1/me/player/next',\n      {},\n      config,\n    ).catch((err) => { console.log('Error Next: ', err); addErrorText(err.response.data.error.message); });\n    setIsPlaying(true);\n  }\n\n  function switchPlayingState() {\n    if (playSnippets) {\n      console.log('snippet');\n      isPlaying ? pauseSnippet() : playSnippet();\n      setIsPlaying(!isPlaying);\n    } else {\n      console.log('spotify');\n      isPlaying ? pause() : play();\n    }\n  }\n\n  async function getPlaybackState() {\n    await axios.get('https://api.spotify.com/v1/me/player', config)\n      .then((res) => {\n        if (res.data !== '') {\n          /* Enable this code when playing spotify content is back */\n          // if (res.data.is_playing) {\n          //   pause();\n          // }\n\n          if (res.data.device.type === DeviceType.COMPUTER) {\n            setAllowVolumeControll(true);\n            setVolume(50);\n          } else if (res.data.device.type === DeviceType.SMARTPHONE) {\n            setAllowVolumeControll(false);\n          } else {\n            console.warn(`Could not match device type: ${res.data.device.type}`);\n            setAllowVolumeControll(false);\n          }\n        }\n      })\n      .catch((err) => {\n        console.log('Error getting playback state: ', err);\n        addErrorText(err.response.data.error.message);\n      });\n  }\n\n  React.useEffect(() => {\n    if (token) {\n      const config = {\n        headers: {\n          Authorization: `Bearer ${token.accessToken}`,\n        },\n      };\n      setConfig(config);\n    }\n  }, [token]);\n\n  React.useEffect(() => {\n    if (config && token) {\n      getPlaybackState();\n      getUserData();\n    }\n  }, [config, token]);\n\n  React.useEffect(() => {\n    if (user) {\n      getTopUserItems();\n      getLikedSongs();\n      getPlaylists();\n      getAvailibleMarkets();\n    }\n  }, [user]);\n\n  React.useEffect(() => {\n    if (chosenMarket) {\n      getNewReleases();\n    }\n  }, [chosenMarket]);\n\n  React.useEffect(() => {\n    if (config && token) {\n      getTopUserItems();\n      getNewReleases();\n    }\n  }, [playSnippets]);\n\n  return (\n    <SpotifyAuthContext.Provider\n      value={{\n        promptAsync,\n        token,\n        user,\n        recommendedTracks,\n        getUserRecommendedTracks: getTopUserItems,\n        likeSong,\n        info: playerInfo,\n        queueAndSkip: queueSongAndSkip,\n        isPlaying,\n        setIsPlaying,\n        switchPlayingState,\n        setVolume,\n        likedSongs,\n        getLikedSongs,\n        getPlaylists: () => {},\n        playlists: userPlaylists,\n        addTrackToPlaylist,\n        newReleases,\n        getNewReleases,\n        topTracks,\n        topArtists,\n        topGenres,\n        defaultPlaylist,\n        storeDefaultPlaylist,\n        availableMarkets,\n        setChosenMarket,\n        chosenMarket,\n        allowVolumeControll,\n        playSnippets,\n        setPlaySnippets,\n        pause,\n      }}\n    >\n      {children}\n    </SpotifyAuthContext.Provider>\n  );\n};\n\nexport default function useSpotifyContext() {\n  return useContext(SpotifyAuthContext);\n}\n","module.exports = __webpack_public_path__ + \"static/media/post.61b3850d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/metallica.3bad5394.jpg\";","import React, { useContext } from 'react';\nimport { Text, TouchableOpacity, View } from 'react-native';\nimport Icon from './Icon';\nimport styles, { DARK_GRAY } from '../assets/styles';\nimport useSpotifyContext from '../hooks/useSpotifyAuth';\nimport { SwipeCardContext } from './card-components/CardProvider';\nimport { SwipedCardContextT } from '../types';\n\nexport function LoginMock({ navigation }: any) {\n  const { promptAsync } = useSpotifyContext();\n  const { setShowType } = useContext<SwipedCardContextT>(SwipeCardContext);\n\n  const login = async () => {\n    await setShowType('recommended');\n    await navigation.navigate('Tab');\n  };\n\n  return (\n    <View style={{ flexDirection: 'row', marginTop: 20 }}>\n      <TouchableOpacity style={styles.login} onPress={login}>\n        <Text style={styles.loginText}>\n          Try it out\n        </Text>\n      </TouchableOpacity>\n    </View>\n  );\n}\nexport default function Login({ navigation }: any) {\n  const { promptAsync } = useSpotifyContext();\n  const { setShowType } = useContext<SwipedCardContextT>(SwipeCardContext);\n\n  const login = async () => {\n    await setShowType('recommended');\n    await promptAsync();\n    await navigation.navigate('Tab');\n  };\n\n  return (\n    <View style={{ flexDirection: 'row' }}>\n      <TouchableOpacity style={styles.login} onPress={login}>\n        <Text style={styles.loginText}>\n          <Icon name=\"spotify\" size={30} color={DARK_GRAY} useFontAwesome />\n          {' Login'}\n        </Text>\n      </TouchableOpacity>\n    </View>\n  );\n}\n","import React from 'react';\nimport { Text, View, Image } from 'react-native';\nimport { CardItemRowT } from '../../types';\n\nimport styles from '../../assets/styles';\n\nfunction CardItemRow({\n  image,\n  name,\n}: CardItemRowT) {\n  return (\n    <View style={styles.containerCardItemRow}>\n      {/* IMAGE */}\n      <Image source={image} style={styles.playlistImage} />\n      {/* NAME */}\n      <Text style={styles.playlistText}>{name}</Text>\n    </View>\n  );\n}\n\nexport default CardItemRow;\n","import { DataProfile } from \"../../types\";\nimport IMAGE_01 from \"../images/img01.jpeg\";\nimport IMAGE_02 from \"../images/img01.jpeg\";\nimport IMAGE_03 from \"../images/img01.jpeg\";\nimport IMAGE_04 from \"../images/img01.jpeg\";\nimport IMAGE_05 from \"../images/img01.jpeg\";\nimport IMAGE_06 from \"../images/img01.jpeg\";\nimport IMAGE_07 from \"../images/img01.jpeg\";\nimport IMAGE_08 from \"../images/img01.jpeg\";\nimport IMAGE_09 from \"../images/img01.jpeg\";\nimport IMAGE_10 from \"../images/img01.jpeg\";\n\nconst data: DataProfile[] = [\n  {\n    id: 1,\n    name: \"Fredrik Juvet\",\n    isOnline: true,\n    match: \"78\",\n    description: \"Indek Grindset\",\n    message: \"Forza Ferrari, Grande Machina, The Witcher 3, Bella Ciao\",\n    age: \"19\",\n    image: IMAGE_01,\n  },\n  {\n    id: 2,\n    name: \"Tom Rehnström\",\n    match: \"93\",\n    description: \"I am a Huge F1 fan\",\n    isOnline: true,\n    message: \"Wassup, I'm Fredrik, I'm a software developer, and I'm looking for a job.\",\n    image: IMAGE_02,\n  },\n  {\n    id: 3,\n    name: \"Isac Hassle\",\n    match: \"45\",\n    description: \"Part time Singer/Dancer.\",\n    isOnline: false,\n    message: \"Oh, hee-hee, aha. Ha, ooh, hee, ha-ha, ha-ha. And I thought my jokes were bad.\",\n    image: IMAGE_03,\n  },\n  {\n    id: 4,\n    name: \"Alexander Holmberg\",\n    match: \"88\",\n    description: \"Crypto Guru and HV71 fan\",\n    isOnline: true,\n    message: \"Crypto is up Today! Did you see Alice in Wonderland?, At least I think I did.\",\n    image: IMAGE_04,\n  },\n  {\n    id: 5,\n    name: \"Marcus Bardvall\",\n    match: \"76\",\n    description: \"It's not who I am underneath but what I do that defines me.\",\n    isOnline: false,\n    message: \"Buy my stupid NFTs\",\n    image: IMAGE_05,\n  },\n  {\n    id: 6,\n    name: \"Max Claesson\",\n    match: \"95\",\n    description: \"Guitar player, Hair like a Golden Retriever\",\n    isOnline: true,\n    message: \"I just ate two entire pizzas. I'm not sure if I'm hungry or if I'm just really, really hungry.\",\n    image: IMAGE_06,\n  },\n  {\n    id: 7,\n    name: \"Lisa Kvist\",\n    match: \"67\",\n    description:\n      \"Fulvinia, a.k.a. The Queen of the Night, a Swedish-American singer, songwriter, and actress.\",\n    isOnline: true,\n    message:\n      \"Coffee, tea, and cake. I'm not sure what else to put here.\",\n    image: IMAGE_07,\n  },\n  {\n    id: 8,\n    name: \"Olle Jernström\",\n    match: \"85\",\n    description: \"Music lover. Globe Trotter. Occasional Photographer.\",\n    age: \"19\",\n    location: \"Stockholm, Sweden\",\n    infoPersonal: 'Loves programming',\n    infoMusic: \"Loves Rock, Pop and Hiphop/Rap\",\n    lastSeen: \"Last seen: 23h ago\",\n    isOnline: true,\n    topTracks: \"Track 1, Track 2, Track 3, Track 4, Track 5\",\n    topArtists: \"Artist 1, Artist 2, Artist 3, Artist 4, Artist 5\",\n    topGenres: \"Genre 1, Genre 2, Genre 3, Genre 4, Genre 5\",\n    message:\n      \"And as for the television's so-called plan, Batman has no jurisdiction.\",\n    image: IMAGE_08,\n  },\n  {\n    id: 9,\n    name: \"Marina Bremmander\",\n    match: \"74\",\n    description:\n      \"Swedish Rapper with the artist name MarreB\",\n    isOnline: true,\n    message: \"Rap music is love\",\n    image: IMAGE_09,\n  },\n  {\n    id: 10,\n    name: \"Pepsi Man\",\n    match: \"98\",\n    description:\n      \"Pepsi da number one\",\n    isOnline: false,\n    message:\n      \"You want order in Gotham. Batman must stop drinking coke.\",\n    image: IMAGE_10,\n  },\n];\n\nexport default data;\n","import React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { SpotifyAuthProvider } from './hooks/useSpotifyAuth';\nimport { ErrorProvider } from './hooks/useError';\nimport {\n  Explore, Liked, LoginPage, Profile,\n} from './screens';\nimport {\n  PRIMARY_COLOR, DARK_GRAY, BLACK,\n} from './assets/styles';\nimport TabBarIcon from './components/TabBarIcon';\nimport Settings from './screens/Settings';\nimport { Error } from './components';\nimport { SnippetProvider } from './hooks/useSnippet';\nimport SwipeCardPrvider from './components/card-components/CardProvider';\n\nconst Stack = createStackNavigator();\nconst Tab = createBottomTabNavigator();\n\nfunction App() {\n  return (\n    <ErrorProvider>\n      <SnippetProvider>\n        <SpotifyAuthProvider>\n          <SwipeCardPrvider>\n            <NavigationContainer>\n              <Error />\n              <Stack.Navigator\n                screenOptions={{\n                  headerStyle: { elevation: 0 },\n                  cardStyle: { backgroundColor: BLACK },\n                }}\n              >\n\n                <Stack.Screen\n                  name=\"Login\"\n                  options={{ headerShown: false, animationEnabled: false }}\n                  component={LoginPage}\n                />\n\n                <Stack.Screen\n                  name=\"Tab\"\n                  options={{ headerShown: false, animationEnabled: false }}\n                >\n                  {() => (\n                    <Tab.Navigator\n                      tabBarOptions={{\n                        showLabel: false,\n                        activeTintColor: PRIMARY_COLOR,\n                        inactiveTintColor: DARK_GRAY,\n                        labelStyle: {\n                          fontSize: 14,\n                          textTransform: 'uppercase',\n                          paddingTop: 10,\n                        },\n                        style: {\n                          backgroundColor: BLACK,\n                          borderTopWidth: 0,\n                          marginBottom: 0,\n                          shadowOpacity: 0.05,\n                          shadowRadius: 10,\n                          shadowColor: BLACK,\n                          shadowOffset: { height: 0, width: 0 },\n                        },\n                      }}\n                    >\n\n                      <Tab.Screen\n                        name=\"Explore\"\n                        component={Explore}\n                        options={{\n                          tabBarIcon: ({ focused }) => (\n                            <TabBarIcon\n                              focused={focused}\n                              iconName=\"musical-notes\"\n                              text=\"Explore\"\n                            />\n                          ),\n                        }}\n                      />\n\n                      <Tab.Screen\n                        name=\"Liked\"\n                        component={Liked}\n                        options={{\n                          tabBarIcon: ({ focused }) => (\n                            <TabBarIcon\n                              focused={focused}\n                              iconName=\"heart\"\n                              text=\"Liked\"\n                            />\n                          ),\n                        }}\n                      />\n\n                      {/* <Tab.Screen\n                  name=\"Chat\"\n                  component={Messages}\n                  options={{\n                    tabBarIcon: ({ focused }) => (\n                      <TabBarIcon\n                        focused={focused}\n                        iconName=\"chatbubble\"\n                        text=\"Chat\"\n                      />\n                    ),\n                  }}\n                /> */}\n\n                      <Tab.Screen\n                        name=\"Settings\"\n                        component={Settings}\n                        options={{\n                          tabBarIcon: ({ focused }) => (\n                            <TabBarIcon\n                              focused={focused}\n                              iconName=\"settings-sharp\"\n                              text=\"Settings\"\n                            />\n                          ),\n                        }}\n                      />\n\n                      <Tab.Screen\n                        name=\"Profile\"\n                        component={Profile}\n                        options={{\n                          tabBarIcon: ({ focused }) => (\n                            <TabBarIcon\n                              focused={focused}\n                              iconName=\"person\"\n                              text=\"Profile\"\n                            />\n                          ),\n                        }}\n                      />\n                    </Tab.Navigator>\n                  )}\n                </Stack.Screen>\n              </Stack.Navigator>\n            </NavigationContainer>\n          </SwipeCardPrvider>\n        </SpotifyAuthProvider>\n      </SnippetProvider>\n    </ErrorProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport { Ionicons, FontAwesome } from '@expo/vector-icons';\nimport { IconT } from '../types';\n\nfunction Icon({\n  color, name, size, style, onPress, useFontAwesome,\n}: IconT) {\n  if (!useFontAwesome) {\n    return <Ionicons name={name} size={size} color={color} style={style} onPress={onPress} />;\n  }\n  return <FontAwesome name={name} size={size} color={color} style={style} onPress={onPress} />;\n}\n\nexport default Icon;\n","export { default as CardItem } from './card-components/CardItem';\nexport { default as Settings } from './Settings';\nexport { default as Filters } from './Filters';\nexport { default as Icon } from './Icon';\nexport { default as Message } from './Message';\nexport { default as ProfileItem } from './ProfileItem';\nexport { default as Login } from './Login';\nexport { default as CardItemRow } from './card-components/CardItemRow';\nexport { default as Playlists } from './Playlists';\nexport { default as Cards } from './card-components/Cards';\nexport { default as CardItemSmall } from './card-components/CardItemSmall';\nexport { default as SettingItemSwitch } from './SettingItemSwitch';\nexport { default as Error } from './Error';\n","import { createContext, FC, useState } from 'react';\nimport Swiper from 'react-native-deck-swiper';\nimport useSpotifyAuth from '../../hooks/useSpotifyAuth';\nimport useSpotifyContext from '../../hooks/useSpotifyAuth';\nimport { DataSong, SwipedCardContextT } from '../../types';\n\nexport const SwipeCardContext = createContext<SwipedCardContextT | null>(null);\n\nconst SwipeCardProvider: FC<React.ReactNode> = ({ children }) => {\n  const { recommendedTracks: userRecommendedTracks } = useSpotifyContext();\n  const [volume, setVolume] = useState<number>(50);\n  const [rgb, setRGB] = useState<string>('rgb(54, 54, 54)');\n  const [pressedTrack, setPressedTrack] = useState<any>(userRecommendedTracks ? userRecommendedTracks[0] : null);\n  const [showPlaylists, setShowPlaylists] = useState<boolean>(false);\n  const [swiper, setSwiper] = useState<Swiper<DataSong> | null>(null);\n\n  const [showType, setShowType] = useState<string>('mock');\n  const [recommendedIndex, setRecommendedIndex] = useState(0);\n  const [newReleasesIndex, setNewReleasesIndex] = useState(0);\n\n  const updateVolume = (value: number) => {\n    setVolume(value);\n  };\n\n  const { allowVolumeControll } = useSpotifyAuth();\n\n  return (\n    <SwipeCardContext.Provider value={{\n      volume,\n      updateVolume,\n      rgb,\n      setRGB,\n      pressedTrack,\n      setPressedTrack,\n      showPlaylists,\n      setShowPlaylists,\n      swiper,\n      setSwiper,\n      showType,\n      setShowType,\n      recommendedIndex,\n      setRecommendedIndex,\n      newReleasesIndex,\n      setNewReleasesIndex,\n      allowVolumeControll,\n    }}\n    >\n      {children}\n    </SwipeCardContext.Provider>\n  );\n};\n\nexport default SwipeCardProvider;\n","import { exchangeCodeAsync, TokenResponse } from 'expo-auth-session';\nimport React from 'react';\nimport { CLIENT_ID, CLIENT_SECRET } from '@env';\nimport useMounted from './useMounted';\nimport { discovery, redirectUri } from './utils/auth-utils';\n\ntype State = {\n  token: TokenResponse | null;\n  tokenExchangeError: Error | null;\n};\n\n// A hook to automatically exchange the auth token for an access token.\n// I think this should be performed on server and not in the application.\nfunction useAutoExchange(code?: string): State {\n  const [currentState, setCurrentState] = React.useReducer(\n    (state: State, action: Partial<State>) => ({ ...state, ...action }),\n    { token: null, tokenExchangeError: null },\n  );\n  const isMounted = useMounted();\n\n  React.useEffect(() => {\n    if (!code) {\n      setCurrentState({ token: null, tokenExchangeError: null });\n      return;\n    }\n\n    exchangeCodeAsync(\n      {\n        clientId: CLIENT_ID,\n        clientSecret: CLIENT_SECRET,\n        code,\n        redirectUri,\n      },\n      discovery,\n    )\n      .then((token) => {\n        if (isMounted.current) {\n          setCurrentState({ token, tokenExchangeError: null });\n        }\n      })\n      .catch((exchangeError) => {\n        if (isMounted.current) {\n          setCurrentState({ tokenExchangeError: exchangeError, token: null });\n        }\n      });\n  }, [code]);\n\n  return currentState;\n}\n\nexport default useAutoExchange;\n","import React from 'react';\n\nfunction useMounted() {\n  const isMounted = React.useRef(true);\n  React.useEffect(() => () => {\n    isMounted.current = false;\n  }, []);\n  return isMounted;\n}\n\nexport default useMounted;\n","export { default as Explore } from './Explore';\nexport { default as Liked } from './Liked';\nexport { default as Messages } from './Messages';\nexport { default as Profile } from './Profile';\nexport { default as LoginPage } from './LoginPage';\n","import React from 'react';\nimport {\n  View, ImageBackground,\n} from 'react-native';\nimport { Playlists, Cards } from '../components';\nimport styles from '../assets/styles';\nimport useSpotifyContext from '../hooks/useSpotifyAuth';\n\nfunction Explore() {\n  const backgroundLink = 'https://ollisco.se/assets/bg2.jpg'; // To avoid bg dissapearing after API call\n  const { user, playlists, addTrackToPlaylist } = useSpotifyContext();\n\n  return (\n    <View>\n      <ImageBackground\n        source={{ uri: backgroundLink }} // To avoid bg dissapearing after API call\n        style={styles.bg}\n        resizeMode=\"cover\"\n      >\n        <Cards />\n        <Playlists />\n      </ImageBackground>\n    </View>\n  );\n}\n\nexport default Explore;\n","import React, { useContext } from 'react';\nimport { View, Platform } from 'react-native';\nimport Swiper from 'react-native-deck-swiper';\nimport DATA from '../../assets/data/dummy_data_songs';\nimport { CARD_HEIGHT, DARK_GRAY } from '../../assets/styles';\nimport useSpotifyContext from '../../hooks/useSpotifyAuth';\nimport { SwipedCardContextT } from '../../types';\nimport CardItem from './CardItem';\nimport { SwipeCardContext } from './CardProvider';\n\nfunction CardStackHandler(_style: any) {\n  const {\n    recommendedTracks: userTopItems,\n    getUserRecommendedTracks: getTopUserItems,\n    token,\n    likeSong,\n    queueAndSkip,\n    newReleases,\n    getNewReleases,\n  } = useSpotifyContext();\n\n  const {\n    setRGB,\n    swiper,\n    setSwiper,\n    showType,\n    recommendedIndex,\n    setRecommendedIndex,\n    newReleasesIndex,\n    setNewReleasesIndex,\n  } = useContext(SwipeCardContext) as SwipedCardContextT;\n\n  const swipeColorLimit = 50;\n  function convertRGBgreen(d: number) {\n    const m = d > 110 ? 100 : d;\n    return `rgb(${54 - ((54 * d) / 300) + 20}, ${m}, ${54 - ((54 * d) / 300) + 20})`;\n  }\n  function convertRGBred(d: number) {\n    const m = d < 110 ? 110 : -d;\n    return `rgb(${m}, ${54 - ((54 * -d) / 300) + 20}, ${54 - ((54 * -d) / 300) + 20})`;\n  }\n\n  React.useEffect(() => {\n    if (userTopItems.length > 0 && newReleases.length > 0) {\n      swiper?.jumpToCardIndex(0);\n      console.log(userTopItems[0]);\n    }\n  }, [userTopItems, newReleases]);\n\n  React.useEffect(() => {\n    if (showType === \"recommended\") {\n      swiper?.jumpToCardIndex(recommendedIndex);\n    }\n    else if (showType === \"new\") {\n      swiper?.jumpToCardIndex(newReleasesIndex);\n    } else {\n      console.warn(\"Unexpected show type:\", showType);\n    }\n  }), [showType];\n\n  React.useEffect(() => {\n    try{\n      console.log(\"S\", userTopItems[recommendedIndex]);\n    } catch (e) {\n      console.log(e);\n    }\n  }, []);\n\n  return (\n    <View style={{ borderColor: '#000', borderWidth: 3, height: CARD_HEIGHT }}>\n      {userTopItems.length > 0 && showType === 'recommended'\n        ? (\n          <Swiper\n            cards={userTopItems}\n            renderCard={(\n              card:\n              {album: any, popularity: string | undefined, artists: string[], releaseDate: string, name: string},\n              index: number,\n            ) => (\n              <CardItem\n                hasActions\n                track={card.name}\n                image={{ uri: card.album.images[0].url }}\n                releaseDate={card.releaseDate || undefined}\n                popularity={card.popularity}\n                artist={card.artists.map((artist: any) => artist.name).join(', ')}\n                id={index}\n              />\n            )}\n            useViewOverflow={Platform.OS === 'ios'}\n            onSwiped={(cardIndex) => {\n              console.log(cardIndex);\n              setRGB(DARK_GRAY);\n              // console.log(token && userTopItems[recommendedIndex + 1].uri);\n              if (token && userTopItems[recommendedIndex + 1] !== undefined) {\n                queueAndSkip(userTopItems[recommendedIndex + 1]);\n                setRecommendedIndex(recommendedIndex + 1);\n                // setNewReleasesIndex(newReleasesIndex + 1);\n              }\n            }}\n            onSwipedAborted={() => {\n              setRGB(DARK_GRAY);\n            }}\n            onSwipedAll={() => {\n              setRecommendedIndex(0);\n              getTopUserItems();\n              // getNewReleases();\n              // setNewReleasesIndex(0);\n            }}\n            \n            onSwipedRight={(index) => {\n              console.log(index);\n              if (token) {\n                likeSong(userTopItems[index].id);\n              }\n            }}\n            onSwiping={(x, _y) => {\n              if (x > swipeColorLimit) {\n                setRGB(convertRGBgreen(x));\n              } else if (x < -swipeColorLimit) {\n                setRGB(convertRGBred(x));\n              } else {\n                setRGB(DARK_GRAY);\n              }\n            }}\n            ref={(swiper) => setSwiper(swiper)}\n            cardIndex={0}\n            verticalSwipe={false}\n            backgroundColor=\"#000000\"\n            stackSize={3}\n            swipeBackCard\n            key=\"top-items\"\n          />\n        )\n        : newReleases && showType === 'new'\n          ? (\n            <Swiper\n              cards={newReleases}\n              renderCard={(\n                card: {images: {url: string}[], name: string, artists: any, popularity: string, releaseDate: string},\n                index: number,\n              ) => (\n                <CardItem\n                  hasActions\n                  image={{ uri: card.images[0].url }}\n                  track={card.name || '*No Track Name Found*'}\n                  releaseDate={card.releaseDate || '*No Release Date Found*'}\n                  popularity={card.popularity || '0'}\n                  artist={card.artists.map((artist: any) => artist.name).join(', ') || '*No Artist Found*'}\n                  id={index}\n                />\n              )}\n              useViewOverflow={Platform.OS === 'ios'}\n              onSwiped={(cardIndex) => {\n                console.log(cardIndex);\n                setRGB(DARK_GRAY);\n                if (token && newReleases[newReleasesIndex + 1] !== undefined) {\n                  queueAndSkip(newReleases[newReleasesIndex + 1]);\n                  // setRecommendedIndex(recommendedIndex + 1);\n                  setNewReleasesIndex(newReleasesIndex + 1);\n                }\n              }}\n              onSwipedAborted={() => {\n                setRGB(DARK_GRAY);\n              }}\n              onSwipedAll={() => {\n                getNewReleases();\n                setNewReleasesIndex(0);\n              }}\n              onSwipedRight={(index) => {\n                if (token) {\n                  likeSong(newReleases[index].id);\n                }\n              }}\n              onSwiping={(x, _y) => {\n                if (x > swipeColorLimit) {\n                  setRGB(convertRGBgreen(x));\n                } else if (x < -swipeColorLimit) {\n                  setRGB(convertRGBred(x));\n                } else {\n                  setRGB(DARK_GRAY);\n                }\n              }}\n              ref={(swiper) => setSwiper(swiper)}\n              cardIndex={0}\n              verticalSwipe={false}\n              backgroundColor=\"#000000\"\n              stackSize={3}\n              swipeBackCard\n            />\n\n          )\n\n          : null}\n\n      {!newReleases && userTopItems.length === 0 ? (\n        <Swiper\n          cards={DATA}\n          renderCard={(card) => (\n            <CardItem\n              hasActions\n              image={card.image}\n              track={card.track}\n              description={card.artist}\n              matches={card.match}\n              artist={card.artist}\n            />\n          )}\n          useViewOverflow={Platform.OS === 'ios'}\n          onSwiped={(_cardIndex) => {\n            setRGB(DARK_GRAY);\n          }}\n          onSwipedAborted={() => {\n            setRGB(DARK_GRAY);\n          }}\n          onSwipedAll={() => {\n            console.log('onSwipedAll');\n          }}\n          onSwiping={(x, _y) => {\n            if (x > swipeColorLimit) {\n              setRGB(convertRGBgreen(x));\n            } else if (x < -swipeColorLimit) {\n              setRGB(convertRGBred(x));\n            } else {\n              setRGB(DARK_GRAY);\n            }\n          }}\n          ref={(swiper) => setSwiper(swiper)}\n          cardIndex={0}\n          verticalSwipe={false}\n          backgroundColor=\"#000000\"\n          stackSize={3}\n          infinite\n          swipeBackCard\n        />\n      ) : null}\n\n    </View>\n  );\n}\n\nexport default CardStackHandler;\n","module.exports = __webpack_public_path__ + \"static/media/xxx.a0b6a7dc.jpg\";","module.exports = __webpack_public_path__ + \"static/media/travis.a6dcc371.jpg\";","module.exports = __webpack_public_path__ + \"static/media/banger.bb266617.jpg\";","import React from 'react';\nimport { Text, TouchableOpacity } from 'react-native';\nimport Icon from './Icon';\nimport styles, { DARK_GRAY } from '../assets/styles';\nimport useSpotifyContext from '../hooks/useSpotifyAuth';\n\nfunction Settings() {\n  const { token } = useSpotifyContext();\n\n  return (\n    <TouchableOpacity style={styles.settings}>\n      <Text style={styles.settingsText}>\n        <Icon name=\"settings-sharp\" size={15} color={DARK_GRAY} onPress={() => console.log(token)} />\n      </Text>\n      {/* console.log(response) */}\n    </TouchableOpacity>\n  );\n}\n\nexport default Settings;\n","import React from 'react';\nimport { TouchableOpacity } from 'react-native';\nimport Icon from './Icon';\nimport styles, { DARK_GRAY } from '../assets/styles';\nimport useSpotifyContext from '../hooks/useSpotifyAuth';\n\nfunction Filters() {\n  const { getUserRecommendedTracks, getNewReleases } = useSpotifyContext();\n\n  const update = () => {\n    getUserRecommendedTracks();\n    getNewReleases();\n  };\n\n  return (\n    <TouchableOpacity style={styles.filters}>\n      <Icon\n        name=\"refresh\"\n        size={15}\n        color={DARK_GRAY}\n        onPress={update}\n        useFontAwesome\n      />\n    </TouchableOpacity>\n  );\n}\n\nexport default Filters;\n","import React from 'react';\nimport { Text, View, Image } from 'react-native';\nimport { MessageT } from '../types';\nimport styles from '../assets/styles';\n\nfunction Message({ image, lastMessage, name }: MessageT) {\n  return (\n    <View style={styles.containerMessage}>\n      <Image source={image} style={styles.avatar} />\n      <View>\n        <Text style={styles.messageName}>{name}</Text>\n        <Text style={styles.message}>{lastMessage}</Text>\n      </View>\n    </View>\n  );\n}\n\nexport default Message;\n","import React from 'react';\nimport { Text, View } from 'react-native';\nimport Icon from './Icon';\nimport { ProfileItemT } from '../types';\nimport styles, { WHITE } from '../assets/styles';\n\nfunction ProfileItem({\n  followerCount,\n  location,\n  name,\n  topTracks,\n  topArtists,\n  topGenres,\n}: ProfileItemT) {\n  return (\n    <View style={styles.containerProfileItem}>\n\n      <Text style={styles.name}>{name}</Text>\n\n      <Text style={styles.descriptionProfileItem}>\n        {followerCount}\n        {' followers '}\n        -\n        {' '}\n        {location}\n      </Text>\n\n      <View style={styles.info}>\n        <Text style={styles.iconProfile}>\n          <Icon name=\"person\" size={12} color={WHITE} />\n        </Text>\n        <Text style={styles.infoContent}>{topArtists}</Text>\n      </View>\n\n      <View style={styles.info}>\n        <Text style={styles.iconProfile}>\n          <Icon name=\"musical-notes\" size={12} color={WHITE} />\n        </Text>\n        <Text style={styles.infoContent}>{topTracks}</Text>\n      </View>\n\n      <View style={styles.info}>\n        <Text style={styles.iconProfile}>\n          <Icon name=\"albums-outline\" size={12} color={WHITE} />\n        </Text>\n        <Text style={styles.infoContent}>{topGenres}</Text>\n      </View>\n\n      <View style={styles.info}>\n        <Text style={styles.iconProfile}>\n          <Icon name=\"location\" size={12} color={WHITE} />\n        </Text>\n        <Text style={styles.infoContent}>{location}</Text>\n      </View>\n\n    </View>\n  );\n}\n\nexport default ProfileItem;\n","import { useContext } from 'react';\nimport React, {\n  TouchableOpacity, View, ScrollView, Text,\n} from 'react-native';\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport styles, { DARK_GRAY, WHITE } from '../assets/styles';\nimport useSpotifyContext from '../hooks/useSpotifyAuth';\nimport CardItemRow from './card-components/CardItemRow';\nimport { SwipeCardContext } from './card-components/CardProvider';\n// import swipcardcontext from types\nimport { SwipedCardContextT } from '../types';\nimport Icon from './Icon';\nimport { dummyDataPlaylists } from '../assets/data/dummy_data_playlists';\n\nfunction Playlists() {\n  const {\n    playlists, addTrackToPlaylist, token,\n    queueAndSkip,\n    recommendedTracks,\n    newReleases,\n  } = useSpotifyContext();\n\n  const {\n    pressedTrack,\n    showPlaylists,\n    setShowPlaylists,\n    swiper,\n    newReleasesIndex,\n    setNewReleasesIndex,\n    recommendedIndex,\n    setRecommendedIndex,\n    showType,\n  } = useContext(SwipeCardContext) as SwipedCardContextT;\n\n  if (showPlaylists) {\n    return (\n      <View style={styles.containerPlaylists}>\n        <View style={styles.playlistsTopRow}>\n          <Text style={{ color: '#000000', fontSize: 15 }}>\n            Only select a playlist where you can add songs\n          </Text>\n          <Icon\n            name=\"close\"\n            size={30}\n            color=\"#000000\"\n            style={{ marginLeft: 'auto', color: DARK_GRAY }}\n            onPress={() => setShowPlaylists(false)}\n          />\n        </View>\n        <SafeAreaView style={{ flex: 1 }}>\n          <ScrollView>\n            {playlists ? (\n              playlists.map((item: any) => (\n                <TouchableOpacity\n                  key={item.id}\n                  onPress={() => {\n                    addTrackToPlaylist(item.id, pressedTrack.uri);\n                    setShowPlaylists(false);\n                    swiper?.swipeTop();\n                    // if (showType === 'new' && newReleases[newReleasesIndex + 1] !== undefined) {\n                    //   queueAndSkip(newReleases[newReleasesIndex + 1].uri);\n                    //   setRecommendedIndex(recommendedIndex + 1);\n                    //   setNewReleasesIndex(newReleasesIndex + 1);\n\n                    // } else if (showType === 'recommended') {\n                    //   queueAndSkip(recommendedTracks[recommendedIndex + 1].uri);\n                    //   setRecommendedIndex(recommendedIndex + 1);\n                    //   setNewReleasesIndex(newReleasesIndex + 1);\n                    // }\n                  }}\n                >\n                  <CardItemRow\n                    image={item.images.length > 0 ? { uri: item.images[0].url } : dummyDataPlaylists[0].image}\n                    name={item.name}\n                  />\n                </TouchableOpacity>\n              ))\n\n            ) : (\n\n              dummyDataPlaylists.map((item: any) => (\n                <TouchableOpacity\n                  key={item.id}\n                  onPress={() => {\n                    setShowPlaylists(false);\n                    swiper?.swipeRight();\n                  }}\n                >\n                  <CardItemRow\n                    image={item.image}\n                    name={item.name}\n                  />\n                </TouchableOpacity>\n              ))\n            )}\n            {/* Ugly padding hack */}\n            <TouchableOpacity>\n              <Text style={{ color: WHITE }}>Hello World!</Text>\n              <Text style={{ color: WHITE }}>Hello World!</Text>\n              <Text style={{ color: WHITE }}>Hello World!</Text>\n              <Text style={{ color: WHITE }}>Hello World!</Text>\n            </TouchableOpacity>\n          </ScrollView>\n        </SafeAreaView>\n      </View>\n    );\n  }\n  return (<></>);\n}\nexport default Playlists;\nfunction newReleasesIndex(newReleasesIndex: any) {\n  throw new Error('Function not implemented.');\n}\n","\n\n\n\n\nexport const dummyDataPlaylists = [\n    {\n        id: '1',\n        name: 'Playlist 1',\n        image: require('../../assets/images/logic.jpg'),\n    },\n    {\n        id: '2',\n        name: 'Playlist 2',\n        image: require('../../assets/images/odz.jpg'),\n    },\n    {\n        id: '3',\n        name: 'Playlist 3',\n        image: require('../../assets/images/metallica.jpg'),\n    },\n    // make 5 more object like that\n    {\n        id: '4',\n        name: 'Playlist 4',\n        image: require('../../assets/images/dio.jpg'),\n    },\n    {\n        id: '5',\n        name: 'Playlist 5',\n        image: require('../../assets/images/post.jpg'),\n    },\n    {\n        id: '6',\n        name: 'Playlist 6',\n        image: require('../../assets/images/skepta.jpg'),\n    }\n];","import React from 'react';\nimport { Text, View, Image } from 'react-native';\nimport { CardItemT } from '../../types';\n\nimport styles from '../../assets/styles';\n\nfunction CardItemSmall({\n  image,\n  artist,\n  track,\n}: CardItemT) {\n  const maxLength = 20;\n  if (track.length > maxLength) {\n    track = `${track.slice(0, maxLength)}...`;\n  }\n  return (\n    <View style={styles.containerCardItemSmall}>\n      {/* IMAGE */}\n      <Image source={image} style={styles.smallImageStyle} />\n      {/* NAME */}\n      <Text style={styles.smallNameStyle}>{track}</Text>\n\n      <View style={styles.artist}>\n        <Text style={[styles.artistText, { fontSize: 15 }]}>{artist}</Text>\n      </View>\n    </View>\n  );\n}\n\nexport default CardItemSmall;\n","import {\n  StyleSheet, Switch, Text, View,\n} from 'react-native';\nimport React, { useState } from 'react';\nimport { SettingItemSwitchT } from '../types';\nimport { SPOTIFY_GREEN, WHITE, GRAY } from '../assets/styles/index';\n\nfunction SettingItemSwitch({\n  text,\n  onValueChange,\n  value,\n  explanation,\n}: SettingItemSwitchT) {\n  const [disabled, setDisabled] = useState(false);\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.textContainer}>\n        <Text style={styles.text}>{text}</Text>\n        <Text style={styles.explanation}>{explanation}</Text>\n      </View>\n      <Switch\n        trackColor={{ false: '#767577', true: SPOTIFY_GREEN }}\n        thumbColor={value ? SPOTIFY_GREEN : '#FFFFFF'}\n        ios_backgroundColor=\"#3e3e3e\"\n        onValueChange={onValueChange}\n        value={value}\n      />\n    </View>\n  );\n}\n\nexport default SettingItemSwitch;\n\nconst styles = StyleSheet.create({\n  container: {\n    alignItems: 'center',\n    padding: 20,\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    // add border to each flex item\n    borderBottomColor: GRAY,\n    borderBottomWidth: 1,\n    marginTop: -1,\n\n  },\n  textContainer: {\n    flexDirection: 'column',\n    justifyContent: 'space-between',\n    width: '70%',\n  },\n  text: {\n    fontSize: 18,\n    color: WHITE,\n    borderRadius: 3,\n    borderColor: GRAY,\n  },\n  explanation: {\n    fontSize: 14,\n    color: GRAY,\n  },\n});\n","import { Text, TouchableOpacity } from 'react-native';\nimport React, { useEffect, useState } from 'react';\nimport styles from '../assets/styles';\nimport useError from '../hooks/useError';\n\nfunction Error() {\n  const {\n    errorTexts, showComponent, setShowComponent, setErrorTexts, popErrorText,\n  } = useError();\n  const [currentError, setCurrentError] = useState<string[] | null>(null);\n\n  // const [showComponent, setShowComponent] = useState(false);\n\n  useEffect(() => {\n    if (errorTexts.length > 0) {\n      const toRef = setTimeout(() => {\n        setShowComponent(true);\n        clearTimeout(toRef);\n        // it is good practice to clear the timeout (but I am not sure why)\n      }, 250);\n    }\n  }, [errorTexts]);\n\n  useEffect(() => {\n    if (showComponent) {\n      const toRef = setTimeout(() => {\n        setShowComponent(false);\n        clearTimeout(toRef);\n        setErrorTexts([]);\n      }, 4000);\n    }\n  }, [showComponent]);\n\n  const componentTwo = () => (\n    <TouchableOpacity\n      style={styles.errorContainer}\n      onPress={() => { setShowComponent(!showComponent); }}\n    >\n\n      <Text style={styles.testText}>{errorTexts}</Text>\n\n    </TouchableOpacity>\n  );\n\n  return (\n\n    showComponent ? componentTwo() : null\n  );\n}\n\nexport default Error;\n","import React from 'react';\nimport {\n  View,\n  Text,\n  ImageBackground,\n  FlatList,\n} from 'react-native';\nimport { CardItemSmall } from '../components';\nimport DATA from '../assets/data/dummy_data_songs';\nimport styles from '../assets/styles';\nimport BG_IMAGE from '../assets/images/bg2.jpg';\nimport useSpotifyContext from '../hooks/useSpotifyAuth';\n\nfunction Liked() {\n  const { likedSongs, getLikedSongs, token } = useSpotifyContext();\n\n  React.useEffect(() => {\n    if (!likedSongs && token !== null) {\n      getLikedSongs();\n    }\n  }, [likedSongs, getLikedSongs, token]);\n\n  return (\n    <View>\n      <ImageBackground\n        source={BG_IMAGE}\n        style={styles.bg}\n      >\n        <View style={styles.containerLiked}>\n          <View style={styles.top}>\n            <Text style={styles.title}>Liked Songs</Text>\n          </View>\n          {/* <SafeAreaView>\n            <ScrollView> */}\n          {likedSongs ? (\n            <FlatList\n              numColumns={2}\n              data={likedSongs}\n              keyExtractor={(item, index) => index.toString()}\n              renderItem={({ item }) => (\n                <View>\n                  <CardItemSmall\n                    image={{ uri: item.track.album.images[0].url }}\n                    track={item.track.name}\n                    artist={item.track.artists[0].name}\n                  />\n                </View>\n              )}\n            />\n          ) : (\n            <FlatList\n              numColumns={2}\n              data={DATA}\n              keyExtractor={(item, index) => index.toString()}\n              renderItem={({ index, item }) => (\n                <View>\n                  <CardItemSmall\n                    id={index}\n                    image={item.image}\n                    track={item.track}\n                    artist={item.artist}\n                  />\n                </View>\n              )}\n            />\n          )}\n          {/* Ugly padding hack */}\n          <View>\n            <Text>Padding</Text>\n            <Text>Padding</Text>\n            <Text>Padding</Text>\n          </View>\n        </View>\n      </ImageBackground>\n    </View>\n  );\n}\n\nexport default Liked;\n","import React from 'react';\nimport {\n  Text,\n  TouchableOpacity,\n  ImageBackground,\n  View,\n  FlatList,\n} from 'react-native';\nimport { Icon, Message } from '../components';\nimport DEMO from '../assets/data/dummy_data_profiles';\nimport styles, { GRAY } from '../assets/styles';\nimport BG_IMAGE from '../assets/images/bg2.jpg';\n\nfunction Messages() {\n  return (\n    <View>\n      <ImageBackground\n        source={BG_IMAGE}\n        style={styles.bg}\n      >\n        <View style={styles.containerMessages}>\n          <View style={styles.top}>\n            <Text style={styles.title}>Messages</Text>\n            <TouchableOpacity>\n              <Icon name=\"person-add\" color={GRAY} size={20} style={styles.topIconRight} />\n            </TouchableOpacity>\n          </View>\n          <FlatList\n            data={DEMO}\n            keyExtractor={(item, index) => index.toString()}\n            renderItem={({ item }) => (\n              <TouchableOpacity>\n                <Message\n                  image={item.image}\n                  name={item.name}\n                  lastMessage={item.message}\n                />\n              </TouchableOpacity>\n            )}\n          />\n        </View>\n      </ImageBackground>\n    </View>\n  );\n}\n\nexport default Messages;\n","module.exports = __webpack_public_path__ + \"static/media/img01.a678bf12.jpeg\";","import React from 'react';\nimport {\n  ScrollView,\n  View,\n  ImageBackground,\n  TouchableOpacity,\n} from 'react-native';\nimport { Icon, ProfileItem } from '../components';\nimport DEMO from '../assets/data/dummy_data_profiles';\nimport styles, { WHITE } from '../assets/styles';\nimport BG_IMAGE from '../assets/images/bg2.jpg';\nimport useSpotifyContext from '../hooks/useSpotifyAuth';\nimport { getLocation } from '../components/utils/country-utils';\n\nfunction Profile() {\n  const {\n    user, topTracks, topArtists, topGenres,\n  } = useSpotifyContext();\n  const {\n    image,\n    topGenres: mockTopGenres,\n    topArtists: mockTopArtists,\n    topTracks: mockTopTracks,\n    name,\n    location,\n  } = DEMO[7];\n\n  return (\n\n    <View>\n      <View>\n        <ImageBackground\n          source={BG_IMAGE}\n          style={styles.bg}\n        />\n        <ScrollView style={styles.containerProfile}>\n          {user && user.images.length > 0 ? (\n            <ImageBackground source={{ uri: user.images[0].url }} style={styles.photo} />\n\n          ) : (\n            <ImageBackground source={image} style={styles.photo} />\n          )}\n\n          <View style={styles.top}>\n            <TouchableOpacity>\n              <Icon\n                name=\"swap-horizontal-outline\"\n                size={20}\n                color={WHITE}\n                style={styles.topIconLeft}\n              />\n            </TouchableOpacity>\n\n            <TouchableOpacity>\n              <Icon\n                name=\"ellipsis-vertical\"\n                size={20}\n                color={WHITE}\n                style={styles.topIconRight}\n              />\n            </TouchableOpacity>\n          </View>\n\n          {user ? (\n            <ProfileItem\n              followerCount={user.followers.total}\n              name={user.display_name}\n              location={getLocation(user.country)}\n              topTracks={topTracks}\n              topArtists={topArtists}\n              topGenres={topGenres}\n            />\n          ) : (\n            <ProfileItem\n              followerCount=\"20\"\n              name={name}\n              location={location}\n              topTracks={mockTopTracks}\n              topArtists={mockTopArtists}\n              topGenres={mockTopGenres}\n            />\n          )}\n        </ScrollView>\n      </View>\n    </View>\n  );\n}\n\nexport default Profile;\n","// create a react functional component\n\nimport React from 'react';\nimport {\n  View,\n  ImageBackground,\n} from 'react-native';\nimport BACKGROUND_IMAGE from '../assets/swiperr-splash.png';\nimport { CARD_HEIGHT, DIMENSION_HEIGHT } from '../assets/styles';\nimport { Login } from '../components';\nimport { LoginMock } from '../components/Login';\n\nfunction LoginPage({ navigation }: any) {\n  return (\n    <ImageBackground style={{ height: '100%' }} source={BACKGROUND_IMAGE}>\n      <View style={{ height: DIMENSION_HEIGHT }}>\n        <View style={{\n          display: 'flex',\n          alignItems: 'center',\n          marginTop: CARD_HEIGHT * 0.65,\n          // space between rows\n\n        }}\n        >\n          <Login navigation={navigation} />\n          <LoginMock navigation={navigation} />\n        </View>\n      </View>\n    </ImageBackground>\n  );\n}\n\nexport default LoginPage;\n","module.exports = __webpack_public_path__ + \"static/media/swiperr-splash.26a8d603.png\";","import React from 'react';\nimport { Text, View } from 'react-native';\nimport Icon from './Icon';\nimport styles, { GRAY, WHITE } from '../assets/styles';\nimport { TabBarIconT } from '../types';\n\nfunction TabBarIcon({ focused, iconName, text }: TabBarIconT) {\n  const iconFocused = focused ? WHITE : GRAY;\n\n  return (\n    <View style={styles.iconMenu}>\n      <Icon name={iconName} size={16} color={iconFocused} />\n      <Text style={[styles.tabButtonText, { color: iconFocused }]}>{text}</Text>\n    </View>\n  );\n}\n\nexport default TabBarIcon;\n","import {\n  View, ImageBackground, Text,\n} from 'react-native';\nimport React, { useState } from 'react';\nimport { CLIENT_ID, CLIENT_SECRET } from '@env';\nimport styles from '../assets/styles';\nimport BG_IMAGE from '../assets/images/bg2.jpg';\nimport { SettingItemSwitch } from '../components';\nimport SettingItemDropdown from '../components/SettingItemDropdown';\nimport useSpotifyContext from '../hooks/useSpotifyAuth';\nimport { getLocation } from '../components/utils/country-utils';\nimport { mobileRedirectUri, redirectUri, webRedirectUri } from '../hooks/utils/auth-utils';\nimport { dropdownSize } from '../types';\n\nconst likedSongString = 'Liked songs';\n\nfunction MockSettingItems() {\n  const [exampleBool, setExampleBool] = useState(false);\n  return (\n    <View>\n      <SettingItemDropdown\n        header=\"Country\"\n        explanation=\"Music will be adapted to the given country. New releases will be based on the country you choose.\"\n        defaultValue={'SE' || ''}\n        options={['SE', 'US', 'GB', 'CA']}\n      />\n\n      <SettingItemDropdown\n        header=\"Default Playlist\"\n        explanation=\"The default playlist where right swiped cards apear. Please only choose playlists that you own or can add music to.\"\n        options={['Playlist 1', 'Playlist 2', 'Playlist 3']}\n      />\n\n      <SettingItemSwitch\n        text=\"An example Switch\"\n        value={exampleBool}\n        onValueChange={() => setExampleBool(!exampleBool)}\n      />\n\n      <SettingItemDropdown\n        header=\"Debug info\"\n        explanation=\"This is debug info for development resons. If you are testing you can ignore this dropdown.\"\n        options={[\n          redirectUri,\n          webRedirectUri,\n          mobileRedirectUri,\n          CLIENT_ID !== undefined ? 'client id exists' : 'client id does not exist',\n          CLIENT_SECRET !== undefined ? 'client secret exists' : 'client secret does not exist']}\n        dropdownSize={dropdownSize.MEDIUM}\n      />\n\n    </View>\n  );\n}\n\nfunction SettingItems() {\n  const {\n    playlists,\n    defaultPlaylist,\n    storeDefaultPlaylist,\n    availableMarkets,\n    chosenMarket,\n    setChosenMarket,\n  } = useSpotifyContext();\n  const [playlistShowValue, setPlaylistShowValue] = useState(defaultPlaylist.name || likedSongString);\n\n  function setDefaultPlaylist(playlistName: string) {\n    if (playlistName === likedSongString) {\n      storeDefaultPlaylist(likedSongString);\n      return;\n    }\n    const playlist = playlists.find((playlist: { name: string; }) => playlist.name === playlistName);\n    storeDefaultPlaylist(playlist);\n  }\n\n  React.useEffect(() => {\n    Promise.resolve(defaultPlaylist).then((val: any) => {\n      setPlaylistShowValue(val.name || likedSongString);\n    });\n  }), [defaultPlaylist];\n\n  React.useEffect(() => {\n    Promise.resolve(defaultPlaylist).then((val: any) => {\n      setPlaylistShowValue(val.name || likedSongString);\n    });\n  }), [defaultPlaylist];\n\n  return (\n    <View>\n      <SettingItemDropdown\n        header=\"Country\"\n        explanation=\"Music will be adapted to the given country. New releases will be based on the country you choose.\"\n        defaultValue={getLocation(chosenMarket) || ''}\n        dropdownSize={dropdownSize.LARGE}\n        options={availableMarkets.map((\n          country: {\n            code: string,\n            name: string,\n            nameWithFlag: string\n          },\n        ) => country.nameWithFlag)}\n        onSelect={(value: string) => {\n          setChosenMarket(availableMarkets.find((country: {nameWithFlag: string}) => country.nameWithFlag === value).code);\n        }}\n      />\n\n      <SettingItemDropdown\n        header=\"Default Playlist\"\n        explanation=\"The default playlist where right swiped cards apear. Please only choose playlists that you own or can add music to.\"\n        options={[likedSongString, ...playlists.map((playlist: { name: string; }) => playlist.name)]}\n        defaultValue={playlistShowValue}\n        dropdownSize={dropdownSize.MEDIUM}\n        onSelect={(value: string) => {\n          setDefaultPlaylist(value);\n        }}\n      />\n      {/* Kinda works but cause WIERD crashes */}\n      {/* <SettingItemSwitch\n        text=\"Play Snippets\"\n        explanation=\"If you want to play snippets, turn this on. If you want to play full songs through spotify, turn this off.\"\n        value={playSnippets}\n        onValueChange={(value: boolean) => {\n          value ? pauseSpotify() : pauseSnippet();\n          setPlaySnippets(value);\n        }}\n\n      /> */}\n    </View>\n  );\n}\n\nfunction Settings() {\n  const { playlists, availableMarkets } = useSpotifyContext();\n  return (\n    <View>\n\n      <ImageBackground\n        source={BG_IMAGE}\n        style={styles.bg}\n      >\n        <View style={styles.top}>\n          <Text style={styles.title}>Settings</Text>\n        </View>\n        {playlists && playlists.length > 0 && availableMarkets && availableMarkets.length > 0\n          ? <SettingItems />\n          : <MockSettingItems />}\n      </ImageBackground>\n    </View>\n  );\n}\n\nexport default Settings;\n","import {\n  StyleSheet, Text, View,\n} from 'react-native';\nimport React from 'react';\nimport ModalDropdown from 'react-native-modal-dropdown';\nimport { dropdownSize, SettingItemDropdownT } from '../types';\nimport {\n  WHITE, GRAY, BLACK, DARKER_GRAY,\n} from '../assets/styles/index';\n\nfunction SettingItemDropdown({\n  header,\n  explanation,\n  options,\n  defaultValue,\n  onSelect,\n  dropdownSize: size,\n}: SettingItemDropdownT) {\n  const ddSize = size === dropdownSize.MEDIUM ? 300\n    : size === dropdownSize.LARGE ? 400\n      : 200;\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.textContainer}>\n        <Text style={styles.header}>{header}</Text>\n        <Text style={styles.explanation}>{explanation}</Text>\n      </View>\n      <ModalDropdown\n        style={styles.dropdownNonpress}\n        options={options}\n        defaultValue={defaultValue || 'Select an item...'}\n        dropdownStyle={[styles.dropdown, { height: ddSize }]}\n        dropdownTextHighlightStyle={styles.dropdownTextHighlight}\n        textStyle={styles.header}\n        showsVerticalScrollIndicator={false}\n        dropdownTextStyle={styles.dropdownText}\n        onSelect={(_index: any, value: any) => {\n          if (onSelect && value) {\n            onSelect(value);\n          }\n        }}\n      />\n    </View>\n  );\n}\n\nexport default SettingItemDropdown;\n\nconst styles = StyleSheet.create({\n  container: {\n    alignItems: 'center',\n    padding: 20,\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    borderBottomColor: GRAY,\n    borderBottomWidth: 1,\n    marginTop: -1,\n\n  },\n  header: {\n    fontSize: 18,\n    color: WHITE,\n  },\n  dropdown: {\n    width: 150,\n    height: 100,\n    borderColor: BLACK,\n    borderWidth: 1,\n    borderRadius: 3,\n  },\n  dropdownNonpress: {\n    borderBottomWidth: 1,\n    borderBottomColor: GRAY,\n    padding: 5,\n    width: '40%',\n  },\n  dropdownText: {\n    fontSize: 18,\n    color: GRAY,\n    backgroundColor: DARKER_GRAY,\n    borderColor: BLACK,\n  },\n  dropdownTextHighlight: {\n    color: WHITE,\n  },\n  explanation: {\n    fontSize: 14,\n    color: GRAY,\n  },\n  textContainer: {\n    flexDirection: 'column',\n    justifyContent: 'space-between',\n    width: '60%',\n  },\n});\n","import React, { createContext, useContext, useState } from 'react';\n\nconst ErrorContext: React.Context<{\n    errorTexts: string[];\n    addErrorText: (errorText: string) => void;\n    popErrorText: () => string | undefined;\n    setErrorTexts: any;\n    showComponent: boolean | null,\n    setShowComponent: any;\n}> = createContext({\n  errorTexts: [],\n  addErrorText: () => {},\n  popErrorText: () => {},\n  setErrorTexts: () => {},\n  showComponent: null,\n  setShowComponent: () => {},\n\n});\n\ninterface Props {\n    children: React.ReactNode\n  }\n\nexport const ErrorProvider: React.ReactNode = ({ children }: Props) => {\n  const [errorTexts, setErrorTexts] = useState<string[]>([]);\n  const [showComponent, setShowComponent] = useState(false);\n\n  function addErrorText(text: string) {\n    const newArray = errorTexts.concat(text);\n    setErrorTexts(newArray);\n  }\n\n  function popErrorText() {\n    // pop item from array\n    if (errorTexts.length > 0) {\n      const item = errorTexts[0];\n      const newArray = errorTexts.slice(1);\n      setErrorTexts(newArray);\n      return item;\n    }\n    console.log('Fatal: no items');\n  }\n\n  return (\n    <ErrorContext.Provider value={{\n      errorTexts,\n      addErrorText,\n      popErrorText,\n      showComponent,\n      setShowComponent,\n      setErrorTexts,\n    }}\n    >\n      {children}\n    </ErrorContext.Provider>\n  );\n};\n\nexport default function useError() {\n  return useContext(ErrorContext);\n}\n","module.exports = __webpack_public_path__ + \"static/media/bg2.a5ed1007.jpg\";"],"sourceRoot":""}